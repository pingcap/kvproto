// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tikvpb.proto

#include "tikvpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace tikvpb {
}  // namespace tikvpb
void InitDefaults_tikvpb_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_tikvpb_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_tikvpb_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_tikvpb_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_tikvpb_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static constexpr ::google::protobuf::Message* const* file_default_instances = NULL;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_tikvpb_2eproto = {
  {}, AddDescriptors_tikvpb_2eproto, "tikvpb.proto", schemas,
  file_default_instances, TableStruct_tikvpb_2eproto::offsets,
  file_level_metadata_tikvpb_2eproto, 0, file_level_enum_descriptors_tikvpb_2eproto, file_level_service_descriptors_tikvpb_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_tikvpb_2eproto = {
  false, InitDefaults_tikvpb_2eproto, 
  "\n\014tikvpb.proto\022\006tikvpb\032\021coprocessor.prot"
  "o\032\rkvrpcpb.proto\032\023raft_serverpb.proto\032\024g"
  "ogoproto/gogo.proto2\223\020\n\004Tikv\0224\n\005KvGet\022\023."
  "kvrpcpb.GetRequest\032\024.kvrpcpb.GetResponse"
  "\"\000\0227\n\006KvScan\022\024.kvrpcpb.ScanRequest\032\025.kvr"
  "pcpb.ScanResponse\"\000\022C\n\nKvPrewrite\022\030.kvrp"
  "cpb.PrewriteRequest\032\031.kvrpcpb.PrewriteRe"
  "sponse\"\000\022=\n\010KvCommit\022\026.kvrpcpb.CommitReq"
  "uest\032\027.kvrpcpb.CommitResponse\"\000\022=\n\010KvImp"
  "ort\022\026.kvrpcpb.ImportRequest\032\027.kvrpcpb.Im"
  "portResponse\"\000\022@\n\tKvCleanup\022\027.kvrpcpb.Cl"
  "eanupRequest\032\030.kvrpcpb.CleanupResponse\"\000"
  "\022C\n\nKvBatchGet\022\030.kvrpcpb.BatchGetRequest"
  "\032\031.kvrpcpb.BatchGetResponse\"\000\022R\n\017KvBatch"
  "Rollback\022\035.kvrpcpb.BatchRollbackRequest\032"
  "\036.kvrpcpb.BatchRollbackResponse\"\000\022C\n\nKvS"
  "canLock\022\030.kvrpcpb.ScanLockRequest\032\031.kvrp"
  "cpb.ScanLockResponse\"\000\022L\n\rKvResolveLock\022"
  "\033.kvrpcpb.ResolveLockRequest\032\034.kvrpcpb.R"
  "esolveLockResponse\"\000\0221\n\004KvGC\022\022.kvrpcpb.G"
  "CRequest\032\023.kvrpcpb.GCResponse\"\000\022L\n\rKvDel"
  "eteRange\022\033.kvrpcpb.DeleteRangeRequest\032\034."
  "kvrpcpb.DeleteRangeResponse\"\000\022;\n\006RawGet\022"
  "\026.kvrpcpb.RawGetRequest\032\027.kvrpcpb.RawGet"
  "Response\"\000\022J\n\013RawBatchGet\022\033.kvrpcpb.RawB"
  "atchGetRequest\032\034.kvrpcpb.RawBatchGetResp"
  "onse\"\000\022;\n\006RawPut\022\026.kvrpcpb.RawPutRequest"
  "\032\027.kvrpcpb.RawPutResponse\"\000\022J\n\013RawBatchP"
  "ut\022\033.kvrpcpb.RawBatchPutRequest\032\034.kvrpcp"
  "b.RawBatchPutResponse\"\000\022D\n\tRawDelete\022\031.k"
  "vrpcpb.RawDeleteRequest\032\032.kvrpcpb.RawDel"
  "eteResponse\"\000\022S\n\016RawBatchDelete\022\036.kvrpcp"
  "b.RawBatchDeleteRequest\032\037.kvrpcpb.RawBat"
  "chDeleteResponse\"\000\022>\n\007RawScan\022\027.kvrpcpb."
  "RawScanRequest\032\030.kvrpcpb.RawScanResponse"
  "\"\000\022S\n\016RawDeleteRange\022\036.kvrpcpb.RawDelete"
  "RangeRequest\032\037.kvrpcpb.RawDeleteRangeRes"
  "ponse\"\000\022M\n\014RawBatchScan\022\034.kvrpcpb.RawBat"
  "chScanRequest\032\035.kvrpcpb.RawBatchScanResp"
  "onse\"\000\022_\n\022UnsafeDestroyRange\022\".kvrpcpb.U"
  "nsafeDestroyRangeRequest\032#.kvrpcpb.Unsaf"
  "eDestroyRangeResponse\"\000\022<\n\013Coprocessor\022\024"
  ".coprocessor.Request\032\025.coprocessor.Respo"
  "nse\"\000\022D\n\021CoprocessorStream\022\024.coprocessor"
  ".Request\032\025.coprocessor.Response\"\0000\001\022;\n\004R"
  "aft\022\032.raft_serverpb.RaftMessage\032\023.raft_s"
  "erverpb.Done\"\000(\001\022A\n\010Snapshot\022\034.raft_serv"
  "erpb.SnapshotChunk\032\023.raft_serverpb.Done\""
  "\000(\001\022J\n\013SplitRegion\022\033.kvrpcpb.SplitRegion"
  "Request\032\034.kvrpcpb.SplitRegionResponse\"\000\022"
  "M\n\014MvccGetByKey\022\034.kvrpcpb.MvccGetByKeyRe"
  "quest\032\035.kvrpcpb.MvccGetByKeyResponse\"\000\022Y"
  "\n\020MvccGetByStartTs\022 .kvrpcpb.MvccGetBySt"
  "artTsRequest\032!.kvrpcpb.MvccGetByStartTsR"
  "esponse\"\000B&\n\030com.pingcap.tikv.kvproto\340\342\036"
  "\001\310\342\036\001\320\342\036\001b\006proto3"
,
  "tikvpb.proto", &assign_descriptors_table_tikvpb_2eproto, 2217,
};

void AddDescriptors_tikvpb_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_coprocessor_2eproto,
    ::AddDescriptors_kvrpcpb_2eproto,
    ::AddDescriptors_raft_5fserverpb_2eproto,
    ::AddDescriptors_gogoproto_2fgogo_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_tikvpb_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tikvpb_2eproto = []() { AddDescriptors_tikvpb_2eproto(); return true; }();
namespace tikvpb {

// @@protoc_insertion_point(namespace_scope)
}  // namespace tikvpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
