// Code generated by protoc-gen-go.
// source: msgpb.proto
// DO NOT EDIT!

/*
Package msgpb is a generated protocol buffer package.

It is generated from these files:
	msgpb.proto

It has these top-level messages:
	Message
*/
package msgpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import raft_cmdpb "github.com/pingcap/kvproto/pkg/raft_cmdpb"
import raft_storepb "github.com/pingcap/kvproto/pkg/raft_storepb"
import kvrpcpb "github.com/pingcap/kvproto/pkg/kvrpcpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MessageType int32

const (
	MessageType_None    MessageType = 0
	MessageType_Cmd     MessageType = 1
	MessageType_CmdResp MessageType = 2
	MessageType_Raft    MessageType = 3
	MessageType_KvReq   MessageType = 4
	MessageType_KvResp  MessageType = 5
)

var MessageType_name = map[int32]string{
	0: "None",
	1: "Cmd",
	2: "CmdResp",
	3: "Raft",
	4: "KvReq",
	5: "KvResp",
}
var MessageType_value = map[string]int32{
	"None":    0,
	"Cmd":     1,
	"CmdResp": 2,
	"Raft":    3,
	"KvReq":   4,
	"KvResp":  5,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Message holds all messages communicating with TiKV.
type Message struct {
	MsgType          *MessageType                `protobuf:"varint,1,opt,name=msg_type,enum=msgpb.MessageType" json:"msg_type,omitempty"`
	CmdReq           *raft_cmdpb.RaftCmdRequest  `protobuf:"bytes,2,opt,name=cmd_req" json:"cmd_req,omitempty"`
	CmdResp          *raft_cmdpb.RaftCmdResponse `protobuf:"bytes,3,opt,name=cmd_resp" json:"cmd_resp,omitempty"`
	Raft             *raft_storepb.RaftMessage   `protobuf:"bytes,4,opt,name=raft" json:"raft,omitempty"`
	KvReq            *kvrpcpb.Request            `protobuf:"bytes,5,opt,name=kv_req" json:"kv_req,omitempty"`
	KvResp           *kvrpcpb.Response           `protobuf:"bytes,6,opt,name=kv_resp" json:"kv_resp,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetMsgType() MessageType {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return MessageType_None
}

func (m *Message) GetCmdReq() *raft_cmdpb.RaftCmdRequest {
	if m != nil {
		return m.CmdReq
	}
	return nil
}

func (m *Message) GetCmdResp() *raft_cmdpb.RaftCmdResponse {
	if m != nil {
		return m.CmdResp
	}
	return nil
}

func (m *Message) GetRaft() *raft_storepb.RaftMessage {
	if m != nil {
		return m.Raft
	}
	return nil
}

func (m *Message) GetKvReq() *kvrpcpb.Request {
	if m != nil {
		return m.KvReq
	}
	return nil
}

func (m *Message) GetKvResp() *kvrpcpb.Response {
	if m != nil {
		return m.KvResp
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "msgpb.Message")
	proto.RegisterEnum("msgpb.MessageType", MessageType_name, MessageType_value)
}

var fileDescriptor0 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8f, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x49, 0xf3, 0xe1, 0x70, 0x11, 0xc8, 0xdc, 0x14, 0xc2, 0x52, 0x55, 0x48, 0x20, 0x10,
	0x1e, 0xfa, 0x17, 0x18, 0x11, 0x1d, 0x2a, 0xf6, 0xa8, 0xb4, 0xa6, 0x43, 0x95, 0xda, 0xb5, 0x4d,
	0x24, 0xfe, 0x3a, 0x13, 0x67, 0x27, 0x46, 0x41, 0x62, 0xf3, 0xdd, 0xfb, 0xc8, 0xcf, 0x7b, 0x50,
	0x75, 0x76, 0xaf, 0xdf, 0x85, 0x36, 0xca, 0x29, 0xcc, 0xc3, 0xd0, 0x70, 0xb3, 0xf9, 0x70, 0xed,
	0xb6, 0xdb, 0xc5, 0xa0, 0xc1, 0xb0, 0xb1, 0x4e, 0x19, 0xf9, 0xbb, 0xbb, 0x38, 0xf4, 0x46, 0x6f,
	0xe3, 0xb8, 0xf8, 0x4e, 0x80, 0xbd, 0x4a, 0x6b, 0x37, 0x7b, 0x89, 0xb7, 0x50, 0xd2, 0x4f, 0xad,
	0xfb, 0xd2, 0xb2, 0x4e, 0xe6, 0xc9, 0xfd, 0xe5, 0x12, 0xc5, 0xe0, 0x19, 0x89, 0x37, 0x4a, 0xf0,
	0x11, 0x18, 0x39, 0x5a, 0x23, 0x4f, 0xf5, 0x8c, 0xa0, 0x6a, 0xd9, 0x88, 0x89, 0x78, 0x4d, 0xcf,
	0xe7, 0x6e, 0xb7, 0x96, 0xa7, 0x4f, 0x69, 0x1d, 0x3e, 0x41, 0x39, 0xc0, 0x56, 0xd7, 0x69, 0xa0,
	0x6f, 0xfe, 0xa5, 0xad, 0x56, 0x47, 0x2b, 0xf1, 0x0e, 0x32, 0x9f, 0xd6, 0x59, 0x40, 0xaf, 0xc5,
	0x9f, 0xfe, 0x1e, 0x8e, 0x55, 0xe7, 0x50, 0x1c, 0xfa, 0xd0, 0x21, 0x0f, 0x28, 0x17, 0xf1, 0xac,
	0x68, 0x5e, 0x00, 0x0b, 0x04, 0x89, 0x8b, 0x80, 0x5c, 0x4d, 0x90, 0x41, 0xf7, 0xb0, 0x82, 0x6a,
	0x7a, 0x59, 0x09, 0xd9, 0x4a, 0x1d, 0x25, 0x3f, 0x43, 0x06, 0x29, 0xd5, 0xe2, 0x09, 0x56, 0xc0,
	0xc6, 0x7e, 0x7c, 0xe6, 0x73, 0xdf, 0x81, 0xa7, 0x78, 0x0e, 0xf9, 0x4b, 0x4f, 0x26, 0x9e, 0x21,
	0x40, 0xe1, 0x9f, 0x04, 0xe4, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x4d, 0xbf, 0x93, 0x96,
	0x01, 0x00, 0x00,
}
