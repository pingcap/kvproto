// Code generated by protoc-gen-go.
// source: kvrpcpb.proto
// DO NOT EDIT!

/*
Package kvrpcpb is a generated protocol buffer package.

It is generated from these files:
	kvrpcpb.proto

It has these top-level messages:
	LockInfo
	KeyError
	Context
	CmdGetRequest
	CmdGetResponse
	CmdScanRequest
	KvPair
	CmdScanResponse
	Mutation
	CmdPrewriteRequest
	CmdPrewriteResponse
	CmdCommitRequest
	CmdCommitResponse
	CmdFastCommitRequest
	CmdFastCommitResponse
	CmdBatchRollbackRequest
	CmdBatchRollbackResponse
	CmdCleanupRequest
	CmdCleanupResponse
	CmdRollbackThenGetRequest
	CmdRollbackThenGetResponse
	CmdCommitThenGetRequest
	CmdCommitThenGetResponse
	CmdBatchGetRequest
	CmdBatchGetResponse
	Request
	Response
*/
package kvrpcpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metapb "github.com/pingcap/kvproto/pkg/metapb"
import errorpb "github.com/pingcap/kvproto/pkg/errorpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MessageType int32

const (
	MessageType_CmdGet      MessageType = 1
	MessageType_CmdScan     MessageType = 2
	MessageType_CmdPrewrite MessageType = 3
	MessageType_CmdCommit   MessageType = 4
	MessageType_CmdCleanup  MessageType = 5
	// Below types both use for Get failed. If Get failed, it may be locked.
	// So it tries to clean primary lock(CmdCleanup), and then server will return
	// either committed or rolled back. Finally, client will commit/rollback
	// primary lock and then Get again.
	MessageType_CmdRollbackThenGet MessageType = 6
	MessageType_CmdCommitThenGet   MessageType = 7
	MessageType_CmdBatchGet        MessageType = 8
	MessageType_CmdBatchRollback   MessageType = 9
	MessageType_CmdFastCommit      MessageType = 10
)

var MessageType_name = map[int32]string{
	1:  "CmdGet",
	2:  "CmdScan",
	3:  "CmdPrewrite",
	4:  "CmdCommit",
	5:  "CmdCleanup",
	6:  "CmdRollbackThenGet",
	7:  "CmdCommitThenGet",
	8:  "CmdBatchGet",
	9:  "CmdBatchRollback",
	10: "CmdFastCommit",
}
var MessageType_value = map[string]int32{
	"CmdGet":             1,
	"CmdScan":            2,
	"CmdPrewrite":        3,
	"CmdCommit":          4,
	"CmdCleanup":         5,
	"CmdRollbackThenGet": 6,
	"CmdCommitThenGet":   7,
	"CmdBatchGet":        8,
	"CmdBatchRollback":   9,
	"CmdFastCommit":      10,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Op int32

const (
	Op_Put  Op = 1
	Op_Del  Op = 2
	Op_Lock Op = 3
)

var Op_name = map[int32]string{
	1: "Put",
	2: "Del",
	3: "Lock",
}
var Op_value = map[string]int32{
	"Put":  1,
	"Del":  2,
	"Lock": 3,
}

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}
func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}
func (x *Op) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Op_value, data, "Op")
	if err != nil {
		return err
	}
	*x = Op(value)
	return nil
}
func (Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LockInfo struct {
	PrimaryLock      []byte  `protobuf:"bytes,1,opt,name=primary_lock" json:"primary_lock,omitempty"`
	LockVersion      *uint64 `protobuf:"varint,2,opt,name=lock_version" json:"lock_version,omitempty"`
	Key              []byte  `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LockInfo) Reset()                    { *m = LockInfo{} }
func (m *LockInfo) String() string            { return proto.CompactTextString(m) }
func (*LockInfo) ProtoMessage()               {}
func (*LockInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LockInfo) GetPrimaryLock() []byte {
	if m != nil {
		return m.PrimaryLock
	}
	return nil
}

func (m *LockInfo) GetLockVersion() uint64 {
	if m != nil && m.LockVersion != nil {
		return *m.LockVersion
	}
	return 0
}

func (m *LockInfo) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type KeyError struct {
	Locked           *LockInfo `protobuf:"bytes,1,opt,name=locked" json:"locked,omitempty"`
	Retryable        *string   `protobuf:"bytes,2,opt,name=retryable" json:"retryable,omitempty"`
	Abort            *string   `protobuf:"bytes,3,opt,name=abort" json:"abort,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KeyError) Reset()                    { *m = KeyError{} }
func (m *KeyError) String() string            { return proto.CompactTextString(m) }
func (*KeyError) ProtoMessage()               {}
func (*KeyError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *KeyError) GetLocked() *LockInfo {
	if m != nil {
		return m.Locked
	}
	return nil
}

func (m *KeyError) GetRetryable() string {
	if m != nil && m.Retryable != nil {
		return *m.Retryable
	}
	return ""
}

func (m *KeyError) GetAbort() string {
	if m != nil && m.Abort != nil {
		return *m.Abort
	}
	return ""
}

type Context struct {
	RegionId         *uint64             `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	RegionEpoch      *metapb.RegionEpoch `protobuf:"bytes,2,opt,name=region_epoch" json:"region_epoch,omitempty"`
	Peer             *metapb.Peer        `protobuf:"bytes,3,opt,name=peer" json:"peer,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Context) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *Context) GetRegionEpoch() *metapb.RegionEpoch {
	if m != nil {
		return m.RegionEpoch
	}
	return nil
}

func (m *Context) GetPeer() *metapb.Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type CmdGetRequest struct {
	Key              []byte  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Version          *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdGetRequest) Reset()                    { *m = CmdGetRequest{} }
func (m *CmdGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdGetRequest) ProtoMessage()               {}
func (*CmdGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CmdGetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdGetRequest) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CmdGetResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Value            []byte    `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdGetResponse) Reset()                    { *m = CmdGetResponse{} }
func (m *CmdGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdGetResponse) ProtoMessage()               {}
func (*CmdGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CmdGetResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CmdGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdScanRequest struct {
	StartKey         []byte  `protobuf:"bytes,1,opt,name=start_key" json:"start_key,omitempty"`
	Limit            *uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Version          *uint64 `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdScanRequest) Reset()                    { *m = CmdScanRequest{} }
func (m *CmdScanRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdScanRequest) ProtoMessage()               {}
func (*CmdScanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CmdScanRequest) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *CmdScanRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *CmdScanRequest) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type KvPair struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Key              []byte    `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value            []byte    `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KvPair) Reset()                    { *m = KvPair{} }
func (m *KvPair) String() string            { return proto.CompactTextString(m) }
func (*KvPair) ProtoMessage()               {}
func (*KvPair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *KvPair) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *KvPair) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KvPair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdScanResponse struct {
	Pairs            []*KvPair `protobuf:"bytes,1,rep,name=pairs" json:"pairs,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdScanResponse) Reset()                    { *m = CmdScanResponse{} }
func (m *CmdScanResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdScanResponse) ProtoMessage()               {}
func (*CmdScanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CmdScanResponse) GetPairs() []*KvPair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

type Mutation struct {
	Op               *Op    `protobuf:"varint,1,opt,name=op,enum=kvrpcpb.Op" json:"op,omitempty"`
	Key              []byte `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Mutation) Reset()                    { *m = Mutation{} }
func (m *Mutation) String() string            { return proto.CompactTextString(m) }
func (*Mutation) ProtoMessage()               {}
func (*Mutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Mutation) GetOp() Op {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return Op_Put
}

func (m *Mutation) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Mutation) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdPrewriteRequest struct {
	Mutations []*Mutation `protobuf:"bytes,1,rep,name=mutations" json:"mutations,omitempty"`
	// primary_lock_key
	PrimaryLock      []byte  `protobuf:"bytes,2,opt,name=primary_lock" json:"primary_lock,omitempty"`
	StartVersion     *uint64 `protobuf:"varint,3,opt,name=start_version" json:"start_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdPrewriteRequest) Reset()                    { *m = CmdPrewriteRequest{} }
func (m *CmdPrewriteRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdPrewriteRequest) ProtoMessage()               {}
func (*CmdPrewriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CmdPrewriteRequest) GetMutations() []*Mutation {
	if m != nil {
		return m.Mutations
	}
	return nil
}

func (m *CmdPrewriteRequest) GetPrimaryLock() []byte {
	if m != nil {
		return m.PrimaryLock
	}
	return nil
}

func (m *CmdPrewriteRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

type CmdPrewriteResponse struct {
	Errors           []*KeyError `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CmdPrewriteResponse) Reset()                    { *m = CmdPrewriteResponse{} }
func (m *CmdPrewriteResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdPrewriteResponse) ProtoMessage()               {}
func (*CmdPrewriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CmdPrewriteResponse) GetErrors() []*KeyError {
	if m != nil {
		return m.Errors
	}
	return nil
}

type CmdCommitRequest struct {
	StartVersion     *uint64  `protobuf:"varint,1,opt,name=start_version" json:"start_version,omitempty"`
	Keys             [][]byte `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	CommitVersion    *uint64  `protobuf:"varint,3,opt,name=commit_version" json:"commit_version,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CmdCommitRequest) Reset()                    { *m = CmdCommitRequest{} }
func (m *CmdCommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitRequest) ProtoMessage()               {}
func (*CmdCommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CmdCommitRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

func (m *CmdCommitRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CmdCommitRequest) GetCommitVersion() uint64 {
	if m != nil && m.CommitVersion != nil {
		return *m.CommitVersion
	}
	return 0
}

type CmdCommitResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdCommitResponse) Reset()                    { *m = CmdCommitResponse{} }
func (m *CmdCommitResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitResponse) ProtoMessage()               {}
func (*CmdCommitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CmdCommitResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

type CmdFastCommitRequest struct {
	Mutations        []*Mutation `protobuf:"bytes,1,rep,name=mutations" json:"mutations,omitempty"`
	StartVersion     *uint64     `protobuf:"varint,2,opt,name=start_version" json:"start_version,omitempty"`
	CommitVersion    *uint64     `protobuf:"varint,3,opt,name=commit_version" json:"commit_version,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CmdFastCommitRequest) Reset()                    { *m = CmdFastCommitRequest{} }
func (m *CmdFastCommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdFastCommitRequest) ProtoMessage()               {}
func (*CmdFastCommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CmdFastCommitRequest) GetMutations() []*Mutation {
	if m != nil {
		return m.Mutations
	}
	return nil
}

func (m *CmdFastCommitRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

func (m *CmdFastCommitRequest) GetCommitVersion() uint64 {
	if m != nil && m.CommitVersion != nil {
		return *m.CommitVersion
	}
	return 0
}

type CmdFastCommitResponse struct {
	Errors           []*KeyError `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CmdFastCommitResponse) Reset()                    { *m = CmdFastCommitResponse{} }
func (m *CmdFastCommitResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdFastCommitResponse) ProtoMessage()               {}
func (*CmdFastCommitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CmdFastCommitResponse) GetErrors() []*KeyError {
	if m != nil {
		return m.Errors
	}
	return nil
}

type CmdBatchRollbackRequest struct {
	StartVersion     *uint64  `protobuf:"varint,1,opt,name=start_version" json:"start_version,omitempty"`
	Keys             [][]byte `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CmdBatchRollbackRequest) Reset()                    { *m = CmdBatchRollbackRequest{} }
func (m *CmdBatchRollbackRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdBatchRollbackRequest) ProtoMessage()               {}
func (*CmdBatchRollbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CmdBatchRollbackRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

func (m *CmdBatchRollbackRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CmdBatchRollbackResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdBatchRollbackResponse) Reset()                    { *m = CmdBatchRollbackResponse{} }
func (m *CmdBatchRollbackResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdBatchRollbackResponse) ProtoMessage()               {}
func (*CmdBatchRollbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CmdBatchRollbackResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

type CmdCleanupRequest struct {
	Key              []byte  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	StartVersion     *uint64 `protobuf:"varint,2,opt,name=start_version" json:"start_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdCleanupRequest) Reset()                    { *m = CmdCleanupRequest{} }
func (m *CmdCleanupRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdCleanupRequest) ProtoMessage()               {}
func (*CmdCleanupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CmdCleanupRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdCleanupRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

type CmdCleanupResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	CommitVersion    *uint64   `protobuf:"varint,2,opt,name=commit_version" json:"commit_version,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdCleanupResponse) Reset()                    { *m = CmdCleanupResponse{} }
func (m *CmdCleanupResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdCleanupResponse) ProtoMessage()               {}
func (*CmdCleanupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CmdCleanupResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CmdCleanupResponse) GetCommitVersion() uint64 {
	if m != nil && m.CommitVersion != nil {
		return *m.CommitVersion
	}
	return 0
}

type CmdRollbackThenGetRequest struct {
	Key              []byte  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	LockVersion      *uint64 `protobuf:"varint,2,opt,name=lock_version" json:"lock_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdRollbackThenGetRequest) Reset()                    { *m = CmdRollbackThenGetRequest{} }
func (m *CmdRollbackThenGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdRollbackThenGetRequest) ProtoMessage()               {}
func (*CmdRollbackThenGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CmdRollbackThenGetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdRollbackThenGetRequest) GetLockVersion() uint64 {
	if m != nil && m.LockVersion != nil {
		return *m.LockVersion
	}
	return 0
}

type CmdRollbackThenGetResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Value            []byte    `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdRollbackThenGetResponse) Reset()                    { *m = CmdRollbackThenGetResponse{} }
func (m *CmdRollbackThenGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdRollbackThenGetResponse) ProtoMessage()               {}
func (*CmdRollbackThenGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CmdRollbackThenGetResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CmdRollbackThenGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdCommitThenGetRequest struct {
	Key              []byte  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	LockVersion      *uint64 `protobuf:"varint,2,opt,name=lock_version" json:"lock_version,omitempty"`
	CommitVersion    *uint64 `protobuf:"varint,3,opt,name=commit_version" json:"commit_version,omitempty"`
	GetVersion       *uint64 `protobuf:"varint,4,opt,name=get_version" json:"get_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdCommitThenGetRequest) Reset()                    { *m = CmdCommitThenGetRequest{} }
func (m *CmdCommitThenGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitThenGetRequest) ProtoMessage()               {}
func (*CmdCommitThenGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CmdCommitThenGetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdCommitThenGetRequest) GetLockVersion() uint64 {
	if m != nil && m.LockVersion != nil {
		return *m.LockVersion
	}
	return 0
}

func (m *CmdCommitThenGetRequest) GetCommitVersion() uint64 {
	if m != nil && m.CommitVersion != nil {
		return *m.CommitVersion
	}
	return 0
}

func (m *CmdCommitThenGetRequest) GetGetVersion() uint64 {
	if m != nil && m.GetVersion != nil {
		return *m.GetVersion
	}
	return 0
}

type CmdCommitThenGetResponse struct {
	Error            *KeyError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Value            []byte    `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdCommitThenGetResponse) Reset()                    { *m = CmdCommitThenGetResponse{} }
func (m *CmdCommitThenGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitThenGetResponse) ProtoMessage()               {}
func (*CmdCommitThenGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CmdCommitThenGetResponse) GetError() *KeyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CmdCommitThenGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdBatchGetRequest struct {
	Keys             [][]byte `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Version          *uint64  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CmdBatchGetRequest) Reset()                    { *m = CmdBatchGetRequest{} }
func (m *CmdBatchGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdBatchGetRequest) ProtoMessage()               {}
func (*CmdBatchGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CmdBatchGetRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CmdBatchGetRequest) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CmdBatchGetResponse struct {
	Pairs            []*KvPair `protobuf:"bytes,1,rep,name=pairs" json:"pairs,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdBatchGetResponse) Reset()                    { *m = CmdBatchGetResponse{} }
func (m *CmdBatchGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdBatchGetResponse) ProtoMessage()               {}
func (*CmdBatchGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CmdBatchGetResponse) GetPairs() []*KvPair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

type Request struct {
	Type                *MessageType               `protobuf:"varint,1,opt,name=type,enum=kvrpcpb.MessageType" json:"type,omitempty"`
	Context             *Context                   `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	CmdGetReq           *CmdGetRequest             `protobuf:"bytes,3,opt,name=cmd_get_req" json:"cmd_get_req,omitempty"`
	CmdScanReq          *CmdScanRequest            `protobuf:"bytes,4,opt,name=cmd_scan_req" json:"cmd_scan_req,omitempty"`
	CmdPrewriteReq      *CmdPrewriteRequest        `protobuf:"bytes,5,opt,name=cmd_prewrite_req" json:"cmd_prewrite_req,omitempty"`
	CmdCommitReq        *CmdCommitRequest          `protobuf:"bytes,6,opt,name=cmd_commit_req" json:"cmd_commit_req,omitempty"`
	CmdCleanupReq       *CmdCleanupRequest         `protobuf:"bytes,7,opt,name=cmd_cleanup_req" json:"cmd_cleanup_req,omitempty"`
	CmdRbGetReq         *CmdRollbackThenGetRequest `protobuf:"bytes,8,opt,name=cmd_rb_get_req" json:"cmd_rb_get_req,omitempty"`
	CmdCommitGetReq     *CmdCommitThenGetRequest   `protobuf:"bytes,9,opt,name=cmd_commit_get_req" json:"cmd_commit_get_req,omitempty"`
	CmdBatchGetReq      *CmdBatchGetRequest        `protobuf:"bytes,10,opt,name=cmd_batch_get_req" json:"cmd_batch_get_req,omitempty"`
	CmdBatchRollbackReq *CmdBatchRollbackRequest   `protobuf:"bytes,11,opt,name=cmd_batch_rollback_req" json:"cmd_batch_rollback_req,omitempty"`
	CmdFastCommitReq    *CmdFastCommitRequest      `protobuf:"bytes,12,opt,name=cmd_fast_commit_req" json:"cmd_fast_commit_req,omitempty"`
	XXX_unrecognized    []byte                     `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Request) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_CmdGet
}

func (m *Request) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Request) GetCmdGetReq() *CmdGetRequest {
	if m != nil {
		return m.CmdGetReq
	}
	return nil
}

func (m *Request) GetCmdScanReq() *CmdScanRequest {
	if m != nil {
		return m.CmdScanReq
	}
	return nil
}

func (m *Request) GetCmdPrewriteReq() *CmdPrewriteRequest {
	if m != nil {
		return m.CmdPrewriteReq
	}
	return nil
}

func (m *Request) GetCmdCommitReq() *CmdCommitRequest {
	if m != nil {
		return m.CmdCommitReq
	}
	return nil
}

func (m *Request) GetCmdCleanupReq() *CmdCleanupRequest {
	if m != nil {
		return m.CmdCleanupReq
	}
	return nil
}

func (m *Request) GetCmdRbGetReq() *CmdRollbackThenGetRequest {
	if m != nil {
		return m.CmdRbGetReq
	}
	return nil
}

func (m *Request) GetCmdCommitGetReq() *CmdCommitThenGetRequest {
	if m != nil {
		return m.CmdCommitGetReq
	}
	return nil
}

func (m *Request) GetCmdBatchGetReq() *CmdBatchGetRequest {
	if m != nil {
		return m.CmdBatchGetReq
	}
	return nil
}

func (m *Request) GetCmdBatchRollbackReq() *CmdBatchRollbackRequest {
	if m != nil {
		return m.CmdBatchRollbackReq
	}
	return nil
}

func (m *Request) GetCmdFastCommitReq() *CmdFastCommitRequest {
	if m != nil {
		return m.CmdFastCommitReq
	}
	return nil
}

type Response struct {
	Type                 *MessageType                `protobuf:"varint,1,opt,name=type,enum=kvrpcpb.MessageType" json:"type,omitempty"`
	RegionError          *errorpb.Error              `protobuf:"bytes,2,opt,name=region_error" json:"region_error,omitempty"`
	CmdGetResp           *CmdGetResponse             `protobuf:"bytes,3,opt,name=cmd_get_resp" json:"cmd_get_resp,omitempty"`
	CmdScanResp          *CmdScanResponse            `protobuf:"bytes,4,opt,name=cmd_scan_resp" json:"cmd_scan_resp,omitempty"`
	CmdPrewriteResp      *CmdPrewriteResponse        `protobuf:"bytes,5,opt,name=cmd_prewrite_resp" json:"cmd_prewrite_resp,omitempty"`
	CmdCommitResp        *CmdCommitResponse          `protobuf:"bytes,6,opt,name=cmd_commit_resp" json:"cmd_commit_resp,omitempty"`
	CmdCleanupResp       *CmdCleanupResponse         `protobuf:"bytes,7,opt,name=cmd_cleanup_resp" json:"cmd_cleanup_resp,omitempty"`
	CmdRbGetResp         *CmdRollbackThenGetResponse `protobuf:"bytes,8,opt,name=cmd_rb_get_resp" json:"cmd_rb_get_resp,omitempty"`
	CmdCommitGetResp     *CmdCommitThenGetResponse   `protobuf:"bytes,9,opt,name=cmd_commit_get_resp" json:"cmd_commit_get_resp,omitempty"`
	CmdBatchGetResp      *CmdBatchGetResponse        `protobuf:"bytes,10,opt,name=cmd_batch_get_resp" json:"cmd_batch_get_resp,omitempty"`
	CmdBatchRollbackResp *CmdBatchRollbackResponse   `protobuf:"bytes,11,opt,name=cmd_batch_rollback_resp" json:"cmd_batch_rollback_resp,omitempty"`
	CmdFastCommitResp    *CmdFastCommitResponse      `protobuf:"bytes,12,opt,name=cmd_fast_commit_resp" json:"cmd_fast_commit_resp,omitempty"`
	XXX_unrecognized     []byte                      `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Response) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_CmdGet
}

func (m *Response) GetRegionError() *errorpb.Error {
	if m != nil {
		return m.RegionError
	}
	return nil
}

func (m *Response) GetCmdGetResp() *CmdGetResponse {
	if m != nil {
		return m.CmdGetResp
	}
	return nil
}

func (m *Response) GetCmdScanResp() *CmdScanResponse {
	if m != nil {
		return m.CmdScanResp
	}
	return nil
}

func (m *Response) GetCmdPrewriteResp() *CmdPrewriteResponse {
	if m != nil {
		return m.CmdPrewriteResp
	}
	return nil
}

func (m *Response) GetCmdCommitResp() *CmdCommitResponse {
	if m != nil {
		return m.CmdCommitResp
	}
	return nil
}

func (m *Response) GetCmdCleanupResp() *CmdCleanupResponse {
	if m != nil {
		return m.CmdCleanupResp
	}
	return nil
}

func (m *Response) GetCmdRbGetResp() *CmdRollbackThenGetResponse {
	if m != nil {
		return m.CmdRbGetResp
	}
	return nil
}

func (m *Response) GetCmdCommitGetResp() *CmdCommitThenGetResponse {
	if m != nil {
		return m.CmdCommitGetResp
	}
	return nil
}

func (m *Response) GetCmdBatchGetResp() *CmdBatchGetResponse {
	if m != nil {
		return m.CmdBatchGetResp
	}
	return nil
}

func (m *Response) GetCmdBatchRollbackResp() *CmdBatchRollbackResponse {
	if m != nil {
		return m.CmdBatchRollbackResp
	}
	return nil
}

func (m *Response) GetCmdFastCommitResp() *CmdFastCommitResponse {
	if m != nil {
		return m.CmdFastCommitResp
	}
	return nil
}

func init() {
	proto.RegisterType((*LockInfo)(nil), "kvrpcpb.LockInfo")
	proto.RegisterType((*KeyError)(nil), "kvrpcpb.KeyError")
	proto.RegisterType((*Context)(nil), "kvrpcpb.Context")
	proto.RegisterType((*CmdGetRequest)(nil), "kvrpcpb.CmdGetRequest")
	proto.RegisterType((*CmdGetResponse)(nil), "kvrpcpb.CmdGetResponse")
	proto.RegisterType((*CmdScanRequest)(nil), "kvrpcpb.CmdScanRequest")
	proto.RegisterType((*KvPair)(nil), "kvrpcpb.KvPair")
	proto.RegisterType((*CmdScanResponse)(nil), "kvrpcpb.CmdScanResponse")
	proto.RegisterType((*Mutation)(nil), "kvrpcpb.Mutation")
	proto.RegisterType((*CmdPrewriteRequest)(nil), "kvrpcpb.CmdPrewriteRequest")
	proto.RegisterType((*CmdPrewriteResponse)(nil), "kvrpcpb.CmdPrewriteResponse")
	proto.RegisterType((*CmdCommitRequest)(nil), "kvrpcpb.CmdCommitRequest")
	proto.RegisterType((*CmdCommitResponse)(nil), "kvrpcpb.CmdCommitResponse")
	proto.RegisterType((*CmdFastCommitRequest)(nil), "kvrpcpb.CmdFastCommitRequest")
	proto.RegisterType((*CmdFastCommitResponse)(nil), "kvrpcpb.CmdFastCommitResponse")
	proto.RegisterType((*CmdBatchRollbackRequest)(nil), "kvrpcpb.CmdBatchRollbackRequest")
	proto.RegisterType((*CmdBatchRollbackResponse)(nil), "kvrpcpb.CmdBatchRollbackResponse")
	proto.RegisterType((*CmdCleanupRequest)(nil), "kvrpcpb.CmdCleanupRequest")
	proto.RegisterType((*CmdCleanupResponse)(nil), "kvrpcpb.CmdCleanupResponse")
	proto.RegisterType((*CmdRollbackThenGetRequest)(nil), "kvrpcpb.CmdRollbackThenGetRequest")
	proto.RegisterType((*CmdRollbackThenGetResponse)(nil), "kvrpcpb.CmdRollbackThenGetResponse")
	proto.RegisterType((*CmdCommitThenGetRequest)(nil), "kvrpcpb.CmdCommitThenGetRequest")
	proto.RegisterType((*CmdCommitThenGetResponse)(nil), "kvrpcpb.CmdCommitThenGetResponse")
	proto.RegisterType((*CmdBatchGetRequest)(nil), "kvrpcpb.CmdBatchGetRequest")
	proto.RegisterType((*CmdBatchGetResponse)(nil), "kvrpcpb.CmdBatchGetResponse")
	proto.RegisterType((*Request)(nil), "kvrpcpb.Request")
	proto.RegisterType((*Response)(nil), "kvrpcpb.Response")
	proto.RegisterEnum("kvrpcpb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("kvrpcpb.Op", Op_name, Op_value)
}

var fileDescriptor0 = []byte{
	// 1078 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x85, 0x24, 0x4a, 0x94, 0x86, 0x94, 0x4c, 0xd3, 0x8e, 0xa5, 0xa8, 0x6d, 0xe0, 0xb0, 0x79,
	0x68, 0x53, 0xc4, 0x45, 0x1c, 0xb8, 0x09, 0x0c, 0xc3, 0x6d, 0xe3, 0x26, 0x45, 0xe1, 0xa6, 0x31,
	0xdc, 0xbc, 0x0b, 0x14, 0xbd, 0xb1, 0x05, 0x5d, 0xc8, 0x2c, 0x57, 0x6e, 0xf5, 0x1d, 0xfd, 0x9f,
	0xfe, 0x58, 0x5f, 0x3a, 0xdc, 0x0b, 0x6f, 0x4b, 0x19, 0x8a, 0xdf, 0xc4, 0xe5, 0x9c, 0xb9, 0x9c,
	0x39, 0x33, 0x4b, 0x41, 0x77, 0x7a, 0x4b, 0xa3, 0x20, 0x1a, 0x1f, 0x44, 0x34, 0x64, 0xa1, 0x6b,
	0xca, 0xc7, 0xa1, 0x3d, 0x27, 0xcc, 0x57, 0xc7, 0xc3, 0x2e, 0xa1, 0x34, 0xa4, 0xea, 0xd1, 0x3b,
	0x83, 0xf6, 0xef, 0x61, 0x30, 0xfd, 0x6d, 0xf1, 0x31, 0x74, 0x77, 0xc1, 0x8e, 0xe8, 0x64, 0xee,
	0xd3, 0xd5, 0x68, 0x86, 0x67, 0x83, 0xda, 0x7e, 0xed, 0x1b, 0x3b, 0x39, 0x4d, 0x9e, 0x46, 0xb7,
	0x84, 0xc6, 0x93, 0x70, 0x31, 0xa8, 0xe3, 0xa9, 0xe1, 0x5a, 0xd0, 0x98, 0x92, 0xd5, 0xa0, 0x91,
	0x98, 0x78, 0xef, 0xa1, 0x7d, 0x4e, 0x56, 0x6f, 0x12, 0xc7, 0xee, 0x63, 0x68, 0x25, 0xe6, 0xe4,
	0x8a, 0xc3, 0xad, 0xc3, 0xed, 0x03, 0x95, 0x56, 0x1a, 0x67, 0x1b, 0x3a, 0x94, 0x30, 0xba, 0xf2,
	0xc7, 0x33, 0xc2, 0xdd, 0x75, 0xdc, 0x2e, 0x34, 0xfd, 0x71, 0x48, 0x19, 0x77, 0xd8, 0xf1, 0x02,
	0x30, 0xcf, 0xc2, 0x05, 0x23, 0x7f, 0x33, 0x61, 0x7c, 0x8d, 0x81, 0x47, 0x13, 0xe1, 0xd2, 0x70,
	0xbf, 0x05, 0x5b, 0x1e, 0x91, 0x28, 0x0c, 0x6e, 0xb8, 0x0b, 0xeb, 0x70, 0xe7, 0x40, 0xd6, 0x79,
	0xc9, 0xdf, 0xbd, 0x49, 0x5e, 0xb9, 0x43, 0x30, 0x22, 0x42, 0x28, 0x77, 0x6b, 0x1d, 0xda, 0xca,
	0xe4, 0x02, 0xcf, 0xbc, 0x67, 0xd0, 0x3d, 0x9b, 0x5f, 0xfd, 0x4a, 0xd8, 0x25, 0xf9, 0xb4, 0x24,
	0x31, 0x53, 0x35, 0x89, 0xb2, 0xb7, 0xc0, 0x2c, 0x54, 0xec, 0xfd, 0x0c, 0x3d, 0x65, 0x1e, 0x47,
	0xe1, 0x22, 0x26, 0xee, 0x3e, 0x34, 0x39, 0x99, 0x5a, 0xa5, 0x29, 0x19, 0x58, 0xd6, 0xad, 0x3f,
	0x5b, 0x8a, 0x2a, 0x6d, 0x24, 0x3b, 0x71, 0xf1, 0x67, 0xe0, 0x2f, 0x54, 0x48, 0xac, 0x2e, 0x66,
	0x3e, 0x65, 0xa3, 0x2c, 0x30, 0x62, 0x66, 0x93, 0xf9, 0x84, 0x71, 0x4c, 0x37, 0x9f, 0x47, 0x83,
	0xe7, 0xf1, 0x16, 0x5a, 0xe7, 0xb7, 0x17, 0xfe, 0x84, 0x6e, 0x10, 0x5f, 0x56, 0x54, 0x57, 0x8e,
	0x45, 0x32, 0xa2, 0x69, 0xcf, 0x61, 0x2b, 0x4d, 0x46, 0x16, 0xf4, 0x08, 0x9a, 0x11, 0x3a, 0x8e,
	0xd1, 0x61, 0x03, 0x1d, 0x6e, 0x65, 0x0e, 0x79, 0x40, 0xef, 0x47, 0x68, 0xbf, 0x5b, 0x32, 0x9f,
	0x61, 0x32, 0x6e, 0x1f, 0xea, 0x61, 0xc4, 0x23, 0xf7, 0x0e, 0xad, 0xd4, 0xf0, 0x7d, 0x74, 0x67,
	0xcc, 0x6b, 0x70, 0x31, 0xe6, 0x05, 0x25, 0x7f, 0xd1, 0x09, 0x23, 0x8a, 0x84, 0x27, 0xd0, 0x99,
	0x4b, 0xb7, 0x2a, 0x74, 0x56, 0x4b, 0x1a, 0xb0, 0xac, 0x4e, 0x11, 0xe0, 0x01, 0x74, 0x05, 0x81,
	0x45, 0x92, 0x5e, 0xc1, 0x4e, 0x21, 0x90, 0x2c, 0x10, 0xc5, 0xc9, 0x19, 0xd3, 0xc3, 0x28, 0xca,
	0x50, 0xcb, 0x0e, 0x22, 0xcf, 0xc2, 0x39, 0xb6, 0x40, 0x25, 0xa8, 0x05, 0x11, 0x3a, 0xb4, 0xc1,
	0xc0, 0x4a, 0x63, 0xcc, 0xa4, 0x81, 0x99, 0xec, 0x41, 0x2f, 0xe0, 0xa8, 0x52, 0x2a, 0x47, 0xb0,
	0x9d, 0x73, 0xb8, 0xa9, 0x74, 0xbc, 0x29, 0xec, 0x22, 0xec, 0xad, 0x1f, 0xb3, 0x62, 0x2e, 0x9b,
	0x91, 0xa5, 0x65, 0x2c, 0xa6, 0x76, 0x5d, 0x8e, 0xc7, 0xf0, 0xa0, 0x14, 0x6c, 0x73, 0xc2, 0x4e,
	0xa1, 0x8f, 0xd8, 0xd7, 0x3e, 0x0b, 0x6e, 0x2e, 0xc3, 0xd9, 0x6c, 0xec, 0x07, 0xd3, 0xcf, 0xe1,
	0xcd, 0x3b, 0x81, 0x81, 0x8e, 0xdf, 0x98, 0xa6, 0x97, 0x82, 0xdd, 0x19, 0xf1, 0x17, 0xcb, 0xa8,
	0x72, 0x90, 0xab, 0xa9, 0xf0, 0xfe, 0xe0, 0x52, 0x4c, 0x81, 0x1b, 0x8f, 0xb4, 0x4e, 0xa1, 0xf0,
	0x77, 0x0a, 0x0f, 0xd1, 0x9f, 0xaa, 0xe0, 0xc3, 0x0d, 0x59, 0xac, 0xdb, 0x2c, 0x95, 0x0b, 0xd5,
	0x7b, 0x07, 0xc3, 0x2a, 0xfc, 0x7d, 0x57, 0xcd, 0x84, 0x77, 0x45, 0x74, 0xf3, 0xb3, 0x93, 0x59,
	0xa7, 0x13, 0x77, 0x07, 0xac, 0x6b, 0x92, 0x1d, 0x1a, 0x3c, 0xf3, 0x73, 0xde, 0xc0, 0x52, 0xa8,
	0xfb, 0xe6, 0xfd, 0x82, 0xb7, 0x85, 0xab, 0x21, 0x97, 0xb2, 0x52, 0x4c, 0x8d, 0x4f, 0x9a, 0xb6,
	0x9a, 0x8f, 0xf8, 0xb4, 0x67, 0xa0, 0x0d, 0xd7, 0xd9, 0x7f, 0x06, 0x98, 0x2a, 0x82, 0x07, 0x06,
	0x5b, 0x45, 0x44, 0x2e, 0xb4, 0xdd, 0x6c, 0xa2, 0x48, 0x1c, 0xfb, 0xd7, 0xe4, 0x03, 0xbe, 0xc3,
	0x61, 0x30, 0x03, 0x71, 0x2b, 0xc9, 0x2b, 0xc7, 0x49, 0xcd, 0xd4, 0x6d, 0xf5, 0x1d, 0x58, 0xc1,
	0xfc, 0x6a, 0x94, 0x90, 0x44, 0xc9, 0x27, 0x79, 0xed, 0xec, 0x65, 0x66, 0x85, 0xfb, 0xe6, 0x19,
	0xd8, 0x89, 0x71, 0x8c, 0x2b, 0x98, 0x5b, 0x1b, 0xdc, 0xba, 0x9f, 0xb7, 0xce, 0xdf, 0x15, 0x47,
	0xe0, 0x24, 0xe6, 0x91, 0x5c, 0x6a, 0x1c, 0xd2, 0xe4, 0x90, 0x2f, 0xf2, 0x90, 0xf2, 0x76, 0x7d,
	0x8e, 0xbd, 0x44, 0x98, 0xec, 0x67, 0x02, 0x6a, 0x71, 0xd0, 0xc3, 0x3c, 0xa8, 0xb8, 0x63, 0x5e,
	0xc0, 0x16, 0x87, 0x88, 0xe1, 0xe0, 0x18, 0x93, 0x63, 0x86, 0x05, 0x4c, 0x71, 0xe8, 0x8e, 0x45,
	0x1c, 0x3a, 0x4e, 0xab, 0x6f, 0x73, 0x8c, 0x97, 0xc7, 0xac, 0x99, 0x8f, 0x13, 0x70, 0x73, 0x39,
	0x2a, 0x7c, 0x87, 0xe3, 0xf7, 0xf5, 0x3c, 0x4b, 0xe8, 0x1f, 0x60, 0x3b, 0x41, 0x8f, 0x93, 0xfe,
	0xa7, 0x60, 0xd0, 0x99, 0x29, 0xab, 0xea, 0x27, 0xd8, 0xcb, 0x70, 0x54, 0x66, 0xc6, 0xc1, 0x96,
	0x1e, 0xb9, 0x72, 0xc1, 0x1d, 0xc3, 0x4e, 0xe2, 0xe1, 0x23, 0x2e, 0xce, 0x3c, 0xc1, 0x36, 0x87,
	0x7f, 0x95, 0x87, 0x6b, 0x8b, 0xdc, 0xfb, 0xa7, 0x09, 0xed, 0x54, 0xaa, 0x9b, 0xc8, 0xef, 0x49,
	0xf6, 0xd9, 0xc3, 0x47, 0x4a, 0x68, 0xb0, 0x77, 0xa0, 0x3e, 0xe8, 0xc4, 0x3c, 0x49, 0x51, 0x09,
	0x1a, 0xe2, 0x48, 0x4a, 0xb0, 0xaf, 0x49, 0x50, 0x06, 0xfe, 0x1e, 0xba, 0x39, 0x0d, 0xa2, 0xbd,
	0x10, 0xe1, 0x40, 0x17, 0xa1, 0x04, 0xbc, 0x14, 0x64, 0xe7, 0x54, 0x88, 0x20, 0x21, 0xc3, 0x2f,
	0xab, 0x65, 0x28, 0x81, 0x4a, 0x54, 0x8a, 0x26, 0x84, 0xb5, 0x2a, 0x44, 0x55, 0xbc, 0x7f, 0xa4,
	0xe6, 0x33, 0x25, 0x22, 0xca, 0xd4, 0x3b, 0x5b, 0x5e, 0xe3, 0x27, 0x22, 0x56, 0xaa, 0x45, 0x44,
	0x09, 0x31, 0x7e, 0x7d, 0xa7, 0x18, 0x25, 0xfa, 0x54, 0x74, 0xb5, 0xa0, 0x46, 0xf4, 0x20, 0xe4,
	0xf8, 0xf8, 0x0e, 0x39, 0x4a, 0xfc, 0x2b, 0xa1, 0xe6, 0xbc, 0x1e, 0x11, 0x0e, 0x3a, 0x47, 0xda,
	0xc6, 0x7a, 0x0d, 0xfd, 0x4a, 0x45, 0x22, 0xdc, 0xd2, 0xa3, 0x57, 0xdf, 0x99, 0x27, 0xb0, 0xab,
	0x6b, 0x12, 0x1d, 0x08, 0x51, 0x3e, 0x5a, 0x27, 0x4a, 0x81, 0x7e, 0xfa, 0x6f, 0x0d, 0xac, 0xbc,
	0xe8, 0x00, 0x5a, 0x42, 0x31, 0x4e, 0x0d, 0x2f, 0x0e, 0x53, 0xaa, 0xc1, 0xa9, 0xe3, 0x12, 0xb6,
	0x72, 0x5d, 0x76, 0x1a, 0xb8, 0xc8, 0x3b, 0x29, 0x23, 0x8e, 0xe1, 0xf6, 0x00, 0xb2, 0xc6, 0x38,
	0x4d, 0xbc, 0x52, 0x5c, 0x9d, 0x72, 0xa7, 0x85, 0x17, 0x90, 0x53, 0x26, 0xd2, 0x31, 0xa5, 0x77,
	0xc5, 0x8f, 0xd3, 0x96, 0x66, 0x85, 0x8a, 0x9d, 0x0e, 0x7e, 0x3e, 0x77, 0x0b, 0x65, 0x38, 0xf0,
	0x74, 0x1f, 0xea, 0xf8, 0x11, 0x6a, 0x42, 0xe3, 0x62, 0x99, 0xe4, 0x8c, 0x3f, 0x7e, 0x21, 0x33,
	0xcc, 0xb7, 0x0d, 0x46, 0xf2, 0x07, 0xc4, 0x69, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x9c,
	0xae, 0x75, 0x28, 0x0d, 0x00, 0x00,
}
