// Code generated by protoc-gen-go.
// source: kvrpcpb.proto
// DO NOT EDIT!

/*
Package kvrpcpb is a generated protocol buffer package.

It is generated from these files:
	kvrpcpb.proto

It has these top-level messages:
	KvPair
	CmdGetRequest
	CmdGetResponse
	CmdScanRequest
	CmdScanResponse
	CmdPrewriteRequest
	CmdPrewriteResponse
	CmdCommitRequest
	CmdCommitResponse
	Request
	Response
*/
package kvrpcpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MessageType int32

const (
	MessageType_CmdGet      MessageType = 1
	MessageType_CmdScan     MessageType = 2
	MessageType_CmdPrewrite MessageType = 3
	MessageType_CmdCommit   MessageType = 4
)

var MessageType_name = map[int32]string{
	1: "CmdGet",
	2: "CmdScan",
	3: "CmdPrewrite",
	4: "CmdCommit",
}
var MessageType_value = map[string]int32{
	"CmdGet":      1,
	"CmdScan":     2,
	"CmdPrewrite": 3,
	"CmdCommit":   4,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type KvPair struct {
	Key              []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *KvPair) Reset()                    { *m = KvPair{} }
func (m *KvPair) String() string            { return proto.CompactTextString(m) }
func (*KvPair) ProtoMessage()               {}
func (*KvPair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *KvPair) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KvPair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdGetRequest struct {
	Key              []byte  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Version          *uint64 `protobuf:"varint,2,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdGetRequest) Reset()                    { *m = CmdGetRequest{} }
func (m *CmdGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdGetRequest) ProtoMessage()               {}
func (*CmdGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CmdGetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdGetRequest) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CmdGetResponse struct {
	Ok               *bool  `protobuf:"varint,1,req,name=ok" json:"ok,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CmdGetResponse) Reset()                    { *m = CmdGetResponse{} }
func (m *CmdGetResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdGetResponse) ProtoMessage()               {}
func (*CmdGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CmdGetResponse) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *CmdGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CmdScanRequest struct {
	Key              []byte  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Limit            *uint32 `protobuf:"varint,2,req,name=limit" json:"limit,omitempty"`
	Version          *uint64 `protobuf:"varint,3,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdScanRequest) Reset()                    { *m = CmdScanRequest{} }
func (m *CmdScanRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdScanRequest) ProtoMessage()               {}
func (*CmdScanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CmdScanRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CmdScanRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *CmdScanRequest) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CmdScanResponse struct {
	Ok               *bool     `protobuf:"varint,1,req,name=ok" json:"ok,omitempty"`
	Results          []*KvPair `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdScanResponse) Reset()                    { *m = CmdScanResponse{} }
func (m *CmdScanResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdScanResponse) ProtoMessage()               {}
func (*CmdScanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CmdScanResponse) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *CmdScanResponse) GetResults() []*KvPair {
	if m != nil {
		return m.Results
	}
	return nil
}

type CmdPrewriteRequest struct {
	Puts             []*KvPair `protobuf:"bytes,1,rep,name=puts" json:"puts,omitempty"`
	Dels             [][]byte  `protobuf:"bytes,2,rep,name=dels" json:"dels,omitempty"`
	Locks            [][]byte  `protobuf:"bytes,3,rep,name=locks" json:"locks,omitempty"`
	StartVersion     *uint64   `protobuf:"varint,4,req,name=start_version" json:"start_version,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CmdPrewriteRequest) Reset()                    { *m = CmdPrewriteRequest{} }
func (m *CmdPrewriteRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdPrewriteRequest) ProtoMessage()               {}
func (*CmdPrewriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CmdPrewriteRequest) GetPuts() []*KvPair {
	if m != nil {
		return m.Puts
	}
	return nil
}

func (m *CmdPrewriteRequest) GetDels() [][]byte {
	if m != nil {
		return m.Dels
	}
	return nil
}

func (m *CmdPrewriteRequest) GetLocks() [][]byte {
	if m != nil {
		return m.Locks
	}
	return nil
}

func (m *CmdPrewriteRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

type CmdPrewriteResponse struct {
	Ok               *bool  `protobuf:"varint,1,req,name=ok" json:"ok,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CmdPrewriteResponse) Reset()                    { *m = CmdPrewriteResponse{} }
func (m *CmdPrewriteResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdPrewriteResponse) ProtoMessage()               {}
func (*CmdPrewriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CmdPrewriteResponse) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

type CmdCommitRequest struct {
	StartVersion     *uint64 `protobuf:"varint,1,req,name=start_version" json:"start_version,omitempty"`
	CommitVersion    *uint64 `protobuf:"varint,2,req,name=commit_version" json:"commit_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CmdCommitRequest) Reset()                    { *m = CmdCommitRequest{} }
func (m *CmdCommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitRequest) ProtoMessage()               {}
func (*CmdCommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CmdCommitRequest) GetStartVersion() uint64 {
	if m != nil && m.StartVersion != nil {
		return *m.StartVersion
	}
	return 0
}

func (m *CmdCommitRequest) GetCommitVersion() uint64 {
	if m != nil && m.CommitVersion != nil {
		return *m.CommitVersion
	}
	return 0
}

type CmdCommitResponse struct {
	Ok               *bool  `protobuf:"varint,1,req,name=ok" json:"ok,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CmdCommitResponse) Reset()                    { *m = CmdCommitResponse{} }
func (m *CmdCommitResponse) String() string            { return proto.CompactTextString(m) }
func (*CmdCommitResponse) ProtoMessage()               {}
func (*CmdCommitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CmdCommitResponse) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

type Request struct {
	Type             *MessageType        `protobuf:"varint,1,req,name=type,enum=kvrpcpb.MessageType" json:"type,omitempty"`
	CmdGetReq        *CmdGetRequest      `protobuf:"bytes,2,opt,name=cmd_get_req" json:"cmd_get_req,omitempty"`
	CmdScanReq       *CmdScanRequest     `protobuf:"bytes,3,opt,name=cmd_scan_req" json:"cmd_scan_req,omitempty"`
	CmdPrewriteReq   *CmdPrewriteRequest `protobuf:"bytes,4,opt,name=cmd_prewrite_req" json:"cmd_prewrite_req,omitempty"`
	CmdCommitReq     *CmdCommitRequest   `protobuf:"bytes,5,opt,name=cmd_commit_req" json:"cmd_commit_req,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Request) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_CmdGet
}

func (m *Request) GetCmdGetReq() *CmdGetRequest {
	if m != nil {
		return m.CmdGetReq
	}
	return nil
}

func (m *Request) GetCmdScanReq() *CmdScanRequest {
	if m != nil {
		return m.CmdScanReq
	}
	return nil
}

func (m *Request) GetCmdPrewriteReq() *CmdPrewriteRequest {
	if m != nil {
		return m.CmdPrewriteReq
	}
	return nil
}

func (m *Request) GetCmdCommitReq() *CmdCommitRequest {
	if m != nil {
		return m.CmdCommitReq
	}
	return nil
}

type Response struct {
	Type             *MessageType         `protobuf:"varint,1,req,name=type,enum=kvrpcpb.MessageType" json:"type,omitempty"`
	CmdGetResp       *CmdGetResponse      `protobuf:"bytes,2,opt,name=cmd_get_resp" json:"cmd_get_resp,omitempty"`
	CmdScanResp      *CmdScanResponse     `protobuf:"bytes,3,opt,name=cmd_scan_resp" json:"cmd_scan_resp,omitempty"`
	CmdPrewriteResp  *CmdPrewriteResponse `protobuf:"bytes,4,opt,name=cmd_prewrite_resp" json:"cmd_prewrite_resp,omitempty"`
	CmdCommitResp    *CmdCommitResponse   `protobuf:"bytes,5,opt,name=cmd_commit_resp" json:"cmd_commit_resp,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Response) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_CmdGet
}

func (m *Response) GetCmdGetResp() *CmdGetResponse {
	if m != nil {
		return m.CmdGetResp
	}
	return nil
}

func (m *Response) GetCmdScanResp() *CmdScanResponse {
	if m != nil {
		return m.CmdScanResp
	}
	return nil
}

func (m *Response) GetCmdPrewriteResp() *CmdPrewriteResponse {
	if m != nil {
		return m.CmdPrewriteResp
	}
	return nil
}

func (m *Response) GetCmdCommitResp() *CmdCommitResponse {
	if m != nil {
		return m.CmdCommitResp
	}
	return nil
}

func init() {
	proto.RegisterType((*KvPair)(nil), "kvrpcpb.KvPair")
	proto.RegisterType((*CmdGetRequest)(nil), "kvrpcpb.CmdGetRequest")
	proto.RegisterType((*CmdGetResponse)(nil), "kvrpcpb.CmdGetResponse")
	proto.RegisterType((*CmdScanRequest)(nil), "kvrpcpb.CmdScanRequest")
	proto.RegisterType((*CmdScanResponse)(nil), "kvrpcpb.CmdScanResponse")
	proto.RegisterType((*CmdPrewriteRequest)(nil), "kvrpcpb.CmdPrewriteRequest")
	proto.RegisterType((*CmdPrewriteResponse)(nil), "kvrpcpb.CmdPrewriteResponse")
	proto.RegisterType((*CmdCommitRequest)(nil), "kvrpcpb.CmdCommitRequest")
	proto.RegisterType((*CmdCommitResponse)(nil), "kvrpcpb.CmdCommitResponse")
	proto.RegisterType((*Request)(nil), "kvrpcpb.Request")
	proto.RegisterType((*Response)(nil), "kvrpcpb.Response")
	proto.RegisterEnum("kvrpcpb.MessageType", MessageType_name, MessageType_value)
}

var fileDescriptor0 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xcd, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xe5, 0xd8, 0xad, 0xcb, 0x38, 0x4e, 0xdc, 0x05, 0xda, 0xf0, 0x25, 0x8a, 0xc5, 0xa1,
	0xa2, 0x6a, 0x11, 0x41, 0x88, 0x13, 0x42, 0xa8, 0x12, 0x1c, 0x10, 0x52, 0x05, 0xdc, 0x23, 0xe3,
	0x8c, 0x22, 0x2b, 0x1f, 0xde, 0xee, 0x6e, 0x82, 0xfa, 0x77, 0x73, 0xe5, 0xc0, 0x78, 0x77, 0x6d,
	0xad, 0x63, 0x1f, 0x38, 0xae, 0xfc, 0xde, 0x9b, 0xf7, 0x9b, 0xf5, 0x42, 0xbc, 0xdc, 0x09, 0x9e,
	0xf3, 0x5f, 0x57, 0x5c, 0x94, 0xaa, 0x64, 0xa1, 0x3d, 0xa6, 0x2f, 0xe1, 0xf0, 0xeb, 0xee, 0x26,
	0x2b, 0x04, 0x8b, 0xc0, 0x5f, 0xe2, 0xdd, 0xc4, 0x3b, 0x1b, 0x9c, 0x0f, 0x59, 0x0c, 0x07, 0xbb,
	0x6c, 0xb5, 0xc5, 0xc9, 0xa0, 0x3a, 0xa6, 0x97, 0x10, 0x5f, 0xaf, 0xe7, 0x5f, 0x50, 0x7d, 0xc7,
	0xdb, 0x2d, 0x4a, 0xd5, 0x16, 0x8f, 0x21, 0xdc, 0xa1, 0x90, 0x45, 0xb9, 0xd1, 0xf2, 0x20, 0xbd,
	0x80, 0x51, 0x2d, 0x97, 0xbc, 0xdc, 0x48, 0x64, 0x00, 0x83, 0x72, 0xa9, 0xe5, 0x47, 0x6e, 0xb6,
	0x47, 0xd9, 0x1f, 0xb4, 0xf8, 0x47, 0x9e, 0x6d, 0x7a, 0xc3, 0x49, 0xbd, 0x2a, 0xd6, 0x85, 0xd2,
	0xd1, 0xb1, 0x3b, 0xcb, 0xd7, 0xb3, 0x3e, 0xc2, 0xb8, 0xb1, 0xf7, 0x0c, 0x3b, 0x83, 0x50, 0xa0,
	0xdc, 0xae, 0x94, 0xa4, 0x00, 0xff, 0x3c, 0x9a, 0x8e, 0xaf, 0xea, 0x4d, 0x18, 0xee, 0x74, 0x01,
	0x8c, 0x02, 0x6e, 0x04, 0xfe, 0x16, 0x85, 0xc2, 0xba, 0xc3, 0x33, 0x08, 0xf8, 0x96, 0x4c, 0x5e,
	0xaf, 0x89, 0x0d, 0x21, 0x98, 0xe3, 0xca, 0x64, 0x9a, 0x8e, 0x65, 0xbe, 0x94, 0x54, 0xa9, 0x3a,
	0x3e, 0x84, 0x58, 0xaa, 0x4c, 0xa8, 0x59, 0xdd, 0x34, 0xd0, 0x4d, 0x5f, 0xc0, 0xfd, 0xd6, 0xa0,
	0x6e, 0xdb, 0xf4, 0x13, 0x24, 0x24, 0xb9, 0x2e, 0xd7, 0x04, 0x5c, 0x37, 0xe9, 0xa4, 0x55, 0xd2,
	0x80, 0x9d, 0xc0, 0x28, 0xd7, 0xba, 0x59, 0x7b, 0xf7, 0xcf, 0xe1, 0xd8, 0x89, 0xe8, 0x99, 0xf1,
	0xc7, 0x83, 0xb0, 0xce, 0x4e, 0x21, 0x50, 0x77, 0x1c, 0xf5, 0x97, 0xd1, 0xf4, 0x41, 0x43, 0xf9,
	0x0d, 0xa5, 0xcc, 0x16, 0xf8, 0x93, 0xbe, 0xb1, 0x0b, 0x88, 0xf2, 0xf5, 0x7c, 0xb6, 0x40, 0x35,
	0x13, 0x78, 0xab, 0x2f, 0x2d, 0x9a, 0x9e, 0x34, 0xd2, 0xf6, 0x7f, 0x71, 0x09, 0xc3, 0x4a, 0x2c,
	0xe9, 0x3a, 0xb4, 0xda, 0xd7, 0xea, 0x53, 0x57, 0xed, 0xde, 0xf4, 0x3b, 0x48, 0x2a, 0x39, 0xb7,
	0x3b, 0xd1, 0x96, 0x40, 0x5b, 0x9e, 0xb8, 0x96, 0xfd, 0xcb, 0x79, 0x43, 0xec, 0x64, 0xb3, 0xfc,
	0x95, 0xe9, 0x40, 0x9b, 0x1e, 0xb9, 0xa6, 0xd6, 0x16, 0xd3, 0xbf, 0x1e, 0x1c, 0x35, 0xeb, 0xf8,
	0x1f, 0x6c, 0x4b, 0x62, 0xb0, 0x25, 0xb7, 0xdc, 0xa7, 0x1d, 0x6e, 0x1b, 0xf9, 0x1a, 0x62, 0x07,
	0x9c, 0xf4, 0x86, 0x7c, 0xd2, 0x25, 0xb7, 0x86, 0xf7, 0x70, 0xbc, 0x87, 0x4e, 0x26, 0xc3, 0xfe,
	0xb4, 0x9f, 0xdd, 0x1a, 0xdf, 0xc2, 0xb8, 0x05, 0x4f, 0x36, 0x43, 0xff, 0xb8, 0x8f, 0xde, 0x98,
	0x5e, 0x7d, 0x86, 0xc8, 0x85, 0x03, 0x38, 0x34, 0xfd, 0x13, 0x8f, 0x5e, 0x5b, 0x68, 0xbb, 0x25,
	0x03, 0x7a, 0x5e, 0x91, 0x33, 0x33, 0xf1, 0xe9, 0xd7, 0xbe, 0xd7, 0xa4, 0x25, 0xc1, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc1, 0x56, 0x81, 0x44, 0x47, 0x04, 0x00, 0x00,
}
