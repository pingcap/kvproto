// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resource_manager.proto

package resource_manager

import (
	"context"
	encoding_binary "encoding/binary"
	"fmt"
	"io"
	"math"
	math_bits "math/bits"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestUnitType int32

const (
	RequestUnitType_RRU RequestUnitType = 0
	RequestUnitType_WRU RequestUnitType = 1
)

var RequestUnitType_name = map[int32]string{
	0: "RRU",
	1: "WRU",
}

var RequestUnitType_value = map[string]int32{
	"RRU": 0,
	"WRU": 1,
}

func (x RequestUnitType) String() string {
	return proto.EnumName(RequestUnitType_name, int32(x))
}

func (RequestUnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{0}
}

type ResourceType int32

const (
	ResourceType_CPU         ResourceType = 0
	ResourceType_IOReadFlow  ResourceType = 1
	ResourceType_IOWriteFlow ResourceType = 2
)

var ResourceType_name = map[int32]string{
	0: "CPU",
	1: "IOReadFlow",
	2: "IOWriteFlow",
}

var ResourceType_value = map[string]int32{
	"CPU":         0,
	"IOReadFlow":  1,
	"IOWriteFlow": 2,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}

func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{1}
}

type GroupMode int32

const (
	GroupMode_Unknown GroupMode = 0
	GroupMode_RUMode  GroupMode = 1
	GroupMode_RawMode GroupMode = 2
)

var GroupMode_name = map[int32]string{
	0: "Unknown",
	1: "RUMode",
	2: "RawMode",
}

var GroupMode_value = map[string]int32{
	"Unknown": 0,
	"RUMode":  1,
	"RawMode": 2,
}

func (x GroupMode) String() string {
	return proto.EnumName(GroupMode_name, int32(x))
}

func (GroupMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{2}
}

type ListResourceGroupsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResourceGroupsRequest) Reset()         { *m = ListResourceGroupsRequest{} }
func (m *ListResourceGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListResourceGroupsRequest) ProtoMessage()    {}
func (*ListResourceGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{0}
}
func (m *ListResourceGroupsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceGroupsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceGroupsRequest.Merge(m, src)
}
func (m *ListResourceGroupsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceGroupsRequest proto.InternalMessageInfo

type ListResourceGroupsResponse struct {
	Error                *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Groups               []*ResourceGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListResourceGroupsResponse) Reset()         { *m = ListResourceGroupsResponse{} }
func (m *ListResourceGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListResourceGroupsResponse) ProtoMessage()    {}
func (*ListResourceGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{1}
}
func (m *ListResourceGroupsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceGroupsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceGroupsResponse.Merge(m, src)
}
func (m *ListResourceGroupsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceGroupsResponse proto.InternalMessageInfo

func (m *ListResourceGroupsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListResourceGroupsResponse) GetGroups() []*ResourceGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GetResourceGroupRequest struct {
	ResourceGroupName    string   `protobuf:"bytes,1,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResourceGroupRequest) Reset()         { *m = GetResourceGroupRequest{} }
func (m *GetResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourceGroupRequest) ProtoMessage()    {}
func (*GetResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{2}
}
func (m *GetResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceGroupRequest.Merge(m, src)
}
func (m *GetResourceGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceGroupRequest proto.InternalMessageInfo

func (m *GetResourceGroupRequest) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

type GetResourceGroupResponse struct {
	Error                *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Group                *ResourceGroup `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetResourceGroupResponse) Reset()         { *m = GetResourceGroupResponse{} }
func (m *GetResourceGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetResourceGroupResponse) ProtoMessage()    {}
func (*GetResourceGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{3}
}
func (m *GetResourceGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceGroupResponse.Merge(m, src)
}
func (m *GetResourceGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceGroupResponse proto.InternalMessageInfo

func (m *GetResourceGroupResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetResourceGroupResponse) GetGroup() *ResourceGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

type DeleteResourceGroupRequest struct {
	ResourceGroupName    string   `protobuf:"bytes,1,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResourceGroupRequest) Reset()         { *m = DeleteResourceGroupRequest{} }
func (m *DeleteResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteResourceGroupRequest) ProtoMessage()    {}
func (*DeleteResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{4}
}
func (m *DeleteResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteResourceGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResourceGroupRequest.Merge(m, src)
}
func (m *DeleteResourceGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResourceGroupRequest proto.InternalMessageInfo

func (m *DeleteResourceGroupRequest) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

type DeleteResourceGroupResponse struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResourceGroupResponse) Reset()         { *m = DeleteResourceGroupResponse{} }
func (m *DeleteResourceGroupResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResourceGroupResponse) ProtoMessage()    {}
func (*DeleteResourceGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{5}
}
func (m *DeleteResourceGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteResourceGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteResourceGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteResourceGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResourceGroupResponse.Merge(m, src)
}
func (m *DeleteResourceGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteResourceGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResourceGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResourceGroupResponse proto.InternalMessageInfo

func (m *DeleteResourceGroupResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DeleteResourceGroupResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type PutResourceGroupRequest struct {
	Group                *ResourceGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PutResourceGroupRequest) Reset()         { *m = PutResourceGroupRequest{} }
func (m *PutResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*PutResourceGroupRequest) ProtoMessage()    {}
func (*PutResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{6}
}
func (m *PutResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PutResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PutResourceGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PutResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResourceGroupRequest.Merge(m, src)
}
func (m *PutResourceGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *PutResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutResourceGroupRequest proto.InternalMessageInfo

func (m *PutResourceGroupRequest) GetGroup() *ResourceGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

type PutResourceGroupResponse struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResourceGroupResponse) Reset()         { *m = PutResourceGroupResponse{} }
func (m *PutResourceGroupResponse) String() string { return proto.CompactTextString(m) }
func (*PutResourceGroupResponse) ProtoMessage()    {}
func (*PutResourceGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{7}
}
func (m *PutResourceGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PutResourceGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PutResourceGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PutResourceGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResourceGroupResponse.Merge(m, src)
}
func (m *PutResourceGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *PutResourceGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResourceGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResourceGroupResponse proto.InternalMessageInfo

func (m *PutResourceGroupResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PutResourceGroupResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type TokenBucketsRequest struct {
	Requests              []*TokenBucketRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	TargetRequestPeriodMs uint64                `protobuf:"varint,2,opt,name=target_request_period_ms,json=targetRequestPeriodMs,proto3" json:"target_request_period_ms,omitempty"`
	ClientUniqueId        uint64                `protobuf:"varint,3,opt,name=client_unique_id,json=clientUniqueId,proto3" json:"client_unique_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *TokenBucketsRequest) Reset()         { *m = TokenBucketsRequest{} }
func (m *TokenBucketsRequest) String() string { return proto.CompactTextString(m) }
func (*TokenBucketsRequest) ProtoMessage()    {}
func (*TokenBucketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{8}
}
func (m *TokenBucketsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketsRequest.Merge(m, src)
}
func (m *TokenBucketsRequest) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketsRequest proto.InternalMessageInfo

func (m *TokenBucketsRequest) GetRequests() []*TokenBucketRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *TokenBucketsRequest) GetTargetRequestPeriodMs() uint64 {
	if m != nil {
		return m.TargetRequestPeriodMs
	}
	return 0
}

func (m *TokenBucketsRequest) GetClientUniqueId() uint64 {
	if m != nil {
		return m.ClientUniqueId
	}
	return 0
}

type TokenBucketRequest struct {
	ResourceGroupName string `protobuf:"bytes,1,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	// Types that are valid to be assigned to Request:
	//	*TokenBucketRequest_RuItems
	//	*TokenBucketRequest_ResourceItems
	Request isTokenBucketRequest_Request `protobuf_oneof:"request"`
	// Aggregate statistics in group level.
	ConsumptionSinceLastRequest *Consumption `protobuf:"bytes,4,opt,name=consumption_since_last_request,json=consumptionSinceLastRequest,proto3" json:"consumption_since_last_request,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}     `json:"-"`
	XXX_unrecognized            []byte       `json:"-"`
	XXX_sizecache               int32        `json:"-"`
}

func (m *TokenBucketRequest) Reset()         { *m = TokenBucketRequest{} }
func (m *TokenBucketRequest) String() string { return proto.CompactTextString(m) }
func (*TokenBucketRequest) ProtoMessage()    {}
func (*TokenBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{9}
}
func (m *TokenBucketRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketRequest.Merge(m, src)
}
func (m *TokenBucketRequest) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketRequest proto.InternalMessageInfo

type isTokenBucketRequest_Request interface {
	isTokenBucketRequest_Request()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TokenBucketRequest_RuItems struct {
	RuItems *TokenBucketRequest_RequestRU `protobuf:"bytes,2,opt,name=ru_items,json=ruItems,proto3,oneof" json:"ru_items,omitempty"`
}
type TokenBucketRequest_ResourceItems struct {
	ResourceItems *TokenBucketRequest_RequestResource `protobuf:"bytes,3,opt,name=resource_items,json=resourceItems,proto3,oneof" json:"resource_items,omitempty"`
}

func (*TokenBucketRequest_RuItems) isTokenBucketRequest_Request()       {}
func (*TokenBucketRequest_ResourceItems) isTokenBucketRequest_Request() {}

func (m *TokenBucketRequest) GetRequest() isTokenBucketRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *TokenBucketRequest) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *TokenBucketRequest) GetRuItems() *TokenBucketRequest_RequestRU {
	if x, ok := m.GetRequest().(*TokenBucketRequest_RuItems); ok {
		return x.RuItems
	}
	return nil
}

func (m *TokenBucketRequest) GetResourceItems() *TokenBucketRequest_RequestResource {
	if x, ok := m.GetRequest().(*TokenBucketRequest_ResourceItems); ok {
		return x.ResourceItems
	}
	return nil
}

func (m *TokenBucketRequest) GetConsumptionSinceLastRequest() *Consumption {
	if m != nil {
		return m.ConsumptionSinceLastRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TokenBucketRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TokenBucketRequest_RuItems)(nil),
		(*TokenBucketRequest_ResourceItems)(nil),
	}
}

type TokenBucketRequest_RequestRU struct {
	RequestRU            []*RequestUnitItem `protobuf:"bytes,1,rep,name=request_r_u,json=requestRU,proto3" json:"request_r_u,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TokenBucketRequest_RequestRU) Reset()         { *m = TokenBucketRequest_RequestRU{} }
func (m *TokenBucketRequest_RequestRU) String() string { return proto.CompactTextString(m) }
func (*TokenBucketRequest_RequestRU) ProtoMessage()    {}
func (*TokenBucketRequest_RequestRU) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{9, 0}
}
func (m *TokenBucketRequest_RequestRU) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketRequest_RequestRU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketRequest_RequestRU.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketRequest_RequestRU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketRequest_RequestRU.Merge(m, src)
}
func (m *TokenBucketRequest_RequestRU) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketRequest_RequestRU) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketRequest_RequestRU.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketRequest_RequestRU proto.InternalMessageInfo

func (m *TokenBucketRequest_RequestRU) GetRequestRU() []*RequestUnitItem {
	if m != nil {
		return m.RequestRU
	}
	return nil
}

type TokenBucketRequest_RequestResource struct {
	RequestResource      []*ResourceItem `protobuf:"bytes,1,rep,name=request_resource,json=requestResource,proto3" json:"request_resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TokenBucketRequest_RequestResource) Reset()         { *m = TokenBucketRequest_RequestResource{} }
func (m *TokenBucketRequest_RequestResource) String() string { return proto.CompactTextString(m) }
func (*TokenBucketRequest_RequestResource) ProtoMessage()    {}
func (*TokenBucketRequest_RequestResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{9, 1}
}
func (m *TokenBucketRequest_RequestResource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketRequest_RequestResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketRequest_RequestResource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketRequest_RequestResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketRequest_RequestResource.Merge(m, src)
}
func (m *TokenBucketRequest_RequestResource) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketRequest_RequestResource) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketRequest_RequestResource.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketRequest_RequestResource proto.InternalMessageInfo

func (m *TokenBucketRequest_RequestResource) GetRequestResource() []*ResourceItem {
	if m != nil {
		return m.RequestResource
	}
	return nil
}

type TokenBucketsResponse struct {
	Error                *Error                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Responses            []*TokenBucketResponse `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TokenBucketsResponse) Reset()         { *m = TokenBucketsResponse{} }
func (m *TokenBucketsResponse) String() string { return proto.CompactTextString(m) }
func (*TokenBucketsResponse) ProtoMessage()    {}
func (*TokenBucketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{10}
}
func (m *TokenBucketsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketsResponse.Merge(m, src)
}
func (m *TokenBucketsResponse) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketsResponse proto.InternalMessageInfo

func (m *TokenBucketsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TokenBucketsResponse) GetResponses() []*TokenBucketResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type TokenBucketResponse struct {
	ResourceGroupName     string                        `protobuf:"bytes,1,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	GrantedRUTokens       []*GrantedRUTokenBucket       `protobuf:"bytes,2,rep,name=granted_r_u_tokens,json=grantedRUTokens,proto3" json:"granted_r_u_tokens,omitempty"`
	GrantedResourceTokens []*GrantedResourceTokenBucket `protobuf:"bytes,3,rep,name=granted_resource_tokens,json=grantedResourceTokens,proto3" json:"granted_resource_tokens,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                      `json:"-"`
	XXX_unrecognized      []byte                        `json:"-"`
	XXX_sizecache         int32                         `json:"-"`
}

func (m *TokenBucketResponse) Reset()         { *m = TokenBucketResponse{} }
func (m *TokenBucketResponse) String() string { return proto.CompactTextString(m) }
func (*TokenBucketResponse) ProtoMessage()    {}
func (*TokenBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{11}
}
func (m *TokenBucketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketResponse.Merge(m, src)
}
func (m *TokenBucketResponse) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketResponse proto.InternalMessageInfo

func (m *TokenBucketResponse) GetResourceGroupName() string {
	if m != nil {
		return m.ResourceGroupName
	}
	return ""
}

func (m *TokenBucketResponse) GetGrantedRUTokens() []*GrantedRUTokenBucket {
	if m != nil {
		return m.GrantedRUTokens
	}
	return nil
}

func (m *TokenBucketResponse) GetGrantedResourceTokens() []*GrantedResourceTokenBucket {
	if m != nil {
		return m.GrantedResourceTokens
	}
	return nil
}

type GrantedResourceTokenBucket struct {
	Type                 ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=resource_manager.ResourceType" json:"type,omitempty"`
	GrantedTokens        *TokenBucket `protobuf:"bytes,2,opt,name=granted_tokens,json=grantedTokens,proto3" json:"granted_tokens,omitempty"`
	TrickleTimeMs        int64        `protobuf:"varint,3,opt,name=trickle_time_ms,json=trickleTimeMs,proto3" json:"trickle_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GrantedResourceTokenBucket) Reset()         { *m = GrantedResourceTokenBucket{} }
func (m *GrantedResourceTokenBucket) String() string { return proto.CompactTextString(m) }
func (*GrantedResourceTokenBucket) ProtoMessage()    {}
func (*GrantedResourceTokenBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{12}
}
func (m *GrantedResourceTokenBucket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantedResourceTokenBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantedResourceTokenBucket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantedResourceTokenBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantedResourceTokenBucket.Merge(m, src)
}
func (m *GrantedResourceTokenBucket) XXX_Size() int {
	return m.Size()
}
func (m *GrantedResourceTokenBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantedResourceTokenBucket.DiscardUnknown(m)
}

var xxx_messageInfo_GrantedResourceTokenBucket proto.InternalMessageInfo

func (m *GrantedResourceTokenBucket) GetType() ResourceType {
	if m != nil {
		return m.Type
	}
	return ResourceType_CPU
}

func (m *GrantedResourceTokenBucket) GetGrantedTokens() *TokenBucket {
	if m != nil {
		return m.GrantedTokens
	}
	return nil
}

func (m *GrantedResourceTokenBucket) GetTrickleTimeMs() int64 {
	if m != nil {
		return m.TrickleTimeMs
	}
	return 0
}

type GrantedRUTokenBucket struct {
	Type                 RequestUnitType `protobuf:"varint,1,opt,name=type,proto3,enum=resource_manager.RequestUnitType" json:"type,omitempty"`
	GrantedTokens        *TokenBucket    `protobuf:"bytes,2,opt,name=granted_tokens,json=grantedTokens,proto3" json:"granted_tokens,omitempty"`
	TrickleTimeMs        int64           `protobuf:"varint,3,opt,name=trickle_time_ms,json=trickleTimeMs,proto3" json:"trickle_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GrantedRUTokenBucket) Reset()         { *m = GrantedRUTokenBucket{} }
func (m *GrantedRUTokenBucket) String() string { return proto.CompactTextString(m) }
func (*GrantedRUTokenBucket) ProtoMessage()    {}
func (*GrantedRUTokenBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{13}
}
func (m *GrantedRUTokenBucket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantedRUTokenBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantedRUTokenBucket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantedRUTokenBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantedRUTokenBucket.Merge(m, src)
}
func (m *GrantedRUTokenBucket) XXX_Size() int {
	return m.Size()
}
func (m *GrantedRUTokenBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantedRUTokenBucket.DiscardUnknown(m)
}

var xxx_messageInfo_GrantedRUTokenBucket proto.InternalMessageInfo

func (m *GrantedRUTokenBucket) GetType() RequestUnitType {
	if m != nil {
		return m.Type
	}
	return RequestUnitType_RRU
}

func (m *GrantedRUTokenBucket) GetGrantedTokens() *TokenBucket {
	if m != nil {
		return m.GrantedTokens
	}
	return nil
}

func (m *GrantedRUTokenBucket) GetTrickleTimeMs() int64 {
	if m != nil {
		return m.TrickleTimeMs
	}
	return 0
}

type Consumption struct {
	RRU                  float64  `protobuf:"fixed64,1,opt,name=r_r_u,json=rRU,proto3" json:"r_r_u,omitempty"`
	WRU                  float64  `protobuf:"fixed64,2,opt,name=w_r_u,json=wRU,proto3" json:"w_r_u,omitempty"`
	ReadBytes            float64  `protobuf:"fixed64,3,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
	WriteBytes           float64  `protobuf:"fixed64,4,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	TotalCpuTimeMs       float64  `protobuf:"fixed64,5,opt,name=total_cpu_time_ms,json=totalCpuTimeMs,proto3" json:"total_cpu_time_ms,omitempty"`
	SqlLayerCpuTimeMs    float64  `protobuf:"fixed64,6,opt,name=sql_layer_cpu_time_ms,json=sqlLayerCpuTimeMs,proto3" json:"sql_layer_cpu_time_ms,omitempty"`
	KvReadRpcCount       float64  `protobuf:"fixed64,7,opt,name=kv_read_rpc_count,json=kvReadRpcCount,proto3" json:"kv_read_rpc_count,omitempty"`
	KvWriteRpcCount      float64  `protobuf:"fixed64,8,opt,name=kv_write_rpc_count,json=kvWriteRpcCount,proto3" json:"kv_write_rpc_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consumption) Reset()         { *m = Consumption{} }
func (m *Consumption) String() string { return proto.CompactTextString(m) }
func (*Consumption) ProtoMessage()    {}
func (*Consumption) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{14}
}
func (m *Consumption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Consumption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Consumption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Consumption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consumption.Merge(m, src)
}
func (m *Consumption) XXX_Size() int {
	return m.Size()
}
func (m *Consumption) XXX_DiscardUnknown() {
	xxx_messageInfo_Consumption.DiscardUnknown(m)
}

var xxx_messageInfo_Consumption proto.InternalMessageInfo

func (m *Consumption) GetRRU() float64 {
	if m != nil {
		return m.RRU
	}
	return 0
}

func (m *Consumption) GetWRU() float64 {
	if m != nil {
		return m.WRU
	}
	return 0
}

func (m *Consumption) GetReadBytes() float64 {
	if m != nil {
		return m.ReadBytes
	}
	return 0
}

func (m *Consumption) GetWriteBytes() float64 {
	if m != nil {
		return m.WriteBytes
	}
	return 0
}

func (m *Consumption) GetTotalCpuTimeMs() float64 {
	if m != nil {
		return m.TotalCpuTimeMs
	}
	return 0
}

func (m *Consumption) GetSqlLayerCpuTimeMs() float64 {
	if m != nil {
		return m.SqlLayerCpuTimeMs
	}
	return 0
}

func (m *Consumption) GetKvReadRpcCount() float64 {
	if m != nil {
		return m.KvReadRpcCount
	}
	return 0
}

func (m *Consumption) GetKvWriteRpcCount() float64 {
	if m != nil {
		return m.KvWriteRpcCount
	}
	return 0
}

type RequestUnitItem struct {
	Type                 RequestUnitType `protobuf:"varint,1,opt,name=type,proto3,enum=resource_manager.RequestUnitType" json:"type,omitempty"`
	Value                float64         `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RequestUnitItem) Reset()         { *m = RequestUnitItem{} }
func (m *RequestUnitItem) String() string { return proto.CompactTextString(m) }
func (*RequestUnitItem) ProtoMessage()    {}
func (*RequestUnitItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{15}
}
func (m *RequestUnitItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestUnitItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestUnitItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestUnitItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUnitItem.Merge(m, src)
}
func (m *RequestUnitItem) XXX_Size() int {
	return m.Size()
}
func (m *RequestUnitItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUnitItem.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUnitItem proto.InternalMessageInfo

func (m *RequestUnitItem) GetType() RequestUnitType {
	if m != nil {
		return m.Type
	}
	return RequestUnitType_RRU
}

func (m *RequestUnitItem) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ResourceItem struct {
	Type                 ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=resource_manager.ResourceType" json:"type,omitempty"`
	Value                float64      `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResourceItem) Reset()         { *m = ResourceItem{} }
func (m *ResourceItem) String() string { return proto.CompactTextString(m) }
func (*ResourceItem) ProtoMessage()    {}
func (*ResourceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{16}
}
func (m *ResourceItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceItem.Merge(m, src)
}
func (m *ResourceItem) XXX_Size() int {
	return m.Size()
}
func (m *ResourceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceItem.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceItem proto.InternalMessageInfo

func (m *ResourceItem) GetType() ResourceType {
	if m != nil {
		return m.Type
	}
	return ResourceType_CPU
}

func (m *ResourceItem) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// ResourceGroup the settings definitions.
type ResourceGroup struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 GroupMode                 `protobuf:"varint,2,opt,name=mode,proto3,enum=resource_manager.GroupMode" json:"mode,omitempty"`
	RUSettings           *GroupRequestUnitSettings `protobuf:"bytes,3,opt,name=r_u_settings,json=rUSettings,proto3" json:"r_u_settings,omitempty"`
	ResourceSettings     *GroupResourceSettings    `protobuf:"bytes,4,opt,name=resource_settings,json=resourceSettings,proto3" json:"resource_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResourceGroup) Reset()         { *m = ResourceGroup{} }
func (m *ResourceGroup) String() string { return proto.CompactTextString(m) }
func (*ResourceGroup) ProtoMessage()    {}
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{17}
}
func (m *ResourceGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroup.Merge(m, src)
}
func (m *ResourceGroup) XXX_Size() int {
	return m.Size()
}
func (m *ResourceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroup proto.InternalMessageInfo

func (m *ResourceGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceGroup) GetMode() GroupMode {
	if m != nil {
		return m.Mode
	}
	return GroupMode_Unknown
}

func (m *ResourceGroup) GetRUSettings() *GroupRequestUnitSettings {
	if m != nil {
		return m.RUSettings
	}
	return nil
}

func (m *ResourceGroup) GetResourceSettings() *GroupResourceSettings {
	if m != nil {
		return m.ResourceSettings
	}
	return nil
}

type GroupRequestUnitSettings struct {
	RRU                  *TokenBucket `protobuf:"bytes,1,opt,name=r_r_u,json=rRU,proto3" json:"r_r_u,omitempty"`
	WRU                  *TokenBucket `protobuf:"bytes,2,opt,name=w_r_u,json=wRU,proto3" json:"w_r_u,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupRequestUnitSettings) Reset()         { *m = GroupRequestUnitSettings{} }
func (m *GroupRequestUnitSettings) String() string { return proto.CompactTextString(m) }
func (*GroupRequestUnitSettings) ProtoMessage()    {}
func (*GroupRequestUnitSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{18}
}
func (m *GroupRequestUnitSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupRequestUnitSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupRequestUnitSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupRequestUnitSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRequestUnitSettings.Merge(m, src)
}
func (m *GroupRequestUnitSettings) XXX_Size() int {
	return m.Size()
}
func (m *GroupRequestUnitSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRequestUnitSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRequestUnitSettings proto.InternalMessageInfo

func (m *GroupRequestUnitSettings) GetRRU() *TokenBucket {
	if m != nil {
		return m.RRU
	}
	return nil
}

func (m *GroupRequestUnitSettings) GetWRU() *TokenBucket {
	if m != nil {
		return m.WRU
	}
	return nil
}

type GroupResourceSettings struct {
	Cpu                  *TokenBucket `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	IoRead               *TokenBucket `protobuf:"bytes,2,opt,name=io_read,json=ioRead,proto3" json:"io_read,omitempty"`
	IoWrite              *TokenBucket `protobuf:"bytes,3,opt,name=io_write,json=ioWrite,proto3" json:"io_write,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupResourceSettings) Reset()         { *m = GroupResourceSettings{} }
func (m *GroupResourceSettings) String() string { return proto.CompactTextString(m) }
func (*GroupResourceSettings) ProtoMessage()    {}
func (*GroupResourceSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{19}
}
func (m *GroupResourceSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupResourceSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupResourceSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupResourceSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupResourceSettings.Merge(m, src)
}
func (m *GroupResourceSettings) XXX_Size() int {
	return m.Size()
}
func (m *GroupResourceSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupResourceSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GroupResourceSettings proto.InternalMessageInfo

func (m *GroupResourceSettings) GetCpu() *TokenBucket {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *GroupResourceSettings) GetIoRead() *TokenBucket {
	if m != nil {
		return m.IoRead
	}
	return nil
}

func (m *GroupResourceSettings) GetIoWrite() *TokenBucket {
	if m != nil {
		return m.IoWrite
	}
	return nil
}

type TokenBucket struct {
	Settings *TokenLimitSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	// Once used to reconfigure, the tokens is delta tokens.
	Tokens               float64  `protobuf:"fixed64,2,opt,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenBucket) Reset()         { *m = TokenBucket{} }
func (m *TokenBucket) String() string { return proto.CompactTextString(m) }
func (*TokenBucket) ProtoMessage()    {}
func (*TokenBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{20}
}
func (m *TokenBucket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucket.Merge(m, src)
}
func (m *TokenBucket) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucket.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucket proto.InternalMessageInfo

func (m *TokenBucket) GetSettings() *TokenLimitSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TokenBucket) GetTokens() float64 {
	if m != nil {
		return m.Tokens
	}
	return 0
}

type TokenLimitSettings struct {
	FillRate             uint64   `protobuf:"varint,1,opt,name=fill_rate,json=fillRate,proto3" json:"fill_rate,omitempty"`
	BurstLimit           int64    `protobuf:"varint,2,opt,name=burst_limit,json=burstLimit,proto3" json:"burst_limit,omitempty"`
	MaxTokens            float64  `protobuf:"fixed64,3,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenLimitSettings) Reset()         { *m = TokenLimitSettings{} }
func (m *TokenLimitSettings) String() string { return proto.CompactTextString(m) }
func (*TokenLimitSettings) ProtoMessage()    {}
func (*TokenLimitSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{21}
}
func (m *TokenLimitSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenLimitSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenLimitSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenLimitSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenLimitSettings.Merge(m, src)
}
func (m *TokenLimitSettings) XXX_Size() int {
	return m.Size()
}
func (m *TokenLimitSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenLimitSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TokenLimitSettings proto.InternalMessageInfo

func (m *TokenLimitSettings) GetFillRate() uint64 {
	if m != nil {
		return m.FillRate
	}
	return 0
}

func (m *TokenLimitSettings) GetBurstLimit() int64 {
	if m != nil {
		return m.BurstLimit
	}
	return 0
}

func (m *TokenLimitSettings) GetMaxTokens() float64 {
	if m != nil {
		return m.MaxTokens
	}
	return 0
}

type Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{22}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Error.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return m.Size()
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("resource_manager.RequestUnitType", RequestUnitType_name, RequestUnitType_value)
	proto.RegisterEnum("resource_manager.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("resource_manager.GroupMode", GroupMode_name, GroupMode_value)
	proto.RegisterType((*ListResourceGroupsRequest)(nil), "resource_manager.ListResourceGroupsRequest")
	proto.RegisterType((*ListResourceGroupsResponse)(nil), "resource_manager.ListResourceGroupsResponse")
	proto.RegisterType((*GetResourceGroupRequest)(nil), "resource_manager.GetResourceGroupRequest")
	proto.RegisterType((*GetResourceGroupResponse)(nil), "resource_manager.GetResourceGroupResponse")
	proto.RegisterType((*DeleteResourceGroupRequest)(nil), "resource_manager.DeleteResourceGroupRequest")
	proto.RegisterType((*DeleteResourceGroupResponse)(nil), "resource_manager.DeleteResourceGroupResponse")
	proto.RegisterType((*PutResourceGroupRequest)(nil), "resource_manager.PutResourceGroupRequest")
	proto.RegisterType((*PutResourceGroupResponse)(nil), "resource_manager.PutResourceGroupResponse")
	proto.RegisterType((*TokenBucketsRequest)(nil), "resource_manager.TokenBucketsRequest")
	proto.RegisterType((*TokenBucketRequest)(nil), "resource_manager.TokenBucketRequest")
	proto.RegisterType((*TokenBucketRequest_RequestRU)(nil), "resource_manager.TokenBucketRequest.RequestRU")
	proto.RegisterType((*TokenBucketRequest_RequestResource)(nil), "resource_manager.TokenBucketRequest.RequestResource")
	proto.RegisterType((*TokenBucketsResponse)(nil), "resource_manager.TokenBucketsResponse")
	proto.RegisterType((*TokenBucketResponse)(nil), "resource_manager.TokenBucketResponse")
	proto.RegisterType((*GrantedResourceTokenBucket)(nil), "resource_manager.GrantedResourceTokenBucket")
	proto.RegisterType((*GrantedRUTokenBucket)(nil), "resource_manager.GrantedRUTokenBucket")
	proto.RegisterType((*Consumption)(nil), "resource_manager.Consumption")
	proto.RegisterType((*RequestUnitItem)(nil), "resource_manager.RequestUnitItem")
	proto.RegisterType((*ResourceItem)(nil), "resource_manager.ResourceItem")
	proto.RegisterType((*ResourceGroup)(nil), "resource_manager.ResourceGroup")
	proto.RegisterType((*GroupRequestUnitSettings)(nil), "resource_manager.GroupRequestUnitSettings")
	proto.RegisterType((*GroupResourceSettings)(nil), "resource_manager.GroupResourceSettings")
	proto.RegisterType((*TokenBucket)(nil), "resource_manager.TokenBucket")
	proto.RegisterType((*TokenLimitSettings)(nil), "resource_manager.TokenLimitSettings")
	proto.RegisterType((*Error)(nil), "resource_manager.Error")
}

func init() { proto.RegisterFile("resource_manager.proto", fileDescriptor_7048dd9233ee965d) }

var fileDescriptor_7048dd9233ee965d = []byte{
	// 1382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcf, 0x73, 0xdb, 0xc4,
	0x17, 0xb7, 0xfc, 0x23, 0xb6, 0x9f, 0x1b, 0xdb, 0xd9, 0x24, 0x8d, 0xbf, 0xce, 0x34, 0x6d, 0xf5,
	0x85, 0x92, 0xa6, 0x6d, 0xda, 0x06, 0x4a, 0x7b, 0x6c, 0x93, 0x42, 0x9b, 0x21, 0x69, 0x33, 0xdb,
	0x78, 0xca, 0x81, 0x22, 0x14, 0x6b, 0xeb, 0x11, 0x96, 0x25, 0x79, 0xb5, 0x8a, 0x9b, 0x5b, 0x0f,
	0x9c, 0x98, 0xe1, 0xce, 0x9f, 0xc0, 0x70, 0xe2, 0x0c, 0x33, 0x9c, 0x39, 0x72, 0xe4, 0xc8, 0x94,
	0x7f, 0x82, 0x23, 0xb3, 0x3f, 0x24, 0xcb, 0xb5, 0x1c, 0x27, 0x99, 0x0e, 0xdc, 0xd6, 0x6f, 0x3f,
	0xef, 0xf3, 0x3e, 0xbb, 0xfb, 0xde, 0xd3, 0xae, 0xe1, 0x3c, 0x25, 0x81, 0x17, 0xd2, 0x36, 0x31,
	0x7a, 0xa6, 0x6b, 0x76, 0x08, 0x5d, 0xf7, 0xa9, 0xc7, 0x3c, 0x54, 0x7f, 0xdb, 0xde, 0x5c, 0xe8,
	0x78, 0x1d, 0x4f, 0x4c, 0xde, 0xe4, 0x23, 0x89, 0x6b, 0xd6, 0x68, 0x18, 0x30, 0x31, 0x94, 0x06,
	0x7d, 0x19, 0xfe, 0xb7, 0x63, 0x07, 0x0c, 0x2b, 0xf7, 0x47, 0xd4, 0x0b, 0xfd, 0x00, 0x93, 0x7e,
	0x48, 0x02, 0xa6, 0x7f, 0xa3, 0x41, 0x33, 0x6d, 0x36, 0xf0, 0x3d, 0x37, 0x20, 0xe8, 0x06, 0x14,
	0x08, 0xa5, 0x1e, 0x6d, 0x68, 0x97, 0xb4, 0xd5, 0xca, 0xc6, 0xd2, 0xfa, 0x98, 0xb8, 0x4f, 0xf8,
	0x34, 0x96, 0x28, 0x74, 0x17, 0x66, 0x3a, 0x82, 0xa0, 0x91, 0xbd, 0x94, 0x5b, 0xad, 0x6c, 0x5c,
	0x1c, 0xc7, 0x8f, 0x04, 0xc2, 0x0a, 0xae, 0x6f, 0xc3, 0xd2, 0x23, 0x32, 0x2a, 0x42, 0x29, 0x44,
	0xeb, 0x30, 0x1f, 0x93, 0x08, 0xb4, 0xe1, 0x9a, 0x3d, 0x22, 0x04, 0x95, 0xf1, 0x1c, 0x4d, 0xba,
	0x3c, 0x31, 0x7b, 0x44, 0x7f, 0xad, 0x41, 0x63, 0x9c, 0xeb, 0x6c, 0xeb, 0xb9, 0x03, 0x05, 0x11,
	0xb2, 0x91, 0x15, 0xf0, 0xa9, 0xcb, 0x91, 0x68, 0x7d, 0x07, 0x9a, 0x0f, 0x89, 0x43, 0x18, 0x79,
	0x27, 0x0b, 0xfa, 0x0a, 0x96, 0x53, 0xd9, 0xce, 0xb6, 0x24, 0x04, 0xf9, 0x03, 0xcf, 0x3a, 0x12,
	0x2b, 0x2a, 0x63, 0x31, 0xd6, 0xf7, 0x60, 0x69, 0x2f, 0x4c, 0xdf, 0xfd, 0x78, 0x07, 0xb4, 0x53,
	0xed, 0xc0, 0x0b, 0x68, 0x8c, 0x33, 0xbe, 0x3b, 0xc1, 0x3f, 0x6b, 0x30, 0xbf, 0xef, 0x75, 0x89,
	0xbb, 0x19, 0xb6, 0xbb, 0x84, 0x45, 0xd9, 0x8c, 0xee, 0x43, 0x89, 0xca, 0x61, 0xd0, 0xd0, 0x44,
	0x06, 0xbe, 0x37, 0xce, 0x9e, 0x70, 0x54, 0x7e, 0x38, 0xf6, 0x42, 0x77, 0xa1, 0xc1, 0x4c, 0xda,
	0x21, 0xcc, 0x50, 0x26, 0xc3, 0x27, 0xd4, 0xf6, 0x2c, 0xa3, 0x17, 0x08, 0x05, 0x79, 0xbc, 0x28,
	0xe7, 0x95, 0xeb, 0x9e, 0x98, 0xdd, 0x0d, 0xd0, 0x2a, 0xd4, 0xdb, 0x8e, 0x4d, 0x5c, 0x66, 0x84,
	0xae, 0xdd, 0x0f, 0x89, 0x61, 0x5b, 0x8d, 0x9c, 0x70, 0xa8, 0x4a, 0x7b, 0x4b, 0x98, 0xb7, 0x2d,
	0xfd, 0xbb, 0x3c, 0xa0, 0x71, 0x0d, 0xa7, 0x4d, 0x0b, 0xf4, 0x19, 0x94, 0x68, 0x68, 0xd8, 0x8c,
	0x28, 0x65, 0x95, 0x8d, 0xf5, 0x93, 0xac, 0x75, 0x3d, 0x5a, 0x73, 0xeb, 0x71, 0x06, 0x17, 0x69,
	0xb8, 0xcd, 0x09, 0xd0, 0x0b, 0xa8, 0xc6, 0xbe, 0x92, 0x32, 0x27, 0x28, 0x3f, 0x3a, 0x15, 0xa5,
	0x82, 0x3e, 0xce, 0xe0, 0xd9, 0xc8, 0x4d, 0xd2, 0x1f, 0xc0, 0x4a, 0xdb, 0x73, 0x83, 0xb0, 0xe7,
	0x33, 0xdb, 0x73, 0x8d, 0xc0, 0x76, 0xdb, 0xc4, 0x70, 0xcc, 0x20, 0xde, 0xe5, 0x46, 0x5e, 0x84,
	0xbb, 0x30, 0x1e, 0x6e, 0x6b, 0xe8, 0x87, 0x97, 0x13, 0x24, 0xcf, 0x38, 0xc7, 0x8e, 0x19, 0x44,
	0x22, 0x9a, 0x4f, 0xa0, 0x1c, 0x2f, 0x0d, 0x3d, 0x80, 0x4a, 0x74, 0x7e, 0xd4, 0x08, 0x55, 0x2e,
	0x5c, 0x4e, 0x4b, 0x5e, 0x01, 0x6a, 0xb9, 0x36, 0xe3, 0x4a, 0x71, 0x99, 0x46, 0x14, 0xcd, 0x2f,
	0xa0, 0xf6, 0xd6, 0xba, 0xd0, 0x36, 0xd4, 0x63, 0x56, 0x65, 0x53, 0xd4, 0x2b, 0x93, 0xeb, 0x42,
	0xf0, 0xd6, 0xe8, 0x28, 0xd5, 0x66, 0x19, 0x8a, 0xca, 0xa4, 0x7f, 0xab, 0xc1, 0xc2, 0x68, 0x32,
	0x9f, 0xad, 0x50, 0xb6, 0xa0, 0x4c, 0x95, 0x6b, 0xd4, 0x7f, 0xdf, 0x9f, 0x72, 0x7c, 0x12, 0x8d,
	0x87, 0x7e, 0xfa, 0xeb, 0xec, 0x48, 0x65, 0xc5, 0x5a, 0x4e, 0x9b, 0x9d, 0xcf, 0x00, 0x75, 0xa8,
	0xe9, 0x32, 0x62, 0xf1, 0x03, 0x30, 0x18, 0xa7, 0x8c, 0x54, 0x5d, 0x19, 0x57, 0xf5, 0x48, 0x62,
	0x71, 0x2b, 0x19, 0xbb, 0xd6, 0x19, 0xb1, 0x06, 0xc8, 0x82, 0xa5, 0x98, 0x34, 0x62, 0x50, 0xcc,
	0x39, 0xc1, 0x7c, 0x7d, 0x32, 0xb3, 0xb2, 0x27, 0xf9, 0x17, 0x3b, 0x29, 0x73, 0x81, 0xfe, 0xab,
	0x06, 0xcd, 0xc9, 0x5e, 0x68, 0x03, 0xf2, 0xec, 0xc8, 0x97, 0x4b, 0xaf, 0x1e, 0x77, 0xf0, 0xfb,
	0x47, 0x3e, 0xc1, 0x02, 0x8b, 0x1e, 0x42, 0x35, 0x12, 0x1e, 0xef, 0xc4, 0x84, 0x7c, 0x4f, 0x0a,
	0x9c, 0x55, 0x4e, 0x6a, 0xf9, 0x57, 0xa0, 0xc6, 0xa8, 0xdd, 0xee, 0x3a, 0xc4, 0x60, 0x76, 0x8f,
	0x18, 0xaa, 0x4a, 0x73, 0x78, 0x56, 0x99, 0xf7, 0xed, 0x1e, 0xd9, 0x0d, 0xf4, 0x5f, 0x34, 0x58,
	0x48, 0xdb, 0x50, 0x74, 0x67, 0x44, 0xfa, 0xf1, 0xe5, 0xf0, 0x9f, 0xa9, 0xff, 0x31, 0x0b, 0x95,
	0x44, 0xd1, 0x23, 0x04, 0x05, 0xaa, 0x8a, 0x58, 0x5b, 0xd5, 0x70, 0x8e, 0xe2, 0x16, 0xb7, 0x0d,
	0x84, 0x2d, 0x2b, 0x6d, 0x03, 0xdc, 0x42, 0x17, 0x00, 0x28, 0x31, 0x2d, 0xe3, 0xe0, 0x88, 0x11,
	0x49, 0xad, 0xf1, 0xc4, 0x36, 0xad, 0x4d, 0x6e, 0x40, 0x17, 0xa1, 0x32, 0xa0, 0x36, 0x23, 0x6a,
	0x3e, 0x2f, 0xe6, 0x41, 0x98, 0x24, 0xe0, 0x2a, 0xcc, 0x31, 0x8f, 0x99, 0x8e, 0xd1, 0xf6, 0xc3,
	0x58, 0x61, 0x41, 0xc0, 0xaa, 0x62, 0x62, 0xcb, 0x0f, 0xa5, 0x44, 0x74, 0x0b, 0x16, 0x83, 0xbe,
	0x63, 0x38, 0xe6, 0x11, 0xa1, 0x23, 0xf0, 0x19, 0x01, 0x9f, 0x0b, 0xfa, 0xce, 0x0e, 0x9f, 0x1b,
	0x7a, 0x5c, 0x85, 0xb9, 0xee, 0xa1, 0x21, 0xf4, 0x51, 0xbf, 0x6d, 0xb4, 0xbd, 0xd0, 0x65, 0x8d,
	0xa2, 0x24, 0xef, 0x1e, 0x62, 0x62, 0x5a, 0xd8, 0x6f, 0x6f, 0x71, 0x2b, 0xba, 0x06, 0xa8, 0x7b,
	0x68, 0x48, 0xad, 0x43, 0x6c, 0x49, 0x60, 0x6b, 0xdd, 0xc3, 0xe7, 0x7c, 0x22, 0x02, 0xeb, 0x5f,
	0xc6, 0x4d, 0x2a, 0x6a, 0x61, 0x67, 0x3d, 0xe4, 0x05, 0x28, 0x1c, 0x9a, 0x4e, 0x48, 0xd4, 0x96,
	0xca, 0x1f, 0xfa, 0xe7, 0x70, 0x2e, 0xd9, 0xc7, 0xce, 0x94, 0xfc, 0xe9, 0xcc, 0x7f, 0x6b, 0x30,
	0x3b, 0x72, 0x3f, 0xe0, 0x1f, 0xfa, 0x44, 0x4f, 0x11, 0x63, 0x74, 0x13, 0xf2, 0x3d, 0xcf, 0x92,
	0xae, 0xd5, 0x8d, 0xe5, 0xb4, 0xf2, 0xf6, 0x42, 0x7f, 0xd7, 0xb3, 0x08, 0x16, 0x40, 0xb4, 0x03,
	0xe7, 0x78, 0xbf, 0x09, 0x08, 0x63, 0xb6, 0xdb, 0x89, 0x3e, 0x63, 0x6b, 0x13, 0x1c, 0x13, 0x5b,
	0xf1, 0x4c, 0x79, 0x60, 0xa0, 0xad, 0x68, 0x8c, 0xf6, 0x21, 0x6e, 0x6d, 0x43, 0x4a, 0xf9, 0xa9,
	0xfa, 0x60, 0x22, 0xa5, 0xb4, 0xc6, 0x7c, 0xf1, 0xbd, 0x3d, 0xb2, 0xc8, 0x1b, 0xea, 0x84, 0xf0,
	0xe8, 0x76, 0x32, 0xdd, 0xa7, 0xd6, 0x98, 0xa8, 0x86, 0xdb, 0xc9, 0x6a, 0x98, 0xee, 0x32, 0xc0,
	0x2d, 0x7e, 0x81, 0x5a, 0x4c, 0x95, 0x8b, 0x6e, 0x42, 0xae, 0xed, 0x9f, 0x34, 0x7a, 0xdb, 0x0f,
	0xd1, 0xc7, 0x50, 0xb4, 0x3d, 0x91, 0xda, 0x27, 0x8b, 0x3f, 0x63, 0x7b, 0x3c, 0xdf, 0xd1, 0x3d,
	0x28, 0xd9, 0x9e, 0xcc, 0x73, 0x75, 0x4a, 0x53, 0x1c, 0x8b, 0xb6, 0x27, 0x92, 0x5f, 0xef, 0x40,
	0x25, 0xd9, 0xd5, 0xee, 0x43, 0x29, 0x3e, 0x1b, 0x29, 0x7b, 0xd2, 0xa5, 0x6f, 0xc7, 0xee, 0x25,
	0x0e, 0x3a, 0xf6, 0x42, 0xe7, 0x61, 0x26, 0xd1, 0xd8, 0x34, 0xac, 0x7e, 0xe9, 0x7d, 0x75, 0x51,
	0x1b, 0xf1, 0x43, 0xcb, 0x50, 0x7e, 0x69, 0x3b, 0x8e, 0x41, 0x4d, 0x26, 0x93, 0x35, 0x8f, 0x4b,
	0xdc, 0x80, 0x4d, 0x46, 0x78, 0x9b, 0x39, 0x08, 0x69, 0xc0, 0x0c, 0x87, 0xfb, 0x08, 0xbe, 0x1c,
	0x06, 0x61, 0x12, 0x2c, 0xbc, 0x4d, 0xf5, 0xcc, 0x57, 0xc3, 0xcf, 0x96, 0x68, 0x53, 0x3d, 0xf3,
	0x95, 0xfa, 0xf8, 0x5c, 0x86, 0x82, 0xf8, 0xa8, 0xa3, 0x06, 0x14, 0x7b, 0x24, 0x08, 0xcc, 0x4e,
	0x54, 0x10, 0xd1, 0xcf, 0xb5, 0xff, 0x8f, 0xd4, 0x3c, 0x2f, 0x34, 0x54, 0x84, 0x1c, 0xc6, 0xad,
	0x7a, 0x86, 0x0f, 0x9e, 0xe3, 0x56, 0x5d, 0x5b, 0xbb, 0x37, 0x2c, 0xdc, 0x08, 0xb1, 0xb5, 0xc7,
	0x11, 0x55, 0x80, 0xed, 0xa7, 0xfc, 0x00, 0x3e, 0x75, 0xbc, 0x41, 0x5d, 0x43, 0x35, 0xa8, 0x6c,
	0x3f, 0x15, 0xfb, 0x2a, 0x0c, 0xd9, 0xb5, 0xdb, 0x50, 0x8e, 0x8b, 0x0a, 0x55, 0xa0, 0xd8, 0x72,
	0xbb, 0xae, 0x37, 0x70, 0xeb, 0x19, 0x04, 0x30, 0x83, 0x5b, 0xdc, 0x5c, 0xd7, 0xf8, 0x04, 0x36,
	0x07, 0xe2, 0x47, 0x76, 0xe3, 0xa7, 0x02, 0x97, 0x24, 0xa3, 0xed, 0xca, 0x0d, 0x47, 0x7d, 0x40,
	0xe3, 0xef, 0x4a, 0x74, 0x6d, 0xfc, 0x64, 0x26, 0xbe, 0x4d, 0x9b, 0xd7, 0x4f, 0x06, 0x96, 0x37,
	0x14, 0x3d, 0x83, 0xba, 0x50, 0x7f, 0xfb, 0xe1, 0x87, 0xae, 0xa6, 0x94, 0x69, 0xfa, 0x43, 0xb3,
	0xb9, 0x76, 0x12, 0x68, 0x32, 0xd8, 0x03, 0xcb, 0x9a, 0x1a, 0x6c, 0xc2, 0xbb, 0x2a, 0x2d, 0xd8,
	0xa4, 0x07, 0x93, 0x9e, 0x41, 0x2e, 0xcc, 0xef, 0x7a, 0x96, 0xfd, 0xf2, 0xe8, 0x5f, 0x8a, 0xc7,
	0x60, 0x3e, 0xe5, 0xc9, 0x89, 0x52, 0x0e, 0x64, 0xf2, 0x3b, 0xb7, 0x79, 0xe3, 0x84, 0xe8, 0x38,
	0xea, 0xd7, 0x30, 0xff, 0xa0, 0xdd, 0x0f, 0x6d, 0x9a, 0xbc, 0x6f, 0x05, 0xe8, 0xf8, 0x4b, 0x6c,
	0x9c, 0x2d, 0x57, 0xa6, 0xc1, 0xa2, 0x38, 0xab, 0xda, 0x2d, 0x6d, 0x73, 0xe1, 0x8f, 0x1f, 0x4a,
	0xda, 0x6f, 0x6f, 0x56, 0xb4, 0xdf, 0xdf, 0xac, 0x68, 0x7f, 0xbe, 0x59, 0xd1, 0xbe, 0xff, 0x6b,
	0x25, 0x73, 0x30, 0x23, 0xfe, 0x31, 0xf9, 0xf0, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xbd,
	0x0f, 0x0f, 0x84, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerClient is the client API for ResourceManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerClient interface {
	ListResourceGroups(ctx context.Context, in *ListResourceGroupsRequest, opts ...grpc.CallOption) (*ListResourceGroupsResponse, error)
	GetResourceGroup(ctx context.Context, in *GetResourceGroupRequest, opts ...grpc.CallOption) (*GetResourceGroupResponse, error)
	AddResourceGroup(ctx context.Context, in *PutResourceGroupRequest, opts ...grpc.CallOption) (*PutResourceGroupResponse, error)
	ModifyResourceGroup(ctx context.Context, in *PutResourceGroupRequest, opts ...grpc.CallOption) (*PutResourceGroupResponse, error)
	DeleteResourceGroup(ctx context.Context, in *DeleteResourceGroupRequest, opts ...grpc.CallOption) (*DeleteResourceGroupResponse, error)
	AcquireTokenBuckets(ctx context.Context, opts ...grpc.CallOption) (ResourceManager_AcquireTokenBucketsClient, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) ListResourceGroups(ctx context.Context, in *ListResourceGroupsRequest, opts ...grpc.CallOption) (*ListResourceGroupsResponse, error) {
	out := new(ListResourceGroupsResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/ListResourceGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetResourceGroup(ctx context.Context, in *GetResourceGroupRequest, opts ...grpc.CallOption) (*GetResourceGroupResponse, error) {
	out := new(GetResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/GetResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) AddResourceGroup(ctx context.Context, in *PutResourceGroupRequest, opts ...grpc.CallOption) (*PutResourceGroupResponse, error) {
	out := new(PutResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/AddResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) ModifyResourceGroup(ctx context.Context, in *PutResourceGroupRequest, opts ...grpc.CallOption) (*PutResourceGroupResponse, error) {
	out := new(PutResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/ModifyResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteResourceGroup(ctx context.Context, in *DeleteResourceGroupRequest, opts ...grpc.CallOption) (*DeleteResourceGroupResponse, error) {
	out := new(DeleteResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/DeleteResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) AcquireTokenBuckets(ctx context.Context, opts ...grpc.CallOption) (ResourceManager_AcquireTokenBucketsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceManager_serviceDesc.Streams[0], "/resource_manager.ResourceManager/AcquireTokenBuckets", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceManagerAcquireTokenBucketsClient{stream}
	return x, nil
}

type ResourceManager_AcquireTokenBucketsClient interface {
	Send(*TokenBucketsRequest) error
	Recv() (*TokenBucketsResponse, error)
	grpc.ClientStream
}

type resourceManagerAcquireTokenBucketsClient struct {
	grpc.ClientStream
}

func (x *resourceManagerAcquireTokenBucketsClient) Send(m *TokenBucketsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *resourceManagerAcquireTokenBucketsClient) Recv() (*TokenBucketsResponse, error) {
	m := new(TokenBucketsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourceManagerServer is the server API for ResourceManager service.
type ResourceManagerServer interface {
	ListResourceGroups(context.Context, *ListResourceGroupsRequest) (*ListResourceGroupsResponse, error)
	GetResourceGroup(context.Context, *GetResourceGroupRequest) (*GetResourceGroupResponse, error)
	AddResourceGroup(context.Context, *PutResourceGroupRequest) (*PutResourceGroupResponse, error)
	ModifyResourceGroup(context.Context, *PutResourceGroupRequest) (*PutResourceGroupResponse, error)
	DeleteResourceGroup(context.Context, *DeleteResourceGroupRequest) (*DeleteResourceGroupResponse, error)
	AcquireTokenBuckets(ResourceManager_AcquireTokenBucketsServer) error
}

// UnimplementedResourceManagerServer can be embedded to have forward compatible implementations.
type UnimplementedResourceManagerServer struct {
}

func (*UnimplementedResourceManagerServer) ListResourceGroups(ctx context.Context, req *ListResourceGroupsRequest) (*ListResourceGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceGroups not implemented")
}
func (*UnimplementedResourceManagerServer) GetResourceGroup(ctx context.Context, req *GetResourceGroupRequest) (*GetResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) AddResourceGroup(ctx context.Context, req *PutResourceGroupRequest) (*PutResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) ModifyResourceGroup(ctx context.Context, req *PutResourceGroupRequest) (*PutResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) DeleteResourceGroup(ctx context.Context, req *DeleteResourceGroupRequest) (*DeleteResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) AcquireTokenBuckets(srv ResourceManager_AcquireTokenBucketsServer) error {
	return status.Errorf(codes.Unimplemented, "method AcquireTokenBuckets not implemented")
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_ListResourceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListResourceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/ListResourceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListResourceGroups(ctx, req.(*ListResourceGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/GetResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetResourceGroup(ctx, req.(*GetResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_AddResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).AddResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/AddResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).AddResourceGroup(ctx, req.(*PutResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_ModifyResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ModifyResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/ModifyResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ModifyResourceGroup(ctx, req.(*PutResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/DeleteResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteResourceGroup(ctx, req.(*DeleteResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_AcquireTokenBuckets_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ResourceManagerServer).AcquireTokenBuckets(&resourceManagerAcquireTokenBucketsServer{stream})
}

type ResourceManager_AcquireTokenBucketsServer interface {
	Send(*TokenBucketsResponse) error
	Recv() (*TokenBucketsRequest, error)
	grpc.ServerStream
}

type resourceManagerAcquireTokenBucketsServer struct {
	grpc.ServerStream
}

func (x *resourceManagerAcquireTokenBucketsServer) Send(m *TokenBucketsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *resourceManagerAcquireTokenBucketsServer) Recv() (*TokenBucketsRequest, error) {
	m := new(TokenBucketsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resource_manager.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListResourceGroups",
			Handler:    _ResourceManager_ListResourceGroups_Handler,
		},
		{
			MethodName: "GetResourceGroup",
			Handler:    _ResourceManager_GetResourceGroup_Handler,
		},
		{
			MethodName: "AddResourceGroup",
			Handler:    _ResourceManager_AddResourceGroup_Handler,
		},
		{
			MethodName: "ModifyResourceGroup",
			Handler:    _ResourceManager_ModifyResourceGroup_Handler,
		},
		{
			MethodName: "DeleteResourceGroup",
			Handler:    _ResourceManager_DeleteResourceGroup_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AcquireTokenBuckets",
			Handler:       _ResourceManager_AcquireTokenBuckets_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "resource_manager.proto",
}

func (m *ListResourceGroupsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceGroupsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceGroupsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListResourceGroupsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceGroupsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceGroupsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Groups) > 0 {
		for iNdEx := len(m.Groups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Groups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceGroupName) > 0 {
		i -= len(m.ResourceGroupName)
		copy(dAtA[i:], m.ResourceGroupName)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteResourceGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteResourceGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteResourceGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceGroupName) > 0 {
		i -= len(m.ResourceGroupName)
		copy(dAtA[i:], m.ResourceGroupName)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteResourceGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteResourceGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteResourceGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PutResourceGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PutResourceGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PutResourceGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PutResourceGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PutResourceGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PutResourceGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClientUniqueId != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.ClientUniqueId))
		i--
		dAtA[i] = 0x18
	}
	if m.TargetRequestPeriodMs != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.TargetRequestPeriodMs))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Requests) > 0 {
		for iNdEx := len(m.Requests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Requests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConsumptionSinceLastRequest != nil {
		{
			size, err := m.ConsumptionSinceLastRequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Request != nil {
		{
			size := m.Request.Size()
			i -= size
			if _, err := m.Request.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.ResourceGroupName) > 0 {
		i -= len(m.ResourceGroupName)
		copy(dAtA[i:], m.ResourceGroupName)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketRequest_RuItems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequest_RuItems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RuItems != nil {
		{
			size, err := m.RuItems.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *TokenBucketRequest_ResourceItems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequest_ResourceItems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ResourceItems != nil {
		{
			size, err := m.ResourceItems.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *TokenBucketRequest_RequestRU) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketRequest_RequestRU) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequest_RequestRU) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestRU) > 0 {
		for iNdEx := len(m.RequestRU) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RequestRU[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketRequest_RequestResource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketRequest_RequestResource) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequest_RequestResource) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestResource) > 0 {
		for iNdEx := len(m.RequestResource) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RequestResource[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Responses) > 0 {
		for iNdEx := len(m.Responses) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Responses[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GrantedResourceTokens) > 0 {
		for iNdEx := len(m.GrantedResourceTokens) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GrantedResourceTokens[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.GrantedRUTokens) > 0 {
		for iNdEx := len(m.GrantedRUTokens) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GrantedRUTokens[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ResourceGroupName) > 0 {
		i -= len(m.ResourceGroupName)
		copy(dAtA[i:], m.ResourceGroupName)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantedResourceTokenBucket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantedResourceTokenBucket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantedResourceTokenBucket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TrickleTimeMs != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.TrickleTimeMs))
		i--
		dAtA[i] = 0x18
	}
	if m.GrantedTokens != nil {
		{
			size, err := m.GrantedTokens.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrantedRUTokenBucket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantedRUTokenBucket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantedRUTokenBucket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TrickleTimeMs != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.TrickleTimeMs))
		i--
		dAtA[i] = 0x18
	}
	if m.GrantedTokens != nil {
		{
			size, err := m.GrantedTokens.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Consumption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Consumption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Consumption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.KvWriteRpcCount != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.KvWriteRpcCount))))
		i--
		dAtA[i] = 0x41
	}
	if m.KvReadRpcCount != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.KvReadRpcCount))))
		i--
		dAtA[i] = 0x39
	}
	if m.SqlLayerCpuTimeMs != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.SqlLayerCpuTimeMs))))
		i--
		dAtA[i] = 0x31
	}
	if m.TotalCpuTimeMs != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.TotalCpuTimeMs))))
		i--
		dAtA[i] = 0x29
	}
	if m.WriteBytes != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.WriteBytes))))
		i--
		dAtA[i] = 0x21
	}
	if m.ReadBytes != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.ReadBytes))))
		i--
		dAtA[i] = 0x19
	}
	if m.WRU != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.WRU))))
		i--
		dAtA[i] = 0x11
	}
	if m.RRU != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.RRU))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *RequestUnitItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestUnitItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestUnitItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Value))))
		i--
		dAtA[i] = 0x11
	}
	if m.Type != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ResourceItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Value))))
		i--
		dAtA[i] = 0x11
	}
	if m.Type != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ResourceGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ResourceSettings != nil {
		{
			size, err := m.ResourceSettings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.RUSettings != nil {
		{
			size, err := m.RUSettings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Mode != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Mode))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GroupRequestUnitSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupRequestUnitSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupRequestUnitSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WRU != nil {
		{
			size, err := m.WRU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RRU != nil {
		{
			size, err := m.RRU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GroupResourceSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupResourceSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupResourceSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IoWrite != nil {
		{
			size, err := m.IoWrite.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.IoRead != nil {
		{
			size, err := m.IoRead.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Cpu != nil {
		{
			size, err := m.Cpu.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tokens != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Tokens))))
		i--
		dAtA[i] = 0x11
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenLimitSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenLimitSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenLimitSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxTokens != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.MaxTokens))))
		i--
		dAtA[i] = 0x19
	}
	if m.BurstLimit != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.BurstLimit))
		i--
		dAtA[i] = 0x10
	}
	if m.FillRate != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.FillRate))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Error) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Error) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Error) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResourceManager(dAtA []byte, offset int, v uint64) int {
	offset -= sovResourceManager(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListResourceGroupsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListResourceGroupsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.Groups) > 0 {
		for _, e := range m.Groups {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetResourceGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupName)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetResourceGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteResourceGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupName)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteResourceGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PutResourceGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PutResourceGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Requests) > 0 {
		for _, e := range m.Requests {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.TargetRequestPeriodMs != 0 {
		n += 1 + sovResourceManager(uint64(m.TargetRequestPeriodMs))
	}
	if m.ClientUniqueId != 0 {
		n += 1 + sovResourceManager(uint64(m.ClientUniqueId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupName)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Request != nil {
		n += m.Request.Size()
	}
	if m.ConsumptionSinceLastRequest != nil {
		l = m.ConsumptionSinceLastRequest.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketRequest_RuItems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RuItems != nil {
		l = m.RuItems.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	return n
}
func (m *TokenBucketRequest_ResourceItems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceItems != nil {
		l = m.ResourceItems.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	return n
}
func (m *TokenBucketRequest_RequestRU) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RequestRU) > 0 {
		for _, e := range m.RequestRU {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketRequest_RequestResource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RequestResource) > 0 {
		for _, e := range m.RequestResource {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.Responses) > 0 {
		for _, e := range m.Responses {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupName)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.GrantedRUTokens) > 0 {
		for _, e := range m.GrantedRUTokens {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if len(m.GrantedResourceTokens) > 0 {
		for _, e := range m.GrantedResourceTokens {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrantedResourceTokenBucket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovResourceManager(uint64(m.Type))
	}
	if m.GrantedTokens != nil {
		l = m.GrantedTokens.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.TrickleTimeMs != 0 {
		n += 1 + sovResourceManager(uint64(m.TrickleTimeMs))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrantedRUTokenBucket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovResourceManager(uint64(m.Type))
	}
	if m.GrantedTokens != nil {
		l = m.GrantedTokens.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.TrickleTimeMs != 0 {
		n += 1 + sovResourceManager(uint64(m.TrickleTimeMs))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Consumption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RRU != 0 {
		n += 9
	}
	if m.WRU != 0 {
		n += 9
	}
	if m.ReadBytes != 0 {
		n += 9
	}
	if m.WriteBytes != 0 {
		n += 9
	}
	if m.TotalCpuTimeMs != 0 {
		n += 9
	}
	if m.SqlLayerCpuTimeMs != 0 {
		n += 9
	}
	if m.KvReadRpcCount != 0 {
		n += 9
	}
	if m.KvWriteRpcCount != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RequestUnitItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovResourceManager(uint64(m.Type))
	}
	if m.Value != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovResourceManager(uint64(m.Type))
	}
	if m.Value != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Mode != 0 {
		n += 1 + sovResourceManager(uint64(m.Mode))
	}
	if m.RUSettings != nil {
		l = m.RUSettings.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.ResourceSettings != nil {
		l = m.ResourceSettings.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupRequestUnitSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RRU != nil {
		l = m.RRU.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.WRU != nil {
		l = m.WRU.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupResourceSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cpu != nil {
		l = m.Cpu.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.IoRead != nil {
		l = m.IoRead.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.IoWrite != nil {
		l = m.IoWrite.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Tokens != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenLimitSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FillRate != 0 {
		n += 1 + sovResourceManager(uint64(m.FillRate))
	}
	if m.BurstLimit != 0 {
		n += 1 + sovResourceManager(uint64(m.BurstLimit))
	}
	if m.MaxTokens != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Error) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovResourceManager(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResourceManager(x uint64) (n int) {
	return sovResourceManager(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ListResourceGroupsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceGroupsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceGroupsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListResourceGroupsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceGroupsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceGroupsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Groups = append(m.Groups, &ResourceGroup{})
			if err := m.Groups[len(m.Groups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &ResourceGroup{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteResourceGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteResourceGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteResourceGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteResourceGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteResourceGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteResourceGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PutResourceGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PutResourceGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PutResourceGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &ResourceGroup{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PutResourceGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PutResourceGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PutResourceGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Requests = append(m.Requests, &TokenBucketRequest{})
			if err := m.Requests[len(m.Requests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetRequestPeriodMs", wireType)
			}
			m.TargetRequestPeriodMs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetRequestPeriodMs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientUniqueId", wireType)
			}
			m.ClientUniqueId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientUniqueId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenBucketRequest_RequestRU{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &TokenBucketRequest_RuItems{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenBucketRequest_RequestResource{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &TokenBucketRequest_ResourceItems{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumptionSinceLastRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ConsumptionSinceLastRequest == nil {
				m.ConsumptionSinceLastRequest = &Consumption{}
			}
			if err := m.ConsumptionSinceLastRequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketRequest_RequestRU) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestRU: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestRU: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestRU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestRU = append(m.RequestRU, &RequestUnitItem{})
			if err := m.RequestRU[len(m.RequestRU)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketRequest_RequestResource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestResource = append(m.RequestResource, &ResourceItem{})
			if err := m.RequestResource[len(m.RequestResource)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Responses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Responses = append(m.Responses, &TokenBucketResponse{})
			if err := m.Responses[len(m.Responses)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedRUTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrantedRUTokens = append(m.GrantedRUTokens, &GrantedRUTokenBucket{})
			if err := m.GrantedRUTokens[len(m.GrantedRUTokens)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedResourceTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrantedResourceTokens = append(m.GrantedResourceTokens, &GrantedResourceTokenBucket{})
			if err := m.GrantedResourceTokens[len(m.GrantedResourceTokens)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantedResourceTokenBucket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantedResourceTokenBucket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantedResourceTokenBucket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ResourceType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GrantedTokens == nil {
				m.GrantedTokens = &TokenBucket{}
			}
			if err := m.GrantedTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrickleTimeMs", wireType)
			}
			m.TrickleTimeMs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TrickleTimeMs |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantedRUTokenBucket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantedRUTokenBucket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantedRUTokenBucket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RequestUnitType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GrantedTokens == nil {
				m.GrantedTokens = &TokenBucket{}
			}
			if err := m.GrantedTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrickleTimeMs", wireType)
			}
			m.TrickleTimeMs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TrickleTimeMs |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Consumption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Consumption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Consumption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field RRU", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.RRU = float64(math.Float64frombits(v))
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field WRU", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.WRU = float64(math.Float64frombits(v))
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadBytes", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.ReadBytes = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteBytes", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.WriteBytes = float64(math.Float64frombits(v))
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCpuTimeMs", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.TotalCpuTimeMs = float64(math.Float64frombits(v))
		case 6:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field SqlLayerCpuTimeMs", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.SqlLayerCpuTimeMs = float64(math.Float64frombits(v))
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field KvReadRpcCount", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.KvReadRpcCount = float64(math.Float64frombits(v))
		case 8:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field KvWriteRpcCount", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.KvWriteRpcCount = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestUnitItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestUnitItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestUnitItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RequestUnitType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Value = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ResourceType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Value = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mode", wireType)
			}
			m.Mode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mode |= GroupMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RUSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RUSettings == nil {
				m.RUSettings = &GroupRequestUnitSettings{}
			}
			if err := m.RUSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResourceSettings == nil {
				m.ResourceSettings = &GroupResourceSettings{}
			}
			if err := m.ResourceSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupRequestUnitSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupRequestUnitSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupRequestUnitSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RRU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RRU == nil {
				m.RRU = &TokenBucket{}
			}
			if err := m.RRU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WRU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WRU == nil {
				m.WRU = &TokenBucket{}
			}
			if err := m.WRU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupResourceSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupResourceSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupResourceSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cpu == nil {
				m.Cpu = &TokenBucket{}
			}
			if err := m.Cpu.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoRead", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IoRead == nil {
				m.IoRead = &TokenBucket{}
			}
			if err := m.IoRead.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoWrite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IoWrite == nil {
				m.IoWrite = &TokenBucket{}
			}
			if err := m.IoWrite.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &TokenLimitSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tokens", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Tokens = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenLimitSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenLimitSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenLimitSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FillRate", wireType)
			}
			m.FillRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FillRate |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BurstLimit", wireType)
			}
			m.BurstLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BurstLimit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxTokens", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.MaxTokens = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Error) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Error: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Error: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResourceManager(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResourceManager
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResourceManager
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResourceManager
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResourceManager        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResourceManager          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResourceManager = fmt.Errorf("proto: unexpected end of group")
)
