// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resource_manager.proto

package resource_manager

import (
	"context"
	encoding_binary "encoding/binary"
	"fmt"
	"io"
	"math"
	math_bits "math/bits"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResourceType int32

const (
	ResourceType_RRU               ResourceType = 0
	ResourceType_WRU               ResourceType = 1
	ResourceType_KVReadRPCCount    ResourceType = 2
	ResourceType_KVWriteRPCCount   ResourceType = 3
	ResourceType_ReadBytes         ResourceType = 4
	ResourceType_WriteBytes        ResourceType = 5
	ResourceType_TotoalCPUTimeMs   ResourceType = 6
	ResourceType_SQLLayerCPUTimeMs ResourceType = 7
)

var ResourceType_name = map[int32]string{
	0: "RRU",
	1: "WRU",
	2: "KVReadRPCCount",
	3: "KVWriteRPCCount",
	4: "ReadBytes",
	5: "WriteBytes",
	6: "TotoalCPUTimeMs",
	7: "SQLLayerCPUTimeMs",
}

var ResourceType_value = map[string]int32{
	"RRU":               0,
	"WRU":               1,
	"KVReadRPCCount":    2,
	"KVWriteRPCCount":   3,
	"ReadBytes":         4,
	"WriteBytes":        5,
	"TotoalCPUTimeMs":   6,
	"SQLLayerCPUTimeMs": 7,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}

func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{0}
}

type ListResourceGroupsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResourceGroupsRequest) Reset()         { *m = ListResourceGroupsRequest{} }
func (m *ListResourceGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListResourceGroupsRequest) ProtoMessage()    {}
func (*ListResourceGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{0}
}
func (m *ListResourceGroupsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceGroupsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceGroupsRequest.Merge(m, src)
}
func (m *ListResourceGroupsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceGroupsRequest proto.InternalMessageInfo

type ListResourceGroupsResponse struct {
	Error                *Error           `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Groups               []*ResourceGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListResourceGroupsResponse) Reset()         { *m = ListResourceGroupsResponse{} }
func (m *ListResourceGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListResourceGroupsResponse) ProtoMessage()    {}
func (*ListResourceGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{1}
}
func (m *ListResourceGroupsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceGroupsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceGroupsResponse.Merge(m, src)
}
func (m *ListResourceGroupsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceGroupsResponse proto.InternalMessageInfo

func (m *ListResourceGroupsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListResourceGroupsResponse) GetGroups() []*ResourceGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GetResourceGroupRequest struct {
	ResourceGroupTag     []byte   `protobuf:"bytes,1,opt,name=resource_group_tag,json=resourceGroupTag,proto3" json:"resource_group_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResourceGroupRequest) Reset()         { *m = GetResourceGroupRequest{} }
func (m *GetResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourceGroupRequest) ProtoMessage()    {}
func (*GetResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{2}
}
func (m *GetResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceGroupRequest.Merge(m, src)
}
func (m *GetResourceGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceGroupRequest proto.InternalMessageInfo

func (m *GetResourceGroupRequest) GetResourceGroupTag() []byte {
	if m != nil {
		return m.ResourceGroupTag
	}
	return nil
}

type GetResourceGroupResponse struct {
	Error                *Error         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Group                *ResourceGroup `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetResourceGroupResponse) Reset()         { *m = GetResourceGroupResponse{} }
func (m *GetResourceGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetResourceGroupResponse) ProtoMessage()    {}
func (*GetResourceGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{3}
}
func (m *GetResourceGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceGroupResponse.Merge(m, src)
}
func (m *GetResourceGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceGroupResponse proto.InternalMessageInfo

func (m *GetResourceGroupResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetResourceGroupResponse) GetGroup() *ResourceGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

type AddResourceGroupRequest struct {
	Group                *ResourceGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddResourceGroupRequest) Reset()         { *m = AddResourceGroupRequest{} }
func (m *AddResourceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*AddResourceGroupRequest) ProtoMessage()    {}
func (*AddResourceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{4}
}
func (m *AddResourceGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddResourceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddResourceGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddResourceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResourceGroupRequest.Merge(m, src)
}
func (m *AddResourceGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddResourceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResourceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddResourceGroupRequest proto.InternalMessageInfo

func (m *AddResourceGroupRequest) GetGroup() *ResourceGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

type AddResourceGroupRespose struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Responses            []byte   `protobuf:"bytes,2,opt,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResourceGroupRespose) Reset()         { *m = AddResourceGroupRespose{} }
func (m *AddResourceGroupRespose) String() string { return proto.CompactTextString(m) }
func (*AddResourceGroupRespose) ProtoMessage()    {}
func (*AddResourceGroupRespose) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{5}
}
func (m *AddResourceGroupRespose) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddResourceGroupRespose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddResourceGroupRespose.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddResourceGroupRespose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResourceGroupRespose.Merge(m, src)
}
func (m *AddResourceGroupRespose) XXX_Size() int {
	return m.Size()
}
func (m *AddResourceGroupRespose) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResourceGroupRespose.DiscardUnknown(m)
}

var xxx_messageInfo_AddResourceGroupRespose proto.InternalMessageInfo

func (m *AddResourceGroupRespose) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *AddResourceGroupRespose) GetResponses() []byte {
	if m != nil {
		return m.Responses
	}
	return nil
}

type TokenBucketsRequest struct {
	Requests              []*TokenBucketRequst `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	TargetRequestPeriodMs uint64               `protobuf:"varint,2,opt,name=target_request_period_ms,json=targetRequestPeriodMs,proto3" json:"target_request_period_ms,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *TokenBucketsRequest) Reset()         { *m = TokenBucketsRequest{} }
func (m *TokenBucketsRequest) String() string { return proto.CompactTextString(m) }
func (*TokenBucketsRequest) ProtoMessage()    {}
func (*TokenBucketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{6}
}
func (m *TokenBucketsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketsRequest.Merge(m, src)
}
func (m *TokenBucketsRequest) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketsRequest proto.InternalMessageInfo

func (m *TokenBucketsRequest) GetRequests() []*TokenBucketRequst {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *TokenBucketsRequest) GetTargetRequestPeriodMs() uint64 {
	if m != nil {
		return m.TargetRequestPeriodMs
	}
	return 0
}

type TokenBucketRequst struct {
	ResourceGroupTag            []byte            `protobuf:"bytes,1,opt,name=resource_group_tag,json=resourceGroupTag,proto3" json:"resource_group_tag,omitempty"`
	RequestedResource           []*ResourceDetail `protobuf:"bytes,2,rep,name=requested_resource,json=requestedResource,proto3" json:"requested_resource,omitempty"`
	ConsumptionSinceLastRequest []ResourceDetail  `protobuf:"bytes,3,rep,name=consumption_since_last_request,json=consumptionSinceLastRequest,proto3" json:"consumption_since_last_request"`
	XXX_NoUnkeyedLiteral        struct{}          `json:"-"`
	XXX_unrecognized            []byte            `json:"-"`
	XXX_sizecache               int32             `json:"-"`
}

func (m *TokenBucketRequst) Reset()         { *m = TokenBucketRequst{} }
func (m *TokenBucketRequst) String() string { return proto.CompactTextString(m) }
func (*TokenBucketRequst) ProtoMessage()    {}
func (*TokenBucketRequst) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{7}
}
func (m *TokenBucketRequst) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketRequst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketRequst.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketRequst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketRequst.Merge(m, src)
}
func (m *TokenBucketRequst) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketRequst) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketRequst.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketRequst proto.InternalMessageInfo

func (m *TokenBucketRequst) GetResourceGroupTag() []byte {
	if m != nil {
		return m.ResourceGroupTag
	}
	return nil
}

func (m *TokenBucketRequst) GetRequestedResource() []*ResourceDetail {
	if m != nil {
		return m.RequestedResource
	}
	return nil
}

func (m *TokenBucketRequst) GetConsumptionSinceLastRequest() []ResourceDetail {
	if m != nil {
		return m.ConsumptionSinceLastRequest
	}
	return nil
}

type TokenBucketsResponse struct {
	Error                *Error                `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	GrantedTokens        []*GrantedTokenBucket `protobuf:"bytes,2,rep,name=granted_tokens,json=grantedTokens,proto3" json:"granted_tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TokenBucketsResponse) Reset()         { *m = TokenBucketsResponse{} }
func (m *TokenBucketsResponse) String() string { return proto.CompactTextString(m) }
func (*TokenBucketsResponse) ProtoMessage()    {}
func (*TokenBucketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{8}
}
func (m *TokenBucketsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucketsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucketsResponse.Merge(m, src)
}
func (m *TokenBucketsResponse) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucketsResponse proto.InternalMessageInfo

func (m *TokenBucketsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TokenBucketsResponse) GetGrantedTokens() []*GrantedTokenBucket {
	if m != nil {
		return m.GrantedTokens
	}
	return nil
}

type GrantedTokenBucket struct {
	ResourceGroupTag     []byte       `protobuf:"bytes,1,opt,name=resource_group_tag,json=resourceGroupTag,proto3" json:"resource_group_tag,omitempty"`
	GrantedTokens        *TokenBucket `protobuf:"bytes,2,opt,name=granted_tokens,json=grantedTokens,proto3" json:"granted_tokens,omitempty"`
	TrickleTimeMs        int64        `protobuf:"varint,3,opt,name=trickle_time_ms,json=trickleTimeMs,proto3" json:"trickle_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GrantedTokenBucket) Reset()         { *m = GrantedTokenBucket{} }
func (m *GrantedTokenBucket) String() string { return proto.CompactTextString(m) }
func (*GrantedTokenBucket) ProtoMessage()    {}
func (*GrantedTokenBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{9}
}
func (m *GrantedTokenBucket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantedTokenBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantedTokenBucket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantedTokenBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantedTokenBucket.Merge(m, src)
}
func (m *GrantedTokenBucket) XXX_Size() int {
	return m.Size()
}
func (m *GrantedTokenBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantedTokenBucket.DiscardUnknown(m)
}

var xxx_messageInfo_GrantedTokenBucket proto.InternalMessageInfo

func (m *GrantedTokenBucket) GetResourceGroupTag() []byte {
	if m != nil {
		return m.ResourceGroupTag
	}
	return nil
}

func (m *GrantedTokenBucket) GetGrantedTokens() *TokenBucket {
	if m != nil {
		return m.GrantedTokens
	}
	return nil
}

func (m *GrantedTokenBucket) GetTrickleTimeMs() int64 {
	if m != nil {
		return m.TrickleTimeMs
	}
	return 0
}

type ResourceGroup struct {
	ResourceGroupTag     []byte         `protobuf:"bytes,1,opt,name=resource_group_tag,json=resourceGroupTag,proto3" json:"resource_group_tag,omitempty"`
	Settings             *GroupSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResourceGroup) Reset()         { *m = ResourceGroup{} }
func (m *ResourceGroup) String() string { return proto.CompactTextString(m) }
func (*ResourceGroup) ProtoMessage()    {}
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{10}
}
func (m *ResourceGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceGroup.Merge(m, src)
}
func (m *ResourceGroup) XXX_Size() int {
	return m.Size()
}
func (m *ResourceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceGroup proto.InternalMessageInfo

func (m *ResourceGroup) GetResourceGroupTag() []byte {
	if m != nil {
		return m.ResourceGroupTag
	}
	return nil
}

func (m *ResourceGroup) GetSettings() *GroupSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type ResourceDetail struct {
	Type                 ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=resource_manager.ResourceType" json:"type,omitempty"`
	Value                uint64       `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResourceDetail) Reset()         { *m = ResourceDetail{} }
func (m *ResourceDetail) String() string { return proto.CompactTextString(m) }
func (*ResourceDetail) ProtoMessage()    {}
func (*ResourceDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{11}
}
func (m *ResourceDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceDetail.Merge(m, src)
}
func (m *ResourceDetail) XXX_Size() int {
	return m.Size()
}
func (m *ResourceDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceDetail proto.InternalMessageInfo

func (m *ResourceDetail) GetType() ResourceType {
	if m != nil {
		return m.Type
	}
	return ResourceType_RRU
}

func (m *ResourceDetail) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GroupSettings struct {
	RRU                  *TokenBucket `protobuf:"bytes,1,opt,name=r_r_u,json=rRU,proto3" json:"r_r_u,omitempty"`
	WRU                  *TokenBucket `protobuf:"bytes,2,opt,name=w_r_u,json=wRU,proto3" json:"w_r_u,omitempty"`
	ReadBandwidth        *TokenBucket `protobuf:"bytes,3,opt,name=read_bandwidth,json=readBandwidth,proto3" json:"read_bandwidth,omitempty"`
	WriteBandwidth       *TokenBucket `protobuf:"bytes,4,opt,name=write_bandwidth,json=writeBandwidth,proto3" json:"write_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupSettings) Reset()         { *m = GroupSettings{} }
func (m *GroupSettings) String() string { return proto.CompactTextString(m) }
func (*GroupSettings) ProtoMessage()    {}
func (*GroupSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{12}
}
func (m *GroupSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSettings.Merge(m, src)
}
func (m *GroupSettings) XXX_Size() int {
	return m.Size()
}
func (m *GroupSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSettings proto.InternalMessageInfo

func (m *GroupSettings) GetRRU() *TokenBucket {
	if m != nil {
		return m.RRU
	}
	return nil
}

func (m *GroupSettings) GetWRU() *TokenBucket {
	if m != nil {
		return m.WRU
	}
	return nil
}

func (m *GroupSettings) GetReadBandwidth() *TokenBucket {
	if m != nil {
		return m.ReadBandwidth
	}
	return nil
}

func (m *GroupSettings) GetWriteBandwidth() *TokenBucket {
	if m != nil {
		return m.WriteBandwidth
	}
	return nil
}

type TokenBucket struct {
	Settings             *TokenLimitSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	Tokens               float64             `protobuf:"fixed64,2,opt,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TokenBucket) Reset()         { *m = TokenBucket{} }
func (m *TokenBucket) String() string { return proto.CompactTextString(m) }
func (*TokenBucket) ProtoMessage()    {}
func (*TokenBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{13}
}
func (m *TokenBucket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenBucket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBucket.Merge(m, src)
}
func (m *TokenBucket) XXX_Size() int {
	return m.Size()
}
func (m *TokenBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBucket.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBucket proto.InternalMessageInfo

func (m *TokenBucket) GetSettings() *TokenLimitSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *TokenBucket) GetTokens() float64 {
	if m != nil {
		return m.Tokens
	}
	return 0
}

type TokenLimitSettings struct {
	Fillrate             uint64   `protobuf:"varint,1,opt,name=fillrate,proto3" json:"fillrate,omitempty"`
	BurstLimit           int64    `protobuf:"varint,2,opt,name=burst_limit,json=burstLimit,proto3" json:"burst_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenLimitSettings) Reset()         { *m = TokenLimitSettings{} }
func (m *TokenLimitSettings) String() string { return proto.CompactTextString(m) }
func (*TokenLimitSettings) ProtoMessage()    {}
func (*TokenLimitSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{14}
}
func (m *TokenLimitSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenLimitSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenLimitSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenLimitSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenLimitSettings.Merge(m, src)
}
func (m *TokenLimitSettings) XXX_Size() int {
	return m.Size()
}
func (m *TokenLimitSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenLimitSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TokenLimitSettings proto.InternalMessageInfo

func (m *TokenLimitSettings) GetFillrate() uint64 {
	if m != nil {
		return m.Fillrate
	}
	return 0
}

func (m *TokenLimitSettings) GetBurstLimit() int64 {
	if m != nil {
		return m.BurstLimit
	}
	return 0
}

type Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_7048dd9233ee965d, []int{15}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Error.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return m.Size()
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("resource_manager.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterType((*ListResourceGroupsRequest)(nil), "resource_manager.ListResourceGroupsRequest")
	proto.RegisterType((*ListResourceGroupsResponse)(nil), "resource_manager.ListResourceGroupsResponse")
	proto.RegisterType((*GetResourceGroupRequest)(nil), "resource_manager.GetResourceGroupRequest")
	proto.RegisterType((*GetResourceGroupResponse)(nil), "resource_manager.GetResourceGroupResponse")
	proto.RegisterType((*AddResourceGroupRequest)(nil), "resource_manager.AddResourceGroupRequest")
	proto.RegisterType((*AddResourceGroupRespose)(nil), "resource_manager.AddResourceGroupRespose")
	proto.RegisterType((*TokenBucketsRequest)(nil), "resource_manager.TokenBucketsRequest")
	proto.RegisterType((*TokenBucketRequst)(nil), "resource_manager.TokenBucketRequst")
	proto.RegisterType((*TokenBucketsResponse)(nil), "resource_manager.TokenBucketsResponse")
	proto.RegisterType((*GrantedTokenBucket)(nil), "resource_manager.GrantedTokenBucket")
	proto.RegisterType((*ResourceGroup)(nil), "resource_manager.ResourceGroup")
	proto.RegisterType((*ResourceDetail)(nil), "resource_manager.ResourceDetail")
	proto.RegisterType((*GroupSettings)(nil), "resource_manager.GroupSettings")
	proto.RegisterType((*TokenBucket)(nil), "resource_manager.TokenBucket")
	proto.RegisterType((*TokenLimitSettings)(nil), "resource_manager.TokenLimitSettings")
	proto.RegisterType((*Error)(nil), "resource_manager.Error")
}

func init() { proto.RegisterFile("resource_manager.proto", fileDescriptor_7048dd9233ee965d) }

var fileDescriptor_7048dd9233ee965d = []byte{
	// 935 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x6f, 0x1b, 0x45,
	0x18, 0xce, 0x64, 0xed, 0x7c, 0xbc, 0x89, 0x3f, 0xf2, 0x26, 0x6d, 0x8c, 0x0b, 0x4e, 0x58, 0x4a,
	0x15, 0x4a, 0x29, 0x60, 0x84, 0x7a, 0xe0, 0x00, 0x75, 0x0a, 0x39, 0xc4, 0x11, 0xe9, 0xc4, 0x6e,
	0x25, 0x2e, 0xab, 0x89, 0x3d, 0x5d, 0x16, 0xdb, 0xbb, 0xce, 0xcc, 0x2c, 0x51, 0x38, 0x21, 0xc1,
	0x1d, 0x09, 0x71, 0xe0, 0x27, 0x70, 0xe4, 0x67, 0x94, 0x1b, 0x47, 0x4e, 0x08, 0x85, 0x1f, 0x02,
	0x9a, 0xd9, 0xf5, 0x76, 0x9d, 0xb5, 0x1b, 0xbb, 0xb7, 0x9d, 0x77, 0x9e, 0xe7, 0x79, 0x3f, 0x67,
	0x67, 0xe0, 0xa6, 0xe0, 0x32, 0x08, 0x45, 0x87, 0x3b, 0x03, 0xe6, 0x33, 0x97, 0x8b, 0xfb, 0x43,
	0x11, 0xa8, 0x00, 0xcb, 0x57, 0xed, 0xd5, 0x2d, 0x37, 0x70, 0x03, 0xb3, 0xf9, 0xbe, 0xfe, 0x8a,
	0x70, 0xd5, 0x92, 0x08, 0xa5, 0x32, 0x9f, 0x91, 0xc1, 0xbe, 0x05, 0xaf, 0x35, 0x3d, 0xa9, 0x68,
	0x4c, 0x3f, 0x10, 0x41, 0x38, 0x94, 0x94, 0x9f, 0x85, 0x5c, 0x2a, 0xfb, 0x47, 0x02, 0xd5, 0x49,
	0xbb, 0x72, 0x18, 0xf8, 0x92, 0xe3, 0x7b, 0x90, 0xe7, 0x42, 0x04, 0xa2, 0x42, 0x76, 0xc9, 0xde,
	0x5a, 0x7d, 0xfb, 0x7e, 0x26, 0xb8, 0xcf, 0xf5, 0x36, 0x8d, 0x50, 0xf8, 0x00, 0x96, 0x5c, 0x23,
	0x50, 0x59, 0xdc, 0xb5, 0xf6, 0xd6, 0xea, 0x3b, 0x59, 0xfc, 0x98, 0x23, 0x1a, 0xc3, 0xed, 0x03,
	0xd8, 0x3e, 0xe0, 0xe3, 0x41, 0xc4, 0x11, 0xe2, 0x3d, 0xc0, 0x44, 0xc4, 0xa0, 0x1d, 0xc5, 0x5c,
	0x13, 0xcf, 0x3a, 0x4d, 0x6a, 0x62, 0x18, 0x2d, 0xe6, 0xda, 0xdf, 0x13, 0xa8, 0x64, 0x95, 0x5e,
	0x2d, 0x9b, 0x8f, 0x21, 0x6f, 0x1c, 0x56, 0x16, 0x0d, 0xfc, 0xda, 0x64, 0x22, 0xb4, 0x7d, 0x0c,
	0xdb, 0x0f, 0xbb, 0xdd, 0x89, 0xb9, 0x24, 0x8a, 0x64, 0x2e, 0xc5, 0x67, 0x93, 0x14, 0xe5, 0x30,
	0x98, 0x3f, 0xa5, 0xd7, 0x61, 0x55, 0xc4, 0xd5, 0x90, 0x26, 0xad, 0x75, 0xfa, 0xc2, 0x60, 0xff,
	0x44, 0x60, 0xb3, 0x15, 0xf4, 0xb8, 0xdf, 0x08, 0x3b, 0x3d, 0xae, 0x46, 0x43, 0x82, 0x9f, 0xc2,
	0x8a, 0x88, 0x3e, 0x65, 0x85, 0x98, 0xc6, 0xbe, 0x95, 0xf5, 0x93, 0x22, 0x6a, 0x9e, 0x54, 0x34,
	0x21, 0xe1, 0x03, 0xa8, 0x28, 0x26, 0x5c, 0xae, 0x9c, 0xd8, 0xe4, 0x0c, 0xb9, 0xf0, 0x82, 0xae,
	0x33, 0x88, 0xa2, 0xc8, 0xd1, 0x1b, 0xd1, 0x7e, 0xec, 0xf1, 0xd8, 0xec, 0x1e, 0x49, 0xfb, 0x3f,
	0x02, 0x1b, 0x19, 0xe1, 0xf9, 0x46, 0x02, 0xbf, 0xd4, 0x68, 0x23, 0xcb, 0xbb, 0xce, 0x68, 0x37,
	0x1e, 0xd0, 0xdd, 0xe9, 0x1d, 0x78, 0xc4, 0x15, 0xf3, 0xfa, 0x74, 0x23, 0xe1, 0x8e, 0x36, 0xb0,
	0x07, 0xb5, 0x4e, 0xe0, 0xcb, 0x70, 0x30, 0x54, 0x5e, 0xe0, 0x3b, 0xd2, 0xf3, 0x3b, 0xdc, 0xe9,
	0x33, 0x99, 0x64, 0x57, 0xb1, 0x66, 0x13, 0x6f, 0xe4, 0x9e, 0xff, 0xbd, 0xb3, 0x40, 0x6f, 0xa5,
	0xd4, 0x4e, 0xb4, 0x58, 0x93, 0xc9, 0x51, 0x25, 0xec, 0x9f, 0x09, 0x6c, 0x8d, 0xf7, 0xe4, 0xd5,
	0x86, 0xf9, 0x10, 0x8a, 0xae, 0x60, 0xbe, 0xae, 0x81, 0xd2, 0x72, 0xa3, 0x23, 0x7a, 0x3b, 0xcb,
	0x3b, 0x88, 0x70, 0xe9, 0xba, 0x17, 0xdc, 0x94, 0x4d, 0xda, 0xbf, 0x13, 0xc0, 0x2c, 0x6a, 0xce,
	0xbe, 0x3c, 0x9a, 0x10, 0x91, 0xce, 0xe4, 0x8d, 0x97, 0xcf, 0xd6, 0x78, 0x28, 0x78, 0x07, 0x4a,
	0x4a, 0x78, 0x9d, 0x5e, 0x9f, 0x3b, 0xca, 0x1b, 0x70, 0x3d, 0x51, 0xd6, 0x2e, 0xd9, 0xb3, 0x68,
	0x21, 0x36, 0xb7, 0xbc, 0x01, 0x3f, 0x92, 0xf6, 0x77, 0x50, 0x18, 0x3b, 0x40, 0x73, 0x06, 0xfb,
	0x09, 0xac, 0x48, 0xae, 0x94, 0xe7, 0xbb, 0x72, 0xfa, 0xef, 0xc0, 0xa0, 0x4f, 0x62, 0x18, 0x4d,
	0x08, 0xf6, 0x57, 0x50, 0x1c, 0x6f, 0x3c, 0xd6, 0x21, 0xa7, 0x2e, 0x86, 0xdc, 0xb8, 0x2b, 0xd6,
	0x6b, 0xd3, 0x07, 0xa5, 0x75, 0x31, 0xe4, 0xd4, 0x60, 0x71, 0x0b, 0xf2, 0xdf, 0xb2, 0x7e, 0xc8,
	0xe3, 0x13, 0x13, 0x2d, 0xec, 0x1f, 0x16, 0xa1, 0x30, 0xe6, 0x17, 0x3f, 0x84, 0xbc, 0x70, 0x84,
	0x13, 0xc6, 0x83, 0x71, 0x4d, 0x39, 0x2d, 0x41, 0xdb, 0x9a, 0x72, 0x6e, 0x28, 0x33, 0x75, 0xc0,
	0x3a, 0xa7, 0x6d, 0xdd, 0x3d, 0xc1, 0x59, 0xd7, 0x39, 0x65, 0x7e, 0xf7, 0xdc, 0xeb, 0xaa, 0xaf,
	0x4d, 0xd9, 0xaf, 0xef, 0x9e, 0x26, 0x35, 0x46, 0x1c, 0xfc, 0x02, 0x4a, 0xe7, 0xc2, 0x53, 0x3c,
	0x25, 0x93, 0x9b, 0x45, 0xa6, 0x68, 0x58, 0x89, 0x8e, 0xed, 0xc2, 0x5a, 0x7a, 0x10, 0x3f, 0x4b,
	0x75, 0x2b, 0xaa, 0xc2, 0xed, 0x29, 0x7a, 0x4d, 0x6f, 0xe0, 0xa9, 0x6c, 0xcb, 0xf0, 0x26, 0x2c,
	0xa5, 0x86, 0x92, 0xd0, 0x78, 0x65, 0x3f, 0x06, 0xcc, 0xf2, 0xb0, 0x0a, 0x2b, 0xcf, 0xbc, 0x7e,
	0x5f, 0x30, 0x15, 0xb5, 0x34, 0x47, 0x93, 0x35, 0xee, 0xc0, 0xda, 0x69, 0x28, 0xa4, 0x72, 0xfa,
	0x9a, 0x62, 0xe4, 0x2c, 0x0a, 0xc6, 0x64, 0x44, 0xec, 0x37, 0x21, 0x6f, 0x4e, 0x2a, 0x56, 0x60,
	0x79, 0xc0, 0xa5, 0x64, 0x6e, 0x24, 0xb2, 0x4a, 0x47, 0xcb, 0xbb, 0xbf, 0x10, 0x58, 0x4f, 0x4f,
	0x04, 0x2e, 0x83, 0x45, 0x69, 0xbb, 0xbc, 0xa0, 0x3f, 0x9e, 0xd2, 0x76, 0x99, 0x20, 0x42, 0xf1,
	0xf0, 0x09, 0xe5, 0xac, 0x4b, 0x8f, 0xf7, 0xf7, 0x83, 0xd0, 0x57, 0xe5, 0x45, 0xdc, 0x84, 0xd2,
	0xe1, 0x93, 0xa7, 0xba, 0x52, 0x89, 0xd1, 0xc2, 0x02, 0xac, 0x6a, 0x58, 0xe3, 0x42, 0x71, 0x59,
	0xce, 0x61, 0x11, 0xc0, 0x20, 0xa2, 0x75, 0x5e, 0x73, 0x5a, 0x81, 0x0a, 0x58, 0x7f, 0xff, 0xb8,
	0x1d, 0x1d, 0x9d, 0xf2, 0x12, 0xde, 0x80, 0x8d, 0x93, 0xc7, 0xcd, 0x26, 0xbb, 0xe0, 0xe2, 0x85,
	0x79, 0xb9, 0xfe, 0x87, 0x05, 0xa5, 0x51, 0x58, 0x47, 0x51, 0x55, 0xf1, 0x0c, 0x30, 0xfb, 0x9e,
	0xc0, 0x77, 0xb3, 0xe5, 0x9f, 0xfa, 0x26, 0xa9, 0xde, 0x9b, 0x0d, 0x1c, 0xfd, 0x07, 0xed, 0x05,
	0xec, 0x41, 0xf9, 0xea, 0x95, 0x8f, 0xef, 0x4c, 0x38, 0x9d, 0x93, 0x1f, 0x18, 0xd5, 0xbb, 0xb3,
	0x40, 0x13, 0x67, 0xdf, 0x40, 0xf9, 0xea, 0x5d, 0x3c, 0xc9, 0xd9, 0x94, 0x17, 0x40, 0x75, 0x26,
	0xa8, 0xb9, 0xda, 0x8d, 0xaf, 0xcd, 0x87, 0x9d, 0xb3, 0xd0, 0x13, 0x3c, 0x7d, 0x03, 0xe0, 0xdb,
	0x2f, 0x3d, 0x1b, 0x49, 0x19, 0xef, 0x5c, 0x07, 0x1b, 0xe5, 0xb4, 0x47, 0x3e, 0x20, 0x8d, 0xad,
	0xbf, 0x7e, 0x5b, 0x21, 0xcf, 0x2f, 0x6b, 0xe4, 0xcf, 0xcb, 0x1a, 0xf9, 0xe7, 0xb2, 0x46, 0x7e,
	0xfd, 0xb7, 0xb6, 0x70, 0xba, 0x64, 0x9e, 0x90, 0x1f, 0xfd, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x92,
	0xa5, 0x72, 0x21, 0x95, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerClient is the client API for ResourceManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerClient interface {
	ListResourceGroups(ctx context.Context, in *ListResourceGroupsRequest, opts ...grpc.CallOption) (*ListResourceGroupsResponse, error)
	GetResourceGroup(ctx context.Context, in *GetResourceGroupRequest, opts ...grpc.CallOption) (*GetResourceGroupResponse, error)
	AddResourceGroup(ctx context.Context, in *AddResourceGroupRequest, opts ...grpc.CallOption) (*AddResourceGroupRespose, error)
	AcquireTokenBuckets(ctx context.Context, opts ...grpc.CallOption) (ResourceManager_AcquireTokenBucketsClient, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) ListResourceGroups(ctx context.Context, in *ListResourceGroupsRequest, opts ...grpc.CallOption) (*ListResourceGroupsResponse, error) {
	out := new(ListResourceGroupsResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/ListResourceGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetResourceGroup(ctx context.Context, in *GetResourceGroupRequest, opts ...grpc.CallOption) (*GetResourceGroupResponse, error) {
	out := new(GetResourceGroupResponse)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/GetResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) AddResourceGroup(ctx context.Context, in *AddResourceGroupRequest, opts ...grpc.CallOption) (*AddResourceGroupRespose, error) {
	out := new(AddResourceGroupRespose)
	err := c.cc.Invoke(ctx, "/resource_manager.ResourceManager/AddResourceGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) AcquireTokenBuckets(ctx context.Context, opts ...grpc.CallOption) (ResourceManager_AcquireTokenBucketsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceManager_serviceDesc.Streams[0], "/resource_manager.ResourceManager/AcquireTokenBuckets", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceManagerAcquireTokenBucketsClient{stream}
	return x, nil
}

type ResourceManager_AcquireTokenBucketsClient interface {
	Send(*TokenBucketsRequest) error
	Recv() (*TokenBucketsResponse, error)
	grpc.ClientStream
}

type resourceManagerAcquireTokenBucketsClient struct {
	grpc.ClientStream
}

func (x *resourceManagerAcquireTokenBucketsClient) Send(m *TokenBucketsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *resourceManagerAcquireTokenBucketsClient) Recv() (*TokenBucketsResponse, error) {
	m := new(TokenBucketsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourceManagerServer is the server API for ResourceManager service.
type ResourceManagerServer interface {
	ListResourceGroups(context.Context, *ListResourceGroupsRequest) (*ListResourceGroupsResponse, error)
	GetResourceGroup(context.Context, *GetResourceGroupRequest) (*GetResourceGroupResponse, error)
	AddResourceGroup(context.Context, *AddResourceGroupRequest) (*AddResourceGroupRespose, error)
	AcquireTokenBuckets(ResourceManager_AcquireTokenBucketsServer) error
}

// UnimplementedResourceManagerServer can be embedded to have forward compatible implementations.
type UnimplementedResourceManagerServer struct {
}

func (*UnimplementedResourceManagerServer) ListResourceGroups(ctx context.Context, req *ListResourceGroupsRequest) (*ListResourceGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceGroups not implemented")
}
func (*UnimplementedResourceManagerServer) GetResourceGroup(ctx context.Context, req *GetResourceGroupRequest) (*GetResourceGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) AddResourceGroup(ctx context.Context, req *AddResourceGroupRequest) (*AddResourceGroupRespose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResourceGroup not implemented")
}
func (*UnimplementedResourceManagerServer) AcquireTokenBuckets(srv ResourceManager_AcquireTokenBucketsServer) error {
	return status.Errorf(codes.Unimplemented, "method AcquireTokenBuckets not implemented")
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_ListResourceGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).ListResourceGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/ListResourceGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).ListResourceGroups(ctx, req.(*ListResourceGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/GetResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetResourceGroup(ctx, req.(*GetResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_AddResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).AddResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resource_manager.ResourceManager/AddResourceGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).AddResourceGroup(ctx, req.(*AddResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_AcquireTokenBuckets_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ResourceManagerServer).AcquireTokenBuckets(&resourceManagerAcquireTokenBucketsServer{stream})
}

type ResourceManager_AcquireTokenBucketsServer interface {
	Send(*TokenBucketsResponse) error
	Recv() (*TokenBucketsRequest, error)
	grpc.ServerStream
}

type resourceManagerAcquireTokenBucketsServer struct {
	grpc.ServerStream
}

func (x *resourceManagerAcquireTokenBucketsServer) Send(m *TokenBucketsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *resourceManagerAcquireTokenBucketsServer) Recv() (*TokenBucketsRequest, error) {
	m := new(TokenBucketsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resource_manager.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListResourceGroups",
			Handler:    _ResourceManager_ListResourceGroups_Handler,
		},
		{
			MethodName: "GetResourceGroup",
			Handler:    _ResourceManager_GetResourceGroup_Handler,
		},
		{
			MethodName: "AddResourceGroup",
			Handler:    _ResourceManager_AddResourceGroup_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AcquireTokenBuckets",
			Handler:       _ResourceManager_AcquireTokenBuckets_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "resource_manager.proto",
}

func (m *ListResourceGroupsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceGroupsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceGroupsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListResourceGroupsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceGroupsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceGroupsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Groups) > 0 {
		for iNdEx := len(m.Groups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Groups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceGroupTag) > 0 {
		i -= len(m.ResourceGroupTag)
		copy(dAtA[i:], m.ResourceGroupTag)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddResourceGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddResourceGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddResourceGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddResourceGroupRespose) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddResourceGroupRespose) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddResourceGroupRespose) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Responses) > 0 {
		i -= len(m.Responses)
		copy(dAtA[i:], m.Responses)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Responses)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TargetRequestPeriodMs != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.TargetRequestPeriodMs))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Requests) > 0 {
		for iNdEx := len(m.Requests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Requests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketRequst) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketRequst) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketRequst) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConsumptionSinceLastRequest) > 0 {
		for iNdEx := len(m.ConsumptionSinceLastRequest) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ConsumptionSinceLastRequest[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.RequestedResource) > 0 {
		for iNdEx := len(m.RequestedResource) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RequestedResource[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ResourceGroupTag) > 0 {
		i -= len(m.ResourceGroupTag)
		copy(dAtA[i:], m.ResourceGroupTag)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucketsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucketsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucketsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GrantedTokens) > 0 {
		for iNdEx := len(m.GrantedTokens) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GrantedTokens[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceManager(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantedTokenBucket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantedTokenBucket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantedTokenBucket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TrickleTimeMs != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.TrickleTimeMs))
		i--
		dAtA[i] = 0x18
	}
	if m.GrantedTokens != nil {
		{
			size, err := m.GrantedTokens.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceGroupTag) > 0 {
		i -= len(m.ResourceGroupTag)
		copy(dAtA[i:], m.ResourceGroupTag)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceGroupTag) > 0 {
		i -= len(m.ResourceGroupTag)
		copy(dAtA[i:], m.ResourceGroupTag)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.ResourceGroupTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Value))
		i--
		dAtA[i] = 0x10
	}
	if m.Type != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GroupSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WriteBandwidth != nil {
		{
			size, err := m.WriteBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ReadBandwidth != nil {
		{
			size, err := m.ReadBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.WRU != nil {
		{
			size, err := m.WRU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RRU != nil {
		{
			size, err := m.RRU.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenBucket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenBucket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenBucket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tokens != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Tokens))))
		i--
		dAtA[i] = 0x11
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceManager(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TokenLimitSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenLimitSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenLimitSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BurstLimit != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.BurstLimit))
		i--
		dAtA[i] = 0x10
	}
	if m.Fillrate != 0 {
		i = encodeVarintResourceManager(dAtA, i, uint64(m.Fillrate))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Error) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Error) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Error) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintResourceManager(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResourceManager(dAtA []byte, offset int, v uint64) int {
	offset -= sovResourceManager(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListResourceGroupsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListResourceGroupsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.Groups) > 0 {
		for _, e := range m.Groups {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetResourceGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupTag)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetResourceGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddResourceGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddResourceGroupRespose) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	l = len(m.Responses)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Requests) > 0 {
		for _, e := range m.Requests {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.TargetRequestPeriodMs != 0 {
		n += 1 + sovResourceManager(uint64(m.TargetRequestPeriodMs))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketRequst) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupTag)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.RequestedResource) > 0 {
		for _, e := range m.RequestedResource {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if len(m.ConsumptionSinceLastRequest) > 0 {
		for _, e := range m.ConsumptionSinceLastRequest {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucketsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if len(m.GrantedTokens) > 0 {
		for _, e := range m.GrantedTokens {
			l = e.Size()
			n += 1 + l + sovResourceManager(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrantedTokenBucket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupTag)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.GrantedTokens != nil {
		l = m.GrantedTokens.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.TrickleTimeMs != 0 {
		n += 1 + sovResourceManager(uint64(m.TrickleTimeMs))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupTag)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovResourceManager(uint64(m.Type))
	}
	if m.Value != 0 {
		n += 1 + sovResourceManager(uint64(m.Value))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RRU != nil {
		l = m.RRU.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.WRU != nil {
		l = m.WRU.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.ReadBandwidth != nil {
		l = m.ReadBandwidth.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.WriteBandwidth != nil {
		l = m.WriteBandwidth.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenBucket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.Tokens != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TokenLimitSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Fillrate != 0 {
		n += 1 + sovResourceManager(uint64(m.Fillrate))
	}
	if m.BurstLimit != 0 {
		n += 1 + sovResourceManager(uint64(m.BurstLimit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Error) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovResourceManager(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovResourceManager(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResourceManager(x uint64) (n int) {
	return sovResourceManager(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ListResourceGroupsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceGroupsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceGroupsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListResourceGroupsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceGroupsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceGroupsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Groups = append(m.Groups, &ResourceGroup{})
			if err := m.Groups[len(m.Groups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupTag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupTag = append(m.ResourceGroupTag[:0], dAtA[iNdEx:postIndex]...)
			if m.ResourceGroupTag == nil {
				m.ResourceGroupTag = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &ResourceGroup{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddResourceGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddResourceGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddResourceGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &ResourceGroup{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddResourceGroupRespose) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddResourceGroupRespose: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddResourceGroupRespose: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Responses", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Responses = append(m.Responses[:0], dAtA[iNdEx:postIndex]...)
			if m.Responses == nil {
				m.Responses = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Requests = append(m.Requests, &TokenBucketRequst{})
			if err := m.Requests[len(m.Requests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetRequestPeriodMs", wireType)
			}
			m.TargetRequestPeriodMs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetRequestPeriodMs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketRequst) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketRequst: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketRequst: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupTag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupTag = append(m.ResourceGroupTag[:0], dAtA[iNdEx:postIndex]...)
			if m.ResourceGroupTag == nil {
				m.ResourceGroupTag = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestedResource = append(m.RequestedResource, &ResourceDetail{})
			if err := m.RequestedResource[len(m.RequestedResource)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumptionSinceLastRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumptionSinceLastRequest = append(m.ConsumptionSinceLastRequest, ResourceDetail{})
			if err := m.ConsumptionSinceLastRequest[len(m.ConsumptionSinceLastRequest)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucketsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucketsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucketsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrantedTokens = append(m.GrantedTokens, &GrantedTokenBucket{})
			if err := m.GrantedTokens[len(m.GrantedTokens)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantedTokenBucket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantedTokenBucket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantedTokenBucket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupTag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupTag = append(m.ResourceGroupTag[:0], dAtA[iNdEx:postIndex]...)
			if m.ResourceGroupTag == nil {
				m.ResourceGroupTag = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrantedTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GrantedTokens == nil {
				m.GrantedTokens = &TokenBucket{}
			}
			if err := m.GrantedTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrickleTimeMs", wireType)
			}
			m.TrickleTimeMs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TrickleTimeMs |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupTag", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupTag = append(m.ResourceGroupTag[:0], dAtA[iNdEx:postIndex]...)
			if m.ResourceGroupTag == nil {
				m.ResourceGroupTag = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &GroupSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ResourceType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			m.Value = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Value |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RRU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RRU == nil {
				m.RRU = &TokenBucket{}
			}
			if err := m.RRU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WRU", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WRU == nil {
				m.WRU = &TokenBucket{}
			}
			if err := m.WRU.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReadBandwidth == nil {
				m.ReadBandwidth = &TokenBucket{}
			}
			if err := m.ReadBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WriteBandwidth == nil {
				m.WriteBandwidth = &TokenBucket{}
			}
			if err := m.WriteBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenBucket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenBucket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenBucket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &TokenLimitSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tokens", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Tokens = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TokenLimitSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenLimitSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenLimitSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fillrate", wireType)
			}
			m.Fillrate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fillrate |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BurstLimit", wireType)
			}
			m.BurstLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BurstLimit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Error) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Error: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Error: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceManager
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceManager
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceManager(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceManager
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResourceManager(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResourceManager
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceManager
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResourceManager
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResourceManager
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResourceManager
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResourceManager        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResourceManager          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResourceManager = fmt.Errorf("proto: unexpected end of group")
)
