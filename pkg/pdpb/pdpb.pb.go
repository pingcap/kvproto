// Code generated by protoc-gen-go.
// source: pdpb.proto
// DO NOT EDIT!

/*
Package pdpb is a generated protocol buffer package.

It is generated from these files:
	pdpb.proto

It has these top-level messages:
	Leader
	TsoRequest
	Timestamp
	TsoResponse
	BootstrapRequest
	BootstrapResponse
	IsBootstrappedRequest
	IsBootstrappedResponse
	AllocIdRequest
	AllocIdResponse
	GetMetaRequest
	GetMetaResponse
	PutMetaRequest
	PutMetaResponse
	AskChangePeerRequest
	AskChangePeerResponse
	AskSplitRequest
	AskSplitResponse
	RequestHeader
	ResponseHeader
	Request
	Response
	BootstrappedError
	Error
*/
package pdpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metapb "github.com/pingcap/kvproto/pkg/metapb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CommandType int32

const (
	CommandType_Invalid        CommandType = 0
	CommandType_Tso            CommandType = 1
	CommandType_Bootstrap      CommandType = 2
	CommandType_IsBootstrapped CommandType = 3
	CommandType_AllocId        CommandType = 4
	CommandType_GetMeta        CommandType = 5
	CommandType_PutMeta        CommandType = 6
	CommandType_DeleteMeta     CommandType = 7
	CommandType_AskChangePeer  CommandType = 8
	CommandType_AskSplit       CommandType = 9
)

var CommandType_name = map[int32]string{
	0: "Invalid",
	1: "Tso",
	2: "Bootstrap",
	3: "IsBootstrapped",
	4: "AllocId",
	5: "GetMeta",
	6: "PutMeta",
	7: "DeleteMeta",
	8: "AskChangePeer",
	9: "AskSplit",
}
var CommandType_value = map[string]int32{
	"Invalid":        0,
	"Tso":            1,
	"Bootstrap":      2,
	"IsBootstrapped": 3,
	"AllocId":        4,
	"GetMeta":        5,
	"PutMeta":        6,
	"DeleteMeta":     7,
	"AskChangePeer":  8,
	"AskSplit":       9,
}

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}
func (x CommandType) String() string {
	return proto.EnumName(CommandType_name, int32(x))
}
func (x *CommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandType_value, data, "CommandType")
	if err != nil {
		return err
	}
	*x = CommandType(value)
	return nil
}
func (CommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MetaType int32

const (
	MetaType_InvalidMeta MetaType = 0
	MetaType_StoreType   MetaType = 1
	MetaType_RegionType  MetaType = 2
	MetaType_PeerType    MetaType = 3
	MetaType_ClusterType MetaType = 4
)

var MetaType_name = map[int32]string{
	0: "InvalidMeta",
	1: "StoreType",
	2: "RegionType",
	3: "PeerType",
	4: "ClusterType",
}
var MetaType_value = map[string]int32{
	"InvalidMeta": 0,
	"StoreType":   1,
	"RegionType":  2,
	"PeerType":    3,
	"ClusterType": 4,
}

func (x MetaType) Enum() *MetaType {
	p := new(MetaType)
	*p = x
	return p
}
func (x MetaType) String() string {
	return proto.EnumName(MetaType_name, int32(x))
}
func (x *MetaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetaType_value, data, "MetaType")
	if err != nil {
		return err
	}
	*x = MetaType(value)
	return nil
}
func (MetaType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Leader struct {
	Addr             *string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Pid              *int64  `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Leader) Reset()                    { *m = Leader{} }
func (m *Leader) String() string            { return proto.CompactTextString(m) }
func (*Leader) ProtoMessage()               {}
func (*Leader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Leader) GetAddr() string {
	if m != nil && m.Addr != nil {
		return *m.Addr
	}
	return ""
}

func (m *Leader) GetPid() int64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

type TsoRequest struct {
	Number           *uint32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TsoRequest) Reset()                    { *m = TsoRequest{} }
func (m *TsoRequest) String() string            { return proto.CompactTextString(m) }
func (*TsoRequest) ProtoMessage()               {}
func (*TsoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TsoRequest) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

type Timestamp struct {
	Physical         *int64 `protobuf:"varint,1,opt,name=physical" json:"physical,omitempty"`
	Logical          *int64 `protobuf:"varint,2,opt,name=logical" json:"logical,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Timestamp) GetPhysical() int64 {
	if m != nil && m.Physical != nil {
		return *m.Physical
	}
	return 0
}

func (m *Timestamp) GetLogical() int64 {
	if m != nil && m.Logical != nil {
		return *m.Logical
	}
	return 0
}

type TsoResponse struct {
	Timestamps       []*Timestamp `protobuf:"bytes,1,rep,name=timestamps" json:"timestamps,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *TsoResponse) Reset()                    { *m = TsoResponse{} }
func (m *TsoResponse) String() string            { return proto.CompactTextString(m) }
func (*TsoResponse) ProtoMessage()               {}
func (*TsoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TsoResponse) GetTimestamps() []*Timestamp {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

type BootstrapRequest struct {
	Store            *metapb.Store  `protobuf:"bytes,1,opt,name=store" json:"store,omitempty"`
	Region           *metapb.Region `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BootstrapRequest) Reset()                    { *m = BootstrapRequest{} }
func (m *BootstrapRequest) String() string            { return proto.CompactTextString(m) }
func (*BootstrapRequest) ProtoMessage()               {}
func (*BootstrapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BootstrapRequest) GetStore() *metapb.Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *BootstrapRequest) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type BootstrapResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BootstrapResponse) Reset()                    { *m = BootstrapResponse{} }
func (m *BootstrapResponse) String() string            { return proto.CompactTextString(m) }
func (*BootstrapResponse) ProtoMessage()               {}
func (*BootstrapResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type IsBootstrappedRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *IsBootstrappedRequest) Reset()                    { *m = IsBootstrappedRequest{} }
func (m *IsBootstrappedRequest) String() string            { return proto.CompactTextString(m) }
func (*IsBootstrappedRequest) ProtoMessage()               {}
func (*IsBootstrappedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type IsBootstrappedResponse struct {
	Bootstrapped     *bool  `protobuf:"varint,1,opt,name=bootstrapped" json:"bootstrapped,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IsBootstrappedResponse) Reset()                    { *m = IsBootstrappedResponse{} }
func (m *IsBootstrappedResponse) String() string            { return proto.CompactTextString(m) }
func (*IsBootstrappedResponse) ProtoMessage()               {}
func (*IsBootstrappedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *IsBootstrappedResponse) GetBootstrapped() bool {
	if m != nil && m.Bootstrapped != nil {
		return *m.Bootstrapped
	}
	return false
}

type AllocIdRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AllocIdRequest) Reset()                    { *m = AllocIdRequest{} }
func (m *AllocIdRequest) String() string            { return proto.CompactTextString(m) }
func (*AllocIdRequest) ProtoMessage()               {}
func (*AllocIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type AllocIdResponse struct {
	Id               *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllocIdResponse) Reset()                    { *m = AllocIdResponse{} }
func (m *AllocIdResponse) String() string            { return proto.CompactTextString(m) }
func (*AllocIdResponse) ProtoMessage()               {}
func (*AllocIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AllocIdResponse) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type GetMetaRequest struct {
	MetaType         *MetaType `protobuf:"varint,1,opt,name=meta_type,json=metaType,enum=pdpb.MetaType" json:"meta_type,omitempty"`
	StoreId          *uint64   `protobuf:"varint,2,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	RegionKey        []byte    `protobuf:"bytes,3,opt,name=region_key,json=regionKey" json:"region_key,omitempty"`
	ClusterId        *uint64   `protobuf:"varint,4,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GetMetaRequest) Reset()                    { *m = GetMetaRequest{} }
func (m *GetMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMetaRequest) ProtoMessage()               {}
func (*GetMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetMetaRequest) GetMetaType() MetaType {
	if m != nil && m.MetaType != nil {
		return *m.MetaType
	}
	return MetaType_InvalidMeta
}

func (m *GetMetaRequest) GetStoreId() uint64 {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return 0
}

func (m *GetMetaRequest) GetRegionKey() []byte {
	if m != nil {
		return m.RegionKey
	}
	return nil
}

func (m *GetMetaRequest) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

type GetMetaResponse struct {
	MetaType         *MetaType       `protobuf:"varint,1,opt,name=meta_type,json=metaType,enum=pdpb.MetaType" json:"meta_type,omitempty"`
	Store            *metapb.Store   `protobuf:"bytes,2,opt,name=store" json:"store,omitempty"`
	Region           *metapb.Region  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Cluster          *metapb.Cluster `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GetMetaResponse) Reset()                    { *m = GetMetaResponse{} }
func (m *GetMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMetaResponse) ProtoMessage()               {}
func (*GetMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetMetaResponse) GetMetaType() MetaType {
	if m != nil && m.MetaType != nil {
		return *m.MetaType
	}
	return MetaType_InvalidMeta
}

func (m *GetMetaResponse) GetStore() *metapb.Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *GetMetaResponse) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *GetMetaResponse) GetCluster() *metapb.Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type PutMetaRequest struct {
	MetaType         *MetaType       `protobuf:"varint,1,opt,name=meta_type,json=metaType,enum=pdpb.MetaType" json:"meta_type,omitempty"`
	Store            *metapb.Store   `protobuf:"bytes,2,opt,name=store" json:"store,omitempty"`
	Cluster          *metapb.Cluster `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PutMetaRequest) Reset()                    { *m = PutMetaRequest{} }
func (m *PutMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*PutMetaRequest) ProtoMessage()               {}
func (*PutMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PutMetaRequest) GetMetaType() MetaType {
	if m != nil && m.MetaType != nil {
		return *m.MetaType
	}
	return MetaType_InvalidMeta
}

func (m *PutMetaRequest) GetStore() *metapb.Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *PutMetaRequest) GetCluster() *metapb.Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type PutMetaResponse struct {
	MetaType         *MetaType `protobuf:"varint,1,opt,name=meta_type,json=metaType,enum=pdpb.MetaType" json:"meta_type,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PutMetaResponse) Reset()                    { *m = PutMetaResponse{} }
func (m *PutMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*PutMetaResponse) ProtoMessage()               {}
func (*PutMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PutMetaResponse) GetMetaType() MetaType {
	if m != nil && m.MetaType != nil {
		return *m.MetaType
	}
	return MetaType_InvalidMeta
}

type AskChangePeerRequest struct {
	Region *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	// The current leader store id of the region.
	// Pd can first try to send command to this store,
	// if the peer is not leader now, pd will try to
	// find the new leader of the region and then send
	// command again.
	LeaderStoreId    *uint64 `protobuf:"varint,2,opt,name=leader_store_id,json=leaderStoreId" json:"leader_store_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AskChangePeerRequest) Reset()                    { *m = AskChangePeerRequest{} }
func (m *AskChangePeerRequest) String() string            { return proto.CompactTextString(m) }
func (*AskChangePeerRequest) ProtoMessage()               {}
func (*AskChangePeerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AskChangePeerRequest) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *AskChangePeerRequest) GetLeaderStoreId() uint64 {
	if m != nil && m.LeaderStoreId != nil {
		return *m.LeaderStoreId
	}
	return 0
}

type AskChangePeerResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AskChangePeerResponse) Reset()                    { *m = AskChangePeerResponse{} }
func (m *AskChangePeerResponse) String() string            { return proto.CompactTextString(m) }
func (*AskChangePeerResponse) ProtoMessage()               {}
func (*AskChangePeerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type AskSplitRequest struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	SplitKey         []byte         `protobuf:"bytes,2,opt,name=split_key,json=splitKey" json:"split_key,omitempty"`
	LeaderStoreId    *uint64        `protobuf:"varint,3,opt,name=leader_store_id,json=leaderStoreId" json:"leader_store_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AskSplitRequest) Reset()                    { *m = AskSplitRequest{} }
func (m *AskSplitRequest) String() string            { return proto.CompactTextString(m) }
func (*AskSplitRequest) ProtoMessage()               {}
func (*AskSplitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AskSplitRequest) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *AskSplitRequest) GetSplitKey() []byte {
	if m != nil {
		return m.SplitKey
	}
	return nil
}

func (m *AskSplitRequest) GetLeaderStoreId() uint64 {
	if m != nil && m.LeaderStoreId != nil {
		return *m.LeaderStoreId
	}
	return 0
}

type AskSplitResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AskSplitResponse) Reset()                    { *m = AskSplitResponse{} }
func (m *AskSplitResponse) String() string            { return proto.CompactTextString(m) }
func (*AskSplitResponse) ProtoMessage()               {}
func (*AskSplitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type RequestHeader struct {
	// 16 bytes, to distinguish request.
	Uuid             []byte  `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ClusterId        *uint64 `protobuf:"varint,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RequestHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *RequestHeader) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

type ResponseHeader struct {
	// 16 bytes, to distinguish request.
	Uuid             []byte  `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ClusterId        *uint64 `protobuf:"varint,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Error            *Error  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ResponseHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *ResponseHeader) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

func (m *ResponseHeader) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Request struct {
	Header           *RequestHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CmdType          *CommandType           `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,enum=pdpb.CommandType" json:"cmd_type,omitempty"`
	Tso              *TsoRequest            `protobuf:"bytes,3,opt,name=tso" json:"tso,omitempty"`
	Bootstrap        *BootstrapRequest      `protobuf:"bytes,4,opt,name=bootstrap" json:"bootstrap,omitempty"`
	IsBootstrapped   *IsBootstrappedRequest `protobuf:"bytes,5,opt,name=is_bootstrapped,json=isBootstrapped" json:"is_bootstrapped,omitempty"`
	AllocId          *AllocIdRequest        `protobuf:"bytes,6,opt,name=alloc_id,json=allocId" json:"alloc_id,omitempty"`
	GetMeta          *GetMetaRequest        `protobuf:"bytes,7,opt,name=get_meta,json=getMeta" json:"get_meta,omitempty"`
	PutMeta          *PutMetaRequest        `protobuf:"bytes,8,opt,name=put_meta,json=putMeta" json:"put_meta,omitempty"`
	AskChangePeer    *AskChangePeerRequest  `protobuf:"bytes,9,opt,name=ask_change_peer,json=askChangePeer" json:"ask_change_peer,omitempty"`
	AskSplit         *AskSplitRequest       `protobuf:"bytes,10,opt,name=ask_split,json=askSplit" json:"ask_split,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Request) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Request) GetCmdType() CommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CommandType_Invalid
}

func (m *Request) GetTso() *TsoRequest {
	if m != nil {
		return m.Tso
	}
	return nil
}

func (m *Request) GetBootstrap() *BootstrapRequest {
	if m != nil {
		return m.Bootstrap
	}
	return nil
}

func (m *Request) GetIsBootstrapped() *IsBootstrappedRequest {
	if m != nil {
		return m.IsBootstrapped
	}
	return nil
}

func (m *Request) GetAllocId() *AllocIdRequest {
	if m != nil {
		return m.AllocId
	}
	return nil
}

func (m *Request) GetGetMeta() *GetMetaRequest {
	if m != nil {
		return m.GetMeta
	}
	return nil
}

func (m *Request) GetPutMeta() *PutMetaRequest {
	if m != nil {
		return m.PutMeta
	}
	return nil
}

func (m *Request) GetAskChangePeer() *AskChangePeerRequest {
	if m != nil {
		return m.AskChangePeer
	}
	return nil
}

func (m *Request) GetAskSplit() *AskSplitRequest {
	if m != nil {
		return m.AskSplit
	}
	return nil
}

type Response struct {
	Header           *ResponseHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CmdType          *CommandType            `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,enum=pdpb.CommandType" json:"cmd_type,omitempty"`
	Tso              *TsoResponse            `protobuf:"bytes,3,opt,name=tso" json:"tso,omitempty"`
	Bootstrap        *BootstrapResponse      `protobuf:"bytes,4,opt,name=bootstrap" json:"bootstrap,omitempty"`
	IsBootstrapped   *IsBootstrappedResponse `protobuf:"bytes,5,opt,name=is_bootstrapped,json=isBootstrapped" json:"is_bootstrapped,omitempty"`
	AllocId          *AllocIdResponse        `protobuf:"bytes,6,opt,name=alloc_id,json=allocId" json:"alloc_id,omitempty"`
	GetMeta          *GetMetaResponse        `protobuf:"bytes,7,opt,name=get_meta,json=getMeta" json:"get_meta,omitempty"`
	PutMeta          *PutMetaResponse        `protobuf:"bytes,8,opt,name=put_meta,json=putMeta" json:"put_meta,omitempty"`
	AskChangePeer    *AskChangePeerResponse  `protobuf:"bytes,9,opt,name=ask_change_peer,json=askChangePeer" json:"ask_change_peer,omitempty"`
	AskSplit         *AskSplitResponse       `protobuf:"bytes,10,opt,name=ask_split,json=askSplit" json:"ask_split,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Response) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Response) GetCmdType() CommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CommandType_Invalid
}

func (m *Response) GetTso() *TsoResponse {
	if m != nil {
		return m.Tso
	}
	return nil
}

func (m *Response) GetBootstrap() *BootstrapResponse {
	if m != nil {
		return m.Bootstrap
	}
	return nil
}

func (m *Response) GetIsBootstrapped() *IsBootstrappedResponse {
	if m != nil {
		return m.IsBootstrapped
	}
	return nil
}

func (m *Response) GetAllocId() *AllocIdResponse {
	if m != nil {
		return m.AllocId
	}
	return nil
}

func (m *Response) GetGetMeta() *GetMetaResponse {
	if m != nil {
		return m.GetMeta
	}
	return nil
}

func (m *Response) GetPutMeta() *PutMetaResponse {
	if m != nil {
		return m.PutMeta
	}
	return nil
}

func (m *Response) GetAskChangePeer() *AskChangePeerResponse {
	if m != nil {
		return m.AskChangePeer
	}
	return nil
}

func (m *Response) GetAskSplit() *AskSplitResponse {
	if m != nil {
		return m.AskSplit
	}
	return nil
}

type BootstrappedError struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BootstrappedError) Reset()                    { *m = BootstrappedError{} }
func (m *BootstrappedError) String() string            { return proto.CompactTextString(m) }
func (*BootstrappedError) ProtoMessage()               {}
func (*BootstrappedError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type Error struct {
	Message          *string            `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Bootstrapped     *BootstrappedError `protobuf:"bytes,2,opt,name=bootstrapped" json:"bootstrapped,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Error) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Error) GetBootstrapped() *BootstrappedError {
	if m != nil {
		return m.Bootstrapped
	}
	return nil
}

func init() {
	proto.RegisterType((*Leader)(nil), "pdpb.Leader")
	proto.RegisterType((*TsoRequest)(nil), "pdpb.TsoRequest")
	proto.RegisterType((*Timestamp)(nil), "pdpb.Timestamp")
	proto.RegisterType((*TsoResponse)(nil), "pdpb.TsoResponse")
	proto.RegisterType((*BootstrapRequest)(nil), "pdpb.BootstrapRequest")
	proto.RegisterType((*BootstrapResponse)(nil), "pdpb.BootstrapResponse")
	proto.RegisterType((*IsBootstrappedRequest)(nil), "pdpb.IsBootstrappedRequest")
	proto.RegisterType((*IsBootstrappedResponse)(nil), "pdpb.IsBootstrappedResponse")
	proto.RegisterType((*AllocIdRequest)(nil), "pdpb.AllocIdRequest")
	proto.RegisterType((*AllocIdResponse)(nil), "pdpb.AllocIdResponse")
	proto.RegisterType((*GetMetaRequest)(nil), "pdpb.GetMetaRequest")
	proto.RegisterType((*GetMetaResponse)(nil), "pdpb.GetMetaResponse")
	proto.RegisterType((*PutMetaRequest)(nil), "pdpb.PutMetaRequest")
	proto.RegisterType((*PutMetaResponse)(nil), "pdpb.PutMetaResponse")
	proto.RegisterType((*AskChangePeerRequest)(nil), "pdpb.AskChangePeerRequest")
	proto.RegisterType((*AskChangePeerResponse)(nil), "pdpb.AskChangePeerResponse")
	proto.RegisterType((*AskSplitRequest)(nil), "pdpb.AskSplitRequest")
	proto.RegisterType((*AskSplitResponse)(nil), "pdpb.AskSplitResponse")
	proto.RegisterType((*RequestHeader)(nil), "pdpb.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "pdpb.ResponseHeader")
	proto.RegisterType((*Request)(nil), "pdpb.Request")
	proto.RegisterType((*Response)(nil), "pdpb.Response")
	proto.RegisterType((*BootstrappedError)(nil), "pdpb.BootstrappedError")
	proto.RegisterType((*Error)(nil), "pdpb.Error")
	proto.RegisterEnum("pdpb.CommandType", CommandType_name, CommandType_value)
	proto.RegisterEnum("pdpb.MetaType", MetaType_name, MetaType_value)
}

var fileDescriptor0 = []byte{
	// 1040 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x96, 0xdf, 0x6f, 0xe3, 0x44,
	0x10, 0xc7, 0x2f, 0x71, 0x1a, 0xdb, 0x93, 0x5f, 0xee, 0x5e, 0xd3, 0x0b, 0x2d, 0x48, 0xdc, 0x1e,
	0x3a, 0x1d, 0xc7, 0xa9, 0x54, 0x05, 0x9e, 0x40, 0x27, 0xb5, 0xbd, 0x13, 0x44, 0x80, 0x74, 0xda,
	0xf6, 0x85, 0x17, 0x22, 0x37, 0xde, 0x4b, 0xa3, 0x26, 0xb1, 0x89, 0x1d, 0xa4, 0xbe, 0xf0, 0x1f,
	0x20, 0xde, 0x90, 0x78, 0xe1, 0xcf, 0xe0, 0xef, 0x63, 0x77, 0x76, 0xd6, 0xb1, 0x9d, 0xdc, 0xaf,
	0xbe, 0xed, 0xcc, 0xee, 0x77, 0x76, 0x3c, 0xfb, 0xf1, 0xec, 0x02, 0x24, 0x51, 0x72, 0x75, 0x94,
	0x2c, 0xe3, 0x2c, 0x66, 0x0d, 0x3d, 0x3e, 0x68, 0xcf, 0x65, 0x16, 0x5a, 0x1f, 0x3f, 0x82, 0xe6,
	0x4f, 0x32, 0x8c, 0xe4, 0x92, 0x31, 0x68, 0x84, 0x51, 0xb4, 0x1c, 0xd4, 0x3e, 0xad, 0x3d, 0xf1,
	0x05, 0x8e, 0x59, 0x00, 0x4e, 0x32, 0x8d, 0x06, 0x75, 0xe5, 0x72, 0x84, 0x1e, 0xf2, 0xcf, 0x00,
	0x2e, 0xd3, 0x58, 0xc8, 0xdf, 0x56, 0x32, 0xcd, 0xd8, 0x3e, 0x34, 0x17, 0xab, 0xf9, 0x95, 0x34,
	0xaa, 0x8e, 0x20, 0x8b, 0x9f, 0x82, 0x7f, 0x39, 0x9d, 0xab, 0x15, 0xe1, 0x3c, 0x61, 0x07, 0xe0,
	0x25, 0xd7, 0xb7, 0xe9, 0x74, 0x1c, 0xce, 0x70, 0x99, 0x23, 0x72, 0x9b, 0x0d, 0xc0, 0x9d, 0xc5,
	0x13, 0x9c, 0x32, 0x9b, 0x58, 0x93, 0x3f, 0x87, 0x16, 0x6e, 0x94, 0x26, 0xf1, 0x22, 0x95, 0xec,
	0x4b, 0x80, 0xcc, 0x46, 0x4c, 0x55, 0x18, 0xe7, 0x49, 0xeb, 0xa4, 0x77, 0x84, 0x1f, 0x97, 0xef,
	0x24, 0x0a, 0x4b, 0xf8, 0x08, 0x82, 0xb3, 0x38, 0xce, 0xd2, 0x6c, 0x19, 0x26, 0x36, 0xdd, 0x47,
	0xb0, 0x93, 0x66, 0xf1, 0x52, 0x62, 0x1a, 0xad, 0x93, 0xce, 0x11, 0x95, 0xe2, 0x42, 0x3b, 0x85,
	0x99, 0x63, 0x8f, 0xa1, 0xb9, 0x94, 0x93, 0x69, 0xbc, 0xc0, 0x8c, 0x5a, 0x27, 0x5d, 0xbb, 0x4a,
	0xa0, 0x57, 0xd0, 0x2c, 0xbf, 0x0f, 0xbb, 0x85, 0x0d, 0x4c, 0x9a, 0xfc, 0x01, 0xf4, 0x87, 0x69,
	0xee, 0x4e, 0x64, 0x44, 0x5b, 0xf3, 0xef, 0x60, 0xbf, 0x3a, 0x41, 0x5f, 0xc6, 0xa1, 0x7d, 0x55,
	0xf0, 0x63, 0x6e, 0x9e, 0x28, 0xf9, 0x78, 0x00, 0xdd, 0xd3, 0xd9, 0x2c, 0x1e, 0x0f, 0xf3, 0x78,
	0x0f, 0xa1, 0x97, 0x7b, 0x28, 0x50, 0x17, 0xea, 0x53, 0x23, 0x6f, 0x08, 0x35, 0xe2, 0x7f, 0xd7,
	0xa0, 0xfb, 0xbd, 0xcc, 0x7e, 0x56, 0xd9, 0xdb, 0x02, 0x7c, 0x01, 0xbe, 0xfe, 0x98, 0x51, 0x76,
	0x9b, 0x98, 0x22, 0x74, 0xd5, 0xe7, 0x61, 0x11, 0xf5, 0xaa, 0x4b, 0xe5, 0x15, 0xde, 0x9c, 0x46,
	0xec, 0x23, 0xf0, 0xb0, 0x22, 0x23, 0x22, 0xa0, 0x21, 0x5c, 0xb4, 0x87, 0x11, 0xfb, 0x04, 0xc0,
	0x54, 0x61, 0x74, 0x23, 0x6f, 0x07, 0x8e, 0x9a, 0x6c, 0x0b, 0xdf, 0x78, 0x7e, 0x94, 0xb7, 0x7a,
	0x7a, 0x3c, 0x5b, 0xa5, 0x99, 0x5c, 0x6a, 0x6d, 0x03, 0xb5, 0x3e, 0x79, 0x86, 0x11, 0xff, 0xaf,
	0x06, 0xbd, 0x3c, 0x31, 0x4a, 0xfe, 0x83, 0x32, 0xcb, 0xcf, 0xb1, 0xfe, 0x5e, 0xe7, 0xe8, 0xbc,
	0xed, 0x1c, 0xd9, 0xe7, 0xe0, 0x52, 0x6a, 0x98, 0xa9, 0xc6, 0x8a, 0x16, 0x9e, 0x1b, 0xb7, 0xb0,
	0xf3, 0xfc, 0x4f, 0x55, 0xd1, 0x57, 0xab, 0xbb, 0x57, 0xf4, 0xbd, 0xf2, 0x2e, 0xe4, 0xe3, 0xbc,
	0x23, 0x9f, 0xe7, 0xd0, 0xcb, 0xd3, 0xb9, 0x43, 0x1d, 0xf9, 0x6b, 0xd8, 0x3b, 0x4d, 0x6f, 0xce,
	0xaf, 0xc3, 0xc5, 0x44, 0xbe, 0x92, 0x2a, 0x32, 0x7d, 0xd4, 0xba, 0x74, 0xb5, 0xb7, 0x96, 0xee,
	0x31, 0xf4, 0x66, 0xd8, 0x3c, 0x46, 0x15, 0x50, 0x3a, 0xc6, 0x7d, 0x61, 0x70, 0xd1, 0x7f, 0x45,
	0x65, 0x1f, 0xfa, 0x5d, 0xfe, 0x50, 0x14, 0xa7, 0x37, 0x17, 0xc9, 0x6c, 0x9a, 0x7d, 0xe8, 0xde,
	0x87, 0xe0, 0xa7, 0x5a, 0x87, 0x04, 0xd6, 0x91, 0x40, 0x0f, 0x1d, 0x1a, 0xc0, 0x2d, 0x89, 0x39,
	0xdb, 0x12, 0x63, 0x10, 0xac, 0xf7, 0xa7, 0x9c, 0xce, 0xa0, 0x43, 0xb9, 0xfc, 0x90, 0x37, 0xc6,
	0xd5, 0x8a, 0xfe, 0xac, 0xb6, 0xc0, 0x71, 0x85, 0xf0, 0x7a, 0x95, 0xf0, 0xd7, 0xd0, 0xb5, 0xf1,
	0xee, 0x1c, 0x84, 0x3d, 0x84, 0x1d, 0xb9, 0x5c, 0xc6, 0x16, 0x83, 0x96, 0x39, 0xc6, 0x97, 0xda,
	0x25, 0xcc, 0x0c, 0xff, 0xab, 0x01, 0xee, 0x9a, 0xc4, 0xe6, 0x35, 0xee, 0x45, 0x85, 0xbb, 0x6f,
	0xd6, 0x97, 0xbe, 0x45, 0xd0, 0x12, 0xf6, 0x0c, 0xbc, 0xf1, 0x3c, 0x32, 0x94, 0xd4, 0x91, 0x92,
	0x5d, 0xb3, 0xfc, 0x3c, 0x9e, 0xcf, 0xc3, 0x45, 0x84, 0xa0, 0xb8, 0x6a, 0x09, 0x72, 0xcb, 0xc1,
	0xc9, 0xd2, 0x98, 0xf2, 0x08, 0xa8, 0xeb, 0xe6, 0xb7, 0x80, 0xd0, 0x93, 0xec, 0x6b, 0xf0, 0xf3,
	0x96, 0x45, 0x3f, 0xd2, 0xbe, 0x59, 0x59, 0x6d, 0xc3, 0x62, 0xbd, 0x90, 0xbd, 0x80, 0xde, 0x34,
	0x1d, 0x95, 0xfa, 0xdf, 0x0e, 0x6a, 0x0f, 0x8d, 0x76, 0x6b, 0x33, 0x15, 0xdd, 0x69, 0xc9, 0xad,
	0x2e, 0x07, 0x2f, 0xd4, 0xcd, 0x50, 0x97, 0xb1, 0x89, 0xf2, 0x3d, 0x23, 0x2f, 0x37, 0x4d, 0xe1,
	0x86, 0xc6, 0xd6, 0x82, 0x89, 0xcc, 0x46, 0x9a, 0xac, 0x81, 0x5b, 0x14, 0x94, 0xfb, 0xa5, 0x70,
	0x27, 0xc6, 0xd6, 0x82, 0x64, 0x45, 0x02, 0xaf, 0x28, 0x28, 0xb7, 0x03, 0xe1, 0x26, 0xc6, 0x66,
	0x67, 0xd0, 0x0b, 0xd3, 0x9b, 0xd1, 0x18, 0x99, 0x1f, 0x25, 0x0a, 0xfa, 0x81, 0x8f, 0xba, 0x03,
	0xca, 0x6c, 0xcb, 0x7f, 0x27, 0x3a, 0x61, 0xd1, 0xcb, 0x4e, 0xc0, 0xd7, 0x31, 0x90, 0xea, 0x01,
	0xa0, 0xba, 0x9f, 0xab, 0x8b, 0x3f, 0x8d, 0xf0, 0x42, 0x72, 0xf0, 0x7f, 0x1a, 0xe0, 0xe5, 0xcd,
	0xe0, 0x59, 0x05, 0x89, 0x3d, 0x8b, 0x44, 0x11, 0xcd, 0x3b, 0x32, 0xf1, 0xa8, 0xc8, 0xc4, 0x6e,
	0x81, 0x09, 0x13, 0xdb, 0x40, 0xf1, 0xcd, 0x26, 0x14, 0x0f, 0x36, 0xa0, 0x20, 0x41, 0x81, 0x8a,
	0x97, 0x6f, 0xa2, 0xe2, 0xe3, 0xed, 0x54, 0x50, 0x84, 0x2a, 0x16, 0xc7, 0x1b, 0x58, 0xf4, 0x2b,
	0x58, 0x90, 0x30, 0xe7, 0xe2, 0x78, 0x83, 0x8b, 0x7e, 0x85, 0x0b, 0xab, 0xb0, 0x60, 0x1c, 0x6f,
	0x80, 0xd1, 0xaf, 0x80, 0x61, 0x15, 0x96, 0x8c, 0xf3, 0x37, 0x91, 0x71, 0xb8, 0x95, 0x0c, 0x92,
	0x57, 0xd0, 0xf8, 0x6a, 0x13, 0x8d, 0xfd, 0x2a, 0x1a, 0xa4, 0x5c, 0xb3, 0x51, 0x7c, 0xb1, 0xa8,
	0xfa, 0x60, 0x27, 0xe1, 0xbf, 0xc2, 0x0e, 0x0e, 0xf4, 0x53, 0x4c, 0x3d, 0x9e, 0xd2, 0x70, 0x22,
	0xe9, 0x09, 0x68, 0x4d, 0xf6, 0x6d, 0xe5, 0x85, 0x52, 0xdf, 0x7a, 0x90, 0x36, 0x62, 0xf9, 0xe9,
	0xf2, 0xf4, 0xdf, 0x1a, 0xb4, 0x0a, 0x00, 0xb1, 0x16, 0xb8, 0xc3, 0xc5, 0xef, 0xe1, 0x6c, 0x1a,
	0x05, 0xf7, 0x98, 0x0b, 0x8e, 0x62, 0x26, 0xa8, 0xb1, 0x0e, 0xf8, 0x79, 0xa0, 0xa0, 0xae, 0xba,
	0x65, 0xb7, 0x7c, 0xc6, 0x81, 0xa3, 0x85, 0x74, 0x6e, 0x41, 0x43, 0x1b, 0x74, 0x24, 0xc1, 0x8e,
	0x36, 0xa8, 0xda, 0x41, 0x53, 0xbd, 0x82, 0xe0, 0x85, 0x9c, 0xc9, 0x4c, 0xa2, 0xed, 0xb2, 0x5d,
	0xe8, 0x94, 0x2a, 0x1a, 0x78, 0xac, 0x0d, 0x9e, 0xad, 0x52, 0xe0, 0x3f, 0xfd, 0x05, 0x3c, 0x7b,
	0x35, 0xb2, 0x1e, 0xb4, 0x28, 0x39, 0x54, 0xdf, 0xd3, 0x79, 0xe1, 0x5d, 0xa1, 0x67, 0x55, 0x9a,
	0x2a, 0xb8, 0xb9, 0x86, 0xd0, 0xae, 0xeb, 0x48, 0x3a, 0x26, 0x5a, 0x8e, 0x56, 0xd3, 0x15, 0x8d,
	0x8e, 0xc6, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x12, 0xcc, 0xb4, 0xd5, 0x7d, 0x0b, 0x00, 0x00,
}
